// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flow-messages-enriched.proto

package bwnetflow;

public final class FlowMessagePb {
  private FlowMessagePb() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FlowMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flowmessageenriched.FlowMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.flowmessageenriched.FlowMessage.FlowType Type = 1;</code>
     */
    int getTypeValue();
    /**
     * <code>.flowmessageenriched.FlowMessage.FlowType Type = 1;</code>
     */
    bwnetflow.FlowMessagePb.FlowMessage.FlowType getType();

    /**
     * <code>uint64 TimeRecvd = 2;</code>
     */
    long getTimeRecvd();

    /**
     * <code>uint64 SamplingRate = 3;</code>
     */
    long getSamplingRate();

    /**
     * <code>uint32 SequenceNum = 4;</code>
     */
    int getSequenceNum();

    /**
     * <pre>
     * Found inside packet
     * </pre>
     *
     * <code>uint64 TimeFlow = 5;</code>
     */
    long getTimeFlow();

    /**
     * <pre>
     * Source/destination addresses
     * </pre>
     *
     * <code>bytes SrcIP = 6;</code>
     */
    com.google.protobuf.ByteString getSrcIP();

    /**
     * <code>bytes DstIP = 7;</code>
     */
    com.google.protobuf.ByteString getDstIP();

    /**
     * <code>.flowmessageenriched.FlowMessage.IPType IPversion = 8;</code>
     */
    int getIPversionValue();
    /**
     * <code>.flowmessageenriched.FlowMessage.IPType IPversion = 8;</code>
     */
    bwnetflow.FlowMessagePb.FlowMessage.IPType getIPversion();

    /**
     * <pre>
     * Size of the sampled packet
     * </pre>
     *
     * <code>uint64 Bytes = 9;</code>
     */
    long getBytes();

    /**
     * <code>uint64 Packets = 10;</code>
     */
    long getPackets();

    /**
     * <pre>
     * Routing information
     * </pre>
     *
     * <code>bytes RouterAddr = 11;</code>
     */
    com.google.protobuf.ByteString getRouterAddr();

    /**
     * <code>bytes NextHop = 12;</code>
     */
    com.google.protobuf.ByteString getNextHop();

    /**
     * <code>uint32 NextHopAS = 13;</code>
     */
    int getNextHopAS();

    /**
     * <pre>
     * Autonomous system information
     * </pre>
     *
     * <code>uint32 SrcAS = 14;</code>
     */
    int getSrcAS();

    /**
     * <code>uint32 DstAS = 15;</code>
     */
    int getDstAS();

    /**
     * <pre>
     * Prefix size
     * </pre>
     *
     * <code>uint32 SrcNet = 16;</code>
     */
    int getSrcNet();

    /**
     * <code>uint32 DstNet = 17;</code>
     */
    int getDstNet();

    /**
     * <pre>
     * Interfaces
     * </pre>
     *
     * <code>uint32 SrcIf = 18;</code>
     */
    int getSrcIf();

    /**
     * <code>uint32 DstIf = 19;</code>
     */
    int getDstIf();

    /**
     * <pre>
     * Layer 4 protocol
     * </pre>
     *
     * <code>uint32 Proto = 20;</code>
     */
    int getProto();

    /**
     * <pre>
     * Port for UDP and TCP
     * </pre>
     *
     * <code>uint32 SrcPort = 21;</code>
     */
    int getSrcPort();

    /**
     * <code>uint32 DstPort = 22;</code>
     */
    int getDstPort();

    /**
     * <pre>
     * IP and TCP special flags
     * </pre>
     *
     * <code>uint32 IPTos = 23;</code>
     */
    int getIPTos();

    /**
     * <code>uint32 ForwardingStatus = 24;</code>
     */
    int getForwardingStatus();

    /**
     * <code>uint32 IPTTL = 25;</code>
     */
    int getIPTTL();

    /**
     * <code>uint32 TCPFlags = 26;</code>
     */
    int getTCPFlags();

    /**
     * <pre>
     * Ethernet information
     * </pre>
     *
     * <code>uint64 SrcMac = 27;</code>
     */
    long getSrcMac();

    /**
     * <code>uint64 DstMac = 28;</code>
     */
    long getDstMac();

    /**
     * <code>uint32 VlanId = 29;</code>
     */
    int getVlanId();

    /**
     * <pre>
     * Layer 3 protocol (IPv4/IPv6/ARP/...)
     * </pre>
     *
     * <code>uint32 Etype = 30;</code>
     */
    int getEtype();

    /**
     * <code>.flowmessageenriched.FlowMessage.DirectionType Direction = 90;</code>
     */
    int getDirectionValue();
    /**
     * <code>.flowmessageenriched.FlowMessage.DirectionType Direction = 90;</code>
     */
    bwnetflow.FlowMessagePb.FlowMessage.DirectionType getDirection();

    /**
     * <code>uint32 Cid = 91;</code>
     */
    int getCid();

    /**
     * <code>.flowmessageenriched.FlowMessage.NormalizedType Normalized = 92;</code>
     */
    int getNormalizedValue();
    /**
     * <code>.flowmessageenriched.FlowMessage.NormalizedType Normalized = 92;</code>
     */
    bwnetflow.FlowMessagePb.FlowMessage.NormalizedType getNormalized();

    /**
     * <code>string SrcIfName = 93;</code>
     */
    java.lang.String getSrcIfName();
    /**
     * <code>string SrcIfName = 93;</code>
     */
    com.google.protobuf.ByteString
        getSrcIfNameBytes();

    /**
     * <code>string SrcIfDesc = 94;</code>
     */
    java.lang.String getSrcIfDesc();
    /**
     * <code>string SrcIfDesc = 94;</code>
     */
    com.google.protobuf.ByteString
        getSrcIfDescBytes();

    /**
     * <code>uint32 SrcIfSpeed = 95;</code>
     */
    int getSrcIfSpeed();

    /**
     * <code>string DstIfName = 96;</code>
     */
    java.lang.String getDstIfName();
    /**
     * <code>string DstIfName = 96;</code>
     */
    com.google.protobuf.ByteString
        getDstIfNameBytes();

    /**
     * <code>string DstIfDesc = 97;</code>
     */
    java.lang.String getDstIfDesc();
    /**
     * <code>string DstIfDesc = 97;</code>
     */
    com.google.protobuf.ByteString
        getDstIfDescBytes();

    /**
     * <code>uint32 DstIfSpeed = 98;</code>
     */
    int getDstIfSpeed();

    /**
     * <code>string Peer = 99;</code>
     */
    java.lang.String getPeer();
    /**
     * <code>string Peer = 99;</code>
     */
    com.google.protobuf.ByteString
        getPeerBytes();
  }
  /**
   * <pre>
   * Flow Message needs to stay compatible to goflow's default protobuf
   * -&gt; never edit record id's, only ever append
   * </pre>
   *
   * Protobuf type {@code flowmessageenriched.FlowMessage}
   */
  public  static final class FlowMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flowmessageenriched.FlowMessage)
      FlowMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FlowMessage.newBuilder() to construct.
    private FlowMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FlowMessage() {
      type_ = 0;
      timeRecvd_ = 0L;
      samplingRate_ = 0L;
      sequenceNum_ = 0;
      timeFlow_ = 0L;
      srcIP_ = com.google.protobuf.ByteString.EMPTY;
      dstIP_ = com.google.protobuf.ByteString.EMPTY;
      iPversion_ = 0;
      bytes_ = 0L;
      packets_ = 0L;
      routerAddr_ = com.google.protobuf.ByteString.EMPTY;
      nextHop_ = com.google.protobuf.ByteString.EMPTY;
      nextHopAS_ = 0;
      srcAS_ = 0;
      dstAS_ = 0;
      srcNet_ = 0;
      dstNet_ = 0;
      srcIf_ = 0;
      dstIf_ = 0;
      proto_ = 0;
      srcPort_ = 0;
      dstPort_ = 0;
      iPTos_ = 0;
      forwardingStatus_ = 0;
      iPTTL_ = 0;
      tCPFlags_ = 0;
      srcMac_ = 0L;
      dstMac_ = 0L;
      vlanId_ = 0;
      etype_ = 0;
      direction_ = 0;
      cid_ = 0;
      normalized_ = 0;
      srcIfName_ = "";
      srcIfDesc_ = "";
      srcIfSpeed_ = 0;
      dstIfName_ = "";
      dstIfDesc_ = "";
      dstIfSpeed_ = 0;
      peer_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FlowMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {

              timeRecvd_ = input.readUInt64();
              break;
            }
            case 24: {

              samplingRate_ = input.readUInt64();
              break;
            }
            case 32: {

              sequenceNum_ = input.readUInt32();
              break;
            }
            case 40: {

              timeFlow_ = input.readUInt64();
              break;
            }
            case 50: {

              srcIP_ = input.readBytes();
              break;
            }
            case 58: {

              dstIP_ = input.readBytes();
              break;
            }
            case 64: {
              int rawValue = input.readEnum();

              iPversion_ = rawValue;
              break;
            }
            case 72: {

              bytes_ = input.readUInt64();
              break;
            }
            case 80: {

              packets_ = input.readUInt64();
              break;
            }
            case 90: {

              routerAddr_ = input.readBytes();
              break;
            }
            case 98: {

              nextHop_ = input.readBytes();
              break;
            }
            case 104: {

              nextHopAS_ = input.readUInt32();
              break;
            }
            case 112: {

              srcAS_ = input.readUInt32();
              break;
            }
            case 120: {

              dstAS_ = input.readUInt32();
              break;
            }
            case 128: {

              srcNet_ = input.readUInt32();
              break;
            }
            case 136: {

              dstNet_ = input.readUInt32();
              break;
            }
            case 144: {

              srcIf_ = input.readUInt32();
              break;
            }
            case 152: {

              dstIf_ = input.readUInt32();
              break;
            }
            case 160: {

              proto_ = input.readUInt32();
              break;
            }
            case 168: {

              srcPort_ = input.readUInt32();
              break;
            }
            case 176: {

              dstPort_ = input.readUInt32();
              break;
            }
            case 184: {

              iPTos_ = input.readUInt32();
              break;
            }
            case 192: {

              forwardingStatus_ = input.readUInt32();
              break;
            }
            case 200: {

              iPTTL_ = input.readUInt32();
              break;
            }
            case 208: {

              tCPFlags_ = input.readUInt32();
              break;
            }
            case 216: {

              srcMac_ = input.readUInt64();
              break;
            }
            case 224: {

              dstMac_ = input.readUInt64();
              break;
            }
            case 232: {

              vlanId_ = input.readUInt32();
              break;
            }
            case 240: {

              etype_ = input.readUInt32();
              break;
            }
            case 720: {
              int rawValue = input.readEnum();

              direction_ = rawValue;
              break;
            }
            case 728: {

              cid_ = input.readUInt32();
              break;
            }
            case 736: {
              int rawValue = input.readEnum();

              normalized_ = rawValue;
              break;
            }
            case 746: {
              java.lang.String s = input.readStringRequireUtf8();

              srcIfName_ = s;
              break;
            }
            case 754: {
              java.lang.String s = input.readStringRequireUtf8();

              srcIfDesc_ = s;
              break;
            }
            case 760: {

              srcIfSpeed_ = input.readUInt32();
              break;
            }
            case 770: {
              java.lang.String s = input.readStringRequireUtf8();

              dstIfName_ = s;
              break;
            }
            case 778: {
              java.lang.String s = input.readStringRequireUtf8();

              dstIfDesc_ = s;
              break;
            }
            case 784: {

              dstIfSpeed_ = input.readUInt32();
              break;
            }
            case 794: {
              java.lang.String s = input.readStringRequireUtf8();

              peer_ = s;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bwnetflow.FlowMessagePb.internal_static_flowmessageenriched_FlowMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bwnetflow.FlowMessagePb.internal_static_flowmessageenriched_FlowMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bwnetflow.FlowMessagePb.FlowMessage.class, bwnetflow.FlowMessagePb.FlowMessage.Builder.class);
    }

    /**
     * Protobuf enum {@code flowmessageenriched.FlowMessage.FlowType}
     */
    public enum FlowType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>FLOWUNKNOWN = 0;</code>
       */
      FLOWUNKNOWN(0),
      /**
       * <code>NFV9 = 9;</code>
       */
      NFV9(9),
      /**
       * <code>IPFIX = 10;</code>
       */
      IPFIX(10),
      /**
       * <code>SFLOW = 5;</code>
       */
      SFLOW(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>FLOWUNKNOWN = 0;</code>
       */
      public static final int FLOWUNKNOWN_VALUE = 0;
      /**
       * <code>NFV9 = 9;</code>
       */
      public static final int NFV9_VALUE = 9;
      /**
       * <code>IPFIX = 10;</code>
       */
      public static final int IPFIX_VALUE = 10;
      /**
       * <code>SFLOW = 5;</code>
       */
      public static final int SFLOW_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FlowType valueOf(int value) {
        return forNumber(value);
      }

      public static FlowType forNumber(int value) {
        switch (value) {
          case 0: return FLOWUNKNOWN;
          case 9: return NFV9;
          case 10: return IPFIX;
          case 5: return SFLOW;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<FlowType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          FlowType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<FlowType>() {
              public FlowType findValueByNumber(int number) {
                return FlowType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return bwnetflow.FlowMessagePb.FlowMessage.getDescriptor().getEnumTypes().get(0);
      }

      private static final FlowType[] VALUES = values();

      public static FlowType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private FlowType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flowmessageenriched.FlowMessage.FlowType)
    }

    /**
     * <pre>
     * To be deprecated
     * </pre>
     *
     * Protobuf enum {@code flowmessageenriched.FlowMessage.IPType}
     */
    public enum IPType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>IPUNKNOWN = 0;</code>
       */
      IPUNKNOWN(0),
      /**
       * <code>IPv4 = 4;</code>
       */
      IPv4(4),
      /**
       * <code>IPv6 = 6;</code>
       */
      IPv6(6),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>IPUNKNOWN = 0;</code>
       */
      public static final int IPUNKNOWN_VALUE = 0;
      /**
       * <code>IPv4 = 4;</code>
       */
      public static final int IPv4_VALUE = 4;
      /**
       * <code>IPv6 = 6;</code>
       */
      public static final int IPv6_VALUE = 6;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static IPType valueOf(int value) {
        return forNumber(value);
      }

      public static IPType forNumber(int value) {
        switch (value) {
          case 0: return IPUNKNOWN;
          case 4: return IPv4;
          case 6: return IPv6;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<IPType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          IPType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<IPType>() {
              public IPType findValueByNumber(int number) {
                return IPType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return bwnetflow.FlowMessagePb.FlowMessage.getDescriptor().getEnumTypes().get(1);
      }

      private static final IPType[] VALUES = values();

      public static IPType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private IPType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flowmessageenriched.FlowMessage.IPType)
    }

    /**
     * <pre>
     * Extensions beyond goflow's default protobuf, starting at id 90
     * </pre>
     *
     * Protobuf enum {@code flowmessageenriched.FlowMessage.DirectionType}
     */
    public enum DirectionType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>Unknown = 0;</code>
       */
      Unknown(0),
      /**
       * <code>Incoming = 1;</code>
       */
      Incoming(1),
      /**
       * <code>Outgoing = 2;</code>
       */
      Outgoing(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>Unknown = 0;</code>
       */
      public static final int Unknown_VALUE = 0;
      /**
       * <code>Incoming = 1;</code>
       */
      public static final int Incoming_VALUE = 1;
      /**
       * <code>Outgoing = 2;</code>
       */
      public static final int Outgoing_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DirectionType valueOf(int value) {
        return forNumber(value);
      }

      public static DirectionType forNumber(int value) {
        switch (value) {
          case 0: return Unknown;
          case 1: return Incoming;
          case 2: return Outgoing;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DirectionType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          DirectionType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DirectionType>() {
              public DirectionType findValueByNumber(int number) {
                return DirectionType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return bwnetflow.FlowMessagePb.FlowMessage.getDescriptor().getEnumTypes().get(2);
      }

      private static final DirectionType[] VALUES = values();

      public static DirectionType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private DirectionType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flowmessageenriched.FlowMessage.DirectionType)
    }

    /**
     * Protobuf enum {@code flowmessageenriched.FlowMessage.NormalizedType}
     */
    public enum NormalizedType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>No = 0;</code>
       */
      No(0),
      /**
       * <code>Yes = 1;</code>
       */
      Yes(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>No = 0;</code>
       */
      public static final int No_VALUE = 0;
      /**
       * <code>Yes = 1;</code>
       */
      public static final int Yes_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static NormalizedType valueOf(int value) {
        return forNumber(value);
      }

      public static NormalizedType forNumber(int value) {
        switch (value) {
          case 0: return No;
          case 1: return Yes;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<NormalizedType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          NormalizedType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NormalizedType>() {
              public NormalizedType findValueByNumber(int number) {
                return NormalizedType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return bwnetflow.FlowMessagePb.FlowMessage.getDescriptor().getEnumTypes().get(3);
      }

      private static final NormalizedType[] VALUES = values();

      public static NormalizedType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private NormalizedType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flowmessageenriched.FlowMessage.NormalizedType)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.flowmessageenriched.FlowMessage.FlowType Type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.flowmessageenriched.FlowMessage.FlowType Type = 1;</code>
     */
    public bwnetflow.FlowMessagePb.FlowMessage.FlowType getType() {
      @SuppressWarnings("deprecation")
      bwnetflow.FlowMessagePb.FlowMessage.FlowType result = bwnetflow.FlowMessagePb.FlowMessage.FlowType.valueOf(type_);
      return result == null ? bwnetflow.FlowMessagePb.FlowMessage.FlowType.UNRECOGNIZED : result;
    }

    public static final int TIMERECVD_FIELD_NUMBER = 2;
    private long timeRecvd_;
    /**
     * <code>uint64 TimeRecvd = 2;</code>
     */
    public long getTimeRecvd() {
      return timeRecvd_;
    }

    public static final int SAMPLINGRATE_FIELD_NUMBER = 3;
    private long samplingRate_;
    /**
     * <code>uint64 SamplingRate = 3;</code>
     */
    public long getSamplingRate() {
      return samplingRate_;
    }

    public static final int SEQUENCENUM_FIELD_NUMBER = 4;
    private int sequenceNum_;
    /**
     * <code>uint32 SequenceNum = 4;</code>
     */
    public int getSequenceNum() {
      return sequenceNum_;
    }

    public static final int TIMEFLOW_FIELD_NUMBER = 5;
    private long timeFlow_;
    /**
     * <pre>
     * Found inside packet
     * </pre>
     *
     * <code>uint64 TimeFlow = 5;</code>
     */
    public long getTimeFlow() {
      return timeFlow_;
    }

    public static final int SRCIP_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString srcIP_;
    /**
     * <pre>
     * Source/destination addresses
     * </pre>
     *
     * <code>bytes SrcIP = 6;</code>
     */
    public com.google.protobuf.ByteString getSrcIP() {
      return srcIP_;
    }

    public static final int DSTIP_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString dstIP_;
    /**
     * <code>bytes DstIP = 7;</code>
     */
    public com.google.protobuf.ByteString getDstIP() {
      return dstIP_;
    }

    public static final int IPVERSION_FIELD_NUMBER = 8;
    private int iPversion_;
    /**
     * <code>.flowmessageenriched.FlowMessage.IPType IPversion = 8;</code>
     */
    public int getIPversionValue() {
      return iPversion_;
    }
    /**
     * <code>.flowmessageenriched.FlowMessage.IPType IPversion = 8;</code>
     */
    public bwnetflow.FlowMessagePb.FlowMessage.IPType getIPversion() {
      @SuppressWarnings("deprecation")
      bwnetflow.FlowMessagePb.FlowMessage.IPType result = bwnetflow.FlowMessagePb.FlowMessage.IPType.valueOf(iPversion_);
      return result == null ? bwnetflow.FlowMessagePb.FlowMessage.IPType.UNRECOGNIZED : result;
    }

    public static final int BYTES_FIELD_NUMBER = 9;
    private long bytes_;
    /**
     * <pre>
     * Size of the sampled packet
     * </pre>
     *
     * <code>uint64 Bytes = 9;</code>
     */
    public long getBytes() {
      return bytes_;
    }

    public static final int PACKETS_FIELD_NUMBER = 10;
    private long packets_;
    /**
     * <code>uint64 Packets = 10;</code>
     */
    public long getPackets() {
      return packets_;
    }

    public static final int ROUTERADDR_FIELD_NUMBER = 11;
    private com.google.protobuf.ByteString routerAddr_;
    /**
     * <pre>
     * Routing information
     * </pre>
     *
     * <code>bytes RouterAddr = 11;</code>
     */
    public com.google.protobuf.ByteString getRouterAddr() {
      return routerAddr_;
    }

    public static final int NEXTHOP_FIELD_NUMBER = 12;
    private com.google.protobuf.ByteString nextHop_;
    /**
     * <code>bytes NextHop = 12;</code>
     */
    public com.google.protobuf.ByteString getNextHop() {
      return nextHop_;
    }

    public static final int NEXTHOPAS_FIELD_NUMBER = 13;
    private int nextHopAS_;
    /**
     * <code>uint32 NextHopAS = 13;</code>
     */
    public int getNextHopAS() {
      return nextHopAS_;
    }

    public static final int SRCAS_FIELD_NUMBER = 14;
    private int srcAS_;
    /**
     * <pre>
     * Autonomous system information
     * </pre>
     *
     * <code>uint32 SrcAS = 14;</code>
     */
    public int getSrcAS() {
      return srcAS_;
    }

    public static final int DSTAS_FIELD_NUMBER = 15;
    private int dstAS_;
    /**
     * <code>uint32 DstAS = 15;</code>
     */
    public int getDstAS() {
      return dstAS_;
    }

    public static final int SRCNET_FIELD_NUMBER = 16;
    private int srcNet_;
    /**
     * <pre>
     * Prefix size
     * </pre>
     *
     * <code>uint32 SrcNet = 16;</code>
     */
    public int getSrcNet() {
      return srcNet_;
    }

    public static final int DSTNET_FIELD_NUMBER = 17;
    private int dstNet_;
    /**
     * <code>uint32 DstNet = 17;</code>
     */
    public int getDstNet() {
      return dstNet_;
    }

    public static final int SRCIF_FIELD_NUMBER = 18;
    private int srcIf_;
    /**
     * <pre>
     * Interfaces
     * </pre>
     *
     * <code>uint32 SrcIf = 18;</code>
     */
    public int getSrcIf() {
      return srcIf_;
    }

    public static final int DSTIF_FIELD_NUMBER = 19;
    private int dstIf_;
    /**
     * <code>uint32 DstIf = 19;</code>
     */
    public int getDstIf() {
      return dstIf_;
    }

    public static final int PROTO_FIELD_NUMBER = 20;
    private int proto_;
    /**
     * <pre>
     * Layer 4 protocol
     * </pre>
     *
     * <code>uint32 Proto = 20;</code>
     */
    public int getProto() {
      return proto_;
    }

    public static final int SRCPORT_FIELD_NUMBER = 21;
    private int srcPort_;
    /**
     * <pre>
     * Port for UDP and TCP
     * </pre>
     *
     * <code>uint32 SrcPort = 21;</code>
     */
    public int getSrcPort() {
      return srcPort_;
    }

    public static final int DSTPORT_FIELD_NUMBER = 22;
    private int dstPort_;
    /**
     * <code>uint32 DstPort = 22;</code>
     */
    public int getDstPort() {
      return dstPort_;
    }

    public static final int IPTOS_FIELD_NUMBER = 23;
    private int iPTos_;
    /**
     * <pre>
     * IP and TCP special flags
     * </pre>
     *
     * <code>uint32 IPTos = 23;</code>
     */
    public int getIPTos() {
      return iPTos_;
    }

    public static final int FORWARDINGSTATUS_FIELD_NUMBER = 24;
    private int forwardingStatus_;
    /**
     * <code>uint32 ForwardingStatus = 24;</code>
     */
    public int getForwardingStatus() {
      return forwardingStatus_;
    }

    public static final int IPTTL_FIELD_NUMBER = 25;
    private int iPTTL_;
    /**
     * <code>uint32 IPTTL = 25;</code>
     */
    public int getIPTTL() {
      return iPTTL_;
    }

    public static final int TCPFLAGS_FIELD_NUMBER = 26;
    private int tCPFlags_;
    /**
     * <code>uint32 TCPFlags = 26;</code>
     */
    public int getTCPFlags() {
      return tCPFlags_;
    }

    public static final int SRCMAC_FIELD_NUMBER = 27;
    private long srcMac_;
    /**
     * <pre>
     * Ethernet information
     * </pre>
     *
     * <code>uint64 SrcMac = 27;</code>
     */
    public long getSrcMac() {
      return srcMac_;
    }

    public static final int DSTMAC_FIELD_NUMBER = 28;
    private long dstMac_;
    /**
     * <code>uint64 DstMac = 28;</code>
     */
    public long getDstMac() {
      return dstMac_;
    }

    public static final int VLANID_FIELD_NUMBER = 29;
    private int vlanId_;
    /**
     * <code>uint32 VlanId = 29;</code>
     */
    public int getVlanId() {
      return vlanId_;
    }

    public static final int ETYPE_FIELD_NUMBER = 30;
    private int etype_;
    /**
     * <pre>
     * Layer 3 protocol (IPv4/IPv6/ARP/...)
     * </pre>
     *
     * <code>uint32 Etype = 30;</code>
     */
    public int getEtype() {
      return etype_;
    }

    public static final int DIRECTION_FIELD_NUMBER = 90;
    private int direction_;
    /**
     * <code>.flowmessageenriched.FlowMessage.DirectionType Direction = 90;</code>
     */
    public int getDirectionValue() {
      return direction_;
    }
    /**
     * <code>.flowmessageenriched.FlowMessage.DirectionType Direction = 90;</code>
     */
    public bwnetflow.FlowMessagePb.FlowMessage.DirectionType getDirection() {
      @SuppressWarnings("deprecation")
      bwnetflow.FlowMessagePb.FlowMessage.DirectionType result = bwnetflow.FlowMessagePb.FlowMessage.DirectionType.valueOf(direction_);
      return result == null ? bwnetflow.FlowMessagePb.FlowMessage.DirectionType.UNRECOGNIZED : result;
    }

    public static final int CID_FIELD_NUMBER = 91;
    private int cid_;
    /**
     * <code>uint32 Cid = 91;</code>
     */
    public int getCid() {
      return cid_;
    }

    public static final int NORMALIZED_FIELD_NUMBER = 92;
    private int normalized_;
    /**
     * <code>.flowmessageenriched.FlowMessage.NormalizedType Normalized = 92;</code>
     */
    public int getNormalizedValue() {
      return normalized_;
    }
    /**
     * <code>.flowmessageenriched.FlowMessage.NormalizedType Normalized = 92;</code>
     */
    public bwnetflow.FlowMessagePb.FlowMessage.NormalizedType getNormalized() {
      @SuppressWarnings("deprecation")
      bwnetflow.FlowMessagePb.FlowMessage.NormalizedType result = bwnetflow.FlowMessagePb.FlowMessage.NormalizedType.valueOf(normalized_);
      return result == null ? bwnetflow.FlowMessagePb.FlowMessage.NormalizedType.UNRECOGNIZED : result;
    }

    public static final int SRCIFNAME_FIELD_NUMBER = 93;
    private volatile java.lang.Object srcIfName_;
    /**
     * <code>string SrcIfName = 93;</code>
     */
    public java.lang.String getSrcIfName() {
      java.lang.Object ref = srcIfName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        srcIfName_ = s;
        return s;
      }
    }
    /**
     * <code>string SrcIfName = 93;</code>
     */
    public com.google.protobuf.ByteString
        getSrcIfNameBytes() {
      java.lang.Object ref = srcIfName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        srcIfName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SRCIFDESC_FIELD_NUMBER = 94;
    private volatile java.lang.Object srcIfDesc_;
    /**
     * <code>string SrcIfDesc = 94;</code>
     */
    public java.lang.String getSrcIfDesc() {
      java.lang.Object ref = srcIfDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        srcIfDesc_ = s;
        return s;
      }
    }
    /**
     * <code>string SrcIfDesc = 94;</code>
     */
    public com.google.protobuf.ByteString
        getSrcIfDescBytes() {
      java.lang.Object ref = srcIfDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        srcIfDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SRCIFSPEED_FIELD_NUMBER = 95;
    private int srcIfSpeed_;
    /**
     * <code>uint32 SrcIfSpeed = 95;</code>
     */
    public int getSrcIfSpeed() {
      return srcIfSpeed_;
    }

    public static final int DSTIFNAME_FIELD_NUMBER = 96;
    private volatile java.lang.Object dstIfName_;
    /**
     * <code>string DstIfName = 96;</code>
     */
    public java.lang.String getDstIfName() {
      java.lang.Object ref = dstIfName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dstIfName_ = s;
        return s;
      }
    }
    /**
     * <code>string DstIfName = 96;</code>
     */
    public com.google.protobuf.ByteString
        getDstIfNameBytes() {
      java.lang.Object ref = dstIfName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dstIfName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DSTIFDESC_FIELD_NUMBER = 97;
    private volatile java.lang.Object dstIfDesc_;
    /**
     * <code>string DstIfDesc = 97;</code>
     */
    public java.lang.String getDstIfDesc() {
      java.lang.Object ref = dstIfDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dstIfDesc_ = s;
        return s;
      }
    }
    /**
     * <code>string DstIfDesc = 97;</code>
     */
    public com.google.protobuf.ByteString
        getDstIfDescBytes() {
      java.lang.Object ref = dstIfDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dstIfDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DSTIFSPEED_FIELD_NUMBER = 98;
    private int dstIfSpeed_;
    /**
     * <code>uint32 DstIfSpeed = 98;</code>
     */
    public int getDstIfSpeed() {
      return dstIfSpeed_;
    }

    public static final int PEER_FIELD_NUMBER = 99;
    private volatile java.lang.Object peer_;
    /**
     * <code>string Peer = 99;</code>
     */
    public java.lang.String getPeer() {
      java.lang.Object ref = peer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        peer_ = s;
        return s;
      }
    }
    /**
     * <code>string Peer = 99;</code>
     */
    public com.google.protobuf.ByteString
        getPeerBytes() {
      java.lang.Object ref = peer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        peer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != bwnetflow.FlowMessagePb.FlowMessage.FlowType.FLOWUNKNOWN.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (timeRecvd_ != 0L) {
        output.writeUInt64(2, timeRecvd_);
      }
      if (samplingRate_ != 0L) {
        output.writeUInt64(3, samplingRate_);
      }
      if (sequenceNum_ != 0) {
        output.writeUInt32(4, sequenceNum_);
      }
      if (timeFlow_ != 0L) {
        output.writeUInt64(5, timeFlow_);
      }
      if (!srcIP_.isEmpty()) {
        output.writeBytes(6, srcIP_);
      }
      if (!dstIP_.isEmpty()) {
        output.writeBytes(7, dstIP_);
      }
      if (iPversion_ != bwnetflow.FlowMessagePb.FlowMessage.IPType.IPUNKNOWN.getNumber()) {
        output.writeEnum(8, iPversion_);
      }
      if (bytes_ != 0L) {
        output.writeUInt64(9, bytes_);
      }
      if (packets_ != 0L) {
        output.writeUInt64(10, packets_);
      }
      if (!routerAddr_.isEmpty()) {
        output.writeBytes(11, routerAddr_);
      }
      if (!nextHop_.isEmpty()) {
        output.writeBytes(12, nextHop_);
      }
      if (nextHopAS_ != 0) {
        output.writeUInt32(13, nextHopAS_);
      }
      if (srcAS_ != 0) {
        output.writeUInt32(14, srcAS_);
      }
      if (dstAS_ != 0) {
        output.writeUInt32(15, dstAS_);
      }
      if (srcNet_ != 0) {
        output.writeUInt32(16, srcNet_);
      }
      if (dstNet_ != 0) {
        output.writeUInt32(17, dstNet_);
      }
      if (srcIf_ != 0) {
        output.writeUInt32(18, srcIf_);
      }
      if (dstIf_ != 0) {
        output.writeUInt32(19, dstIf_);
      }
      if (proto_ != 0) {
        output.writeUInt32(20, proto_);
      }
      if (srcPort_ != 0) {
        output.writeUInt32(21, srcPort_);
      }
      if (dstPort_ != 0) {
        output.writeUInt32(22, dstPort_);
      }
      if (iPTos_ != 0) {
        output.writeUInt32(23, iPTos_);
      }
      if (forwardingStatus_ != 0) {
        output.writeUInt32(24, forwardingStatus_);
      }
      if (iPTTL_ != 0) {
        output.writeUInt32(25, iPTTL_);
      }
      if (tCPFlags_ != 0) {
        output.writeUInt32(26, tCPFlags_);
      }
      if (srcMac_ != 0L) {
        output.writeUInt64(27, srcMac_);
      }
      if (dstMac_ != 0L) {
        output.writeUInt64(28, dstMac_);
      }
      if (vlanId_ != 0) {
        output.writeUInt32(29, vlanId_);
      }
      if (etype_ != 0) {
        output.writeUInt32(30, etype_);
      }
      if (direction_ != bwnetflow.FlowMessagePb.FlowMessage.DirectionType.Unknown.getNumber()) {
        output.writeEnum(90, direction_);
      }
      if (cid_ != 0) {
        output.writeUInt32(91, cid_);
      }
      if (normalized_ != bwnetflow.FlowMessagePb.FlowMessage.NormalizedType.No.getNumber()) {
        output.writeEnum(92, normalized_);
      }
      if (!getSrcIfNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 93, srcIfName_);
      }
      if (!getSrcIfDescBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 94, srcIfDesc_);
      }
      if (srcIfSpeed_ != 0) {
        output.writeUInt32(95, srcIfSpeed_);
      }
      if (!getDstIfNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 96, dstIfName_);
      }
      if (!getDstIfDescBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 97, dstIfDesc_);
      }
      if (dstIfSpeed_ != 0) {
        output.writeUInt32(98, dstIfSpeed_);
      }
      if (!getPeerBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 99, peer_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != bwnetflow.FlowMessagePb.FlowMessage.FlowType.FLOWUNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (timeRecvd_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, timeRecvd_);
      }
      if (samplingRate_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, samplingRate_);
      }
      if (sequenceNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, sequenceNum_);
      }
      if (timeFlow_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, timeFlow_);
      }
      if (!srcIP_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, srcIP_);
      }
      if (!dstIP_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, dstIP_);
      }
      if (iPversion_ != bwnetflow.FlowMessagePb.FlowMessage.IPType.IPUNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, iPversion_);
      }
      if (bytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, bytes_);
      }
      if (packets_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, packets_);
      }
      if (!routerAddr_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, routerAddr_);
      }
      if (!nextHop_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, nextHop_);
      }
      if (nextHopAS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, nextHopAS_);
      }
      if (srcAS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, srcAS_);
      }
      if (dstAS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, dstAS_);
      }
      if (srcNet_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, srcNet_);
      }
      if (dstNet_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, dstNet_);
      }
      if (srcIf_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, srcIf_);
      }
      if (dstIf_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, dstIf_);
      }
      if (proto_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, proto_);
      }
      if (srcPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(21, srcPort_);
      }
      if (dstPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(22, dstPort_);
      }
      if (iPTos_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, iPTos_);
      }
      if (forwardingStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(24, forwardingStatus_);
      }
      if (iPTTL_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(25, iPTTL_);
      }
      if (tCPFlags_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(26, tCPFlags_);
      }
      if (srcMac_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(27, srcMac_);
      }
      if (dstMac_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(28, dstMac_);
      }
      if (vlanId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(29, vlanId_);
      }
      if (etype_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(30, etype_);
      }
      if (direction_ != bwnetflow.FlowMessagePb.FlowMessage.DirectionType.Unknown.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(90, direction_);
      }
      if (cid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(91, cid_);
      }
      if (normalized_ != bwnetflow.FlowMessagePb.FlowMessage.NormalizedType.No.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(92, normalized_);
      }
      if (!getSrcIfNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(93, srcIfName_);
      }
      if (!getSrcIfDescBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(94, srcIfDesc_);
      }
      if (srcIfSpeed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(95, srcIfSpeed_);
      }
      if (!getDstIfNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(96, dstIfName_);
      }
      if (!getDstIfDescBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(97, dstIfDesc_);
      }
      if (dstIfSpeed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(98, dstIfSpeed_);
      }
      if (!getPeerBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(99, peer_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof bwnetflow.FlowMessagePb.FlowMessage)) {
        return super.equals(obj);
      }
      bwnetflow.FlowMessagePb.FlowMessage other = (bwnetflow.FlowMessagePb.FlowMessage) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && (getTimeRecvd()
          == other.getTimeRecvd());
      result = result && (getSamplingRate()
          == other.getSamplingRate());
      result = result && (getSequenceNum()
          == other.getSequenceNum());
      result = result && (getTimeFlow()
          == other.getTimeFlow());
      result = result && getSrcIP()
          .equals(other.getSrcIP());
      result = result && getDstIP()
          .equals(other.getDstIP());
      result = result && iPversion_ == other.iPversion_;
      result = result && (getBytes()
          == other.getBytes());
      result = result && (getPackets()
          == other.getPackets());
      result = result && getRouterAddr()
          .equals(other.getRouterAddr());
      result = result && getNextHop()
          .equals(other.getNextHop());
      result = result && (getNextHopAS()
          == other.getNextHopAS());
      result = result && (getSrcAS()
          == other.getSrcAS());
      result = result && (getDstAS()
          == other.getDstAS());
      result = result && (getSrcNet()
          == other.getSrcNet());
      result = result && (getDstNet()
          == other.getDstNet());
      result = result && (getSrcIf()
          == other.getSrcIf());
      result = result && (getDstIf()
          == other.getDstIf());
      result = result && (getProto()
          == other.getProto());
      result = result && (getSrcPort()
          == other.getSrcPort());
      result = result && (getDstPort()
          == other.getDstPort());
      result = result && (getIPTos()
          == other.getIPTos());
      result = result && (getForwardingStatus()
          == other.getForwardingStatus());
      result = result && (getIPTTL()
          == other.getIPTTL());
      result = result && (getTCPFlags()
          == other.getTCPFlags());
      result = result && (getSrcMac()
          == other.getSrcMac());
      result = result && (getDstMac()
          == other.getDstMac());
      result = result && (getVlanId()
          == other.getVlanId());
      result = result && (getEtype()
          == other.getEtype());
      result = result && direction_ == other.direction_;
      result = result && (getCid()
          == other.getCid());
      result = result && normalized_ == other.normalized_;
      result = result && getSrcIfName()
          .equals(other.getSrcIfName());
      result = result && getSrcIfDesc()
          .equals(other.getSrcIfDesc());
      result = result && (getSrcIfSpeed()
          == other.getSrcIfSpeed());
      result = result && getDstIfName()
          .equals(other.getDstIfName());
      result = result && getDstIfDesc()
          .equals(other.getDstIfDesc());
      result = result && (getDstIfSpeed()
          == other.getDstIfSpeed());
      result = result && getPeer()
          .equals(other.getPeer());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + TIMERECVD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimeRecvd());
      hash = (37 * hash) + SAMPLINGRATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSamplingRate());
      hash = (37 * hash) + SEQUENCENUM_FIELD_NUMBER;
      hash = (53 * hash) + getSequenceNum();
      hash = (37 * hash) + TIMEFLOW_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimeFlow());
      hash = (37 * hash) + SRCIP_FIELD_NUMBER;
      hash = (53 * hash) + getSrcIP().hashCode();
      hash = (37 * hash) + DSTIP_FIELD_NUMBER;
      hash = (53 * hash) + getDstIP().hashCode();
      hash = (37 * hash) + IPVERSION_FIELD_NUMBER;
      hash = (53 * hash) + iPversion_;
      hash = (37 * hash) + BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBytes());
      hash = (37 * hash) + PACKETS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPackets());
      hash = (37 * hash) + ROUTERADDR_FIELD_NUMBER;
      hash = (53 * hash) + getRouterAddr().hashCode();
      hash = (37 * hash) + NEXTHOP_FIELD_NUMBER;
      hash = (53 * hash) + getNextHop().hashCode();
      hash = (37 * hash) + NEXTHOPAS_FIELD_NUMBER;
      hash = (53 * hash) + getNextHopAS();
      hash = (37 * hash) + SRCAS_FIELD_NUMBER;
      hash = (53 * hash) + getSrcAS();
      hash = (37 * hash) + DSTAS_FIELD_NUMBER;
      hash = (53 * hash) + getDstAS();
      hash = (37 * hash) + SRCNET_FIELD_NUMBER;
      hash = (53 * hash) + getSrcNet();
      hash = (37 * hash) + DSTNET_FIELD_NUMBER;
      hash = (53 * hash) + getDstNet();
      hash = (37 * hash) + SRCIF_FIELD_NUMBER;
      hash = (53 * hash) + getSrcIf();
      hash = (37 * hash) + DSTIF_FIELD_NUMBER;
      hash = (53 * hash) + getDstIf();
      hash = (37 * hash) + PROTO_FIELD_NUMBER;
      hash = (53 * hash) + getProto();
      hash = (37 * hash) + SRCPORT_FIELD_NUMBER;
      hash = (53 * hash) + getSrcPort();
      hash = (37 * hash) + DSTPORT_FIELD_NUMBER;
      hash = (53 * hash) + getDstPort();
      hash = (37 * hash) + IPTOS_FIELD_NUMBER;
      hash = (53 * hash) + getIPTos();
      hash = (37 * hash) + FORWARDINGSTATUS_FIELD_NUMBER;
      hash = (53 * hash) + getForwardingStatus();
      hash = (37 * hash) + IPTTL_FIELD_NUMBER;
      hash = (53 * hash) + getIPTTL();
      hash = (37 * hash) + TCPFLAGS_FIELD_NUMBER;
      hash = (53 * hash) + getTCPFlags();
      hash = (37 * hash) + SRCMAC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSrcMac());
      hash = (37 * hash) + DSTMAC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDstMac());
      hash = (37 * hash) + VLANID_FIELD_NUMBER;
      hash = (53 * hash) + getVlanId();
      hash = (37 * hash) + ETYPE_FIELD_NUMBER;
      hash = (53 * hash) + getEtype();
      hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
      hash = (53 * hash) + direction_;
      hash = (37 * hash) + CID_FIELD_NUMBER;
      hash = (53 * hash) + getCid();
      hash = (37 * hash) + NORMALIZED_FIELD_NUMBER;
      hash = (53 * hash) + normalized_;
      hash = (37 * hash) + SRCIFNAME_FIELD_NUMBER;
      hash = (53 * hash) + getSrcIfName().hashCode();
      hash = (37 * hash) + SRCIFDESC_FIELD_NUMBER;
      hash = (53 * hash) + getSrcIfDesc().hashCode();
      hash = (37 * hash) + SRCIFSPEED_FIELD_NUMBER;
      hash = (53 * hash) + getSrcIfSpeed();
      hash = (37 * hash) + DSTIFNAME_FIELD_NUMBER;
      hash = (53 * hash) + getDstIfName().hashCode();
      hash = (37 * hash) + DSTIFDESC_FIELD_NUMBER;
      hash = (53 * hash) + getDstIfDesc().hashCode();
      hash = (37 * hash) + DSTIFSPEED_FIELD_NUMBER;
      hash = (53 * hash) + getDstIfSpeed();
      hash = (37 * hash) + PEER_FIELD_NUMBER;
      hash = (53 * hash) + getPeer().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static bwnetflow.FlowMessagePb.FlowMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bwnetflow.FlowMessagePb.FlowMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bwnetflow.FlowMessagePb.FlowMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bwnetflow.FlowMessagePb.FlowMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bwnetflow.FlowMessagePb.FlowMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bwnetflow.FlowMessagePb.FlowMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bwnetflow.FlowMessagePb.FlowMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static bwnetflow.FlowMessagePb.FlowMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static bwnetflow.FlowMessagePb.FlowMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static bwnetflow.FlowMessagePb.FlowMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static bwnetflow.FlowMessagePb.FlowMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static bwnetflow.FlowMessagePb.FlowMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(bwnetflow.FlowMessagePb.FlowMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Flow Message needs to stay compatible to goflow's default protobuf
     * -&gt; never edit record id's, only ever append
     * </pre>
     *
     * Protobuf type {@code flowmessageenriched.FlowMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flowmessageenriched.FlowMessage)
        bwnetflow.FlowMessagePb.FlowMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return bwnetflow.FlowMessagePb.internal_static_flowmessageenriched_FlowMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return bwnetflow.FlowMessagePb.internal_static_flowmessageenriched_FlowMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                bwnetflow.FlowMessagePb.FlowMessage.class, bwnetflow.FlowMessagePb.FlowMessage.Builder.class);
      }

      // Construct using bwnetflow.FlowMessagePb.FlowMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        timeRecvd_ = 0L;

        samplingRate_ = 0L;

        sequenceNum_ = 0;

        timeFlow_ = 0L;

        srcIP_ = com.google.protobuf.ByteString.EMPTY;

        dstIP_ = com.google.protobuf.ByteString.EMPTY;

        iPversion_ = 0;

        bytes_ = 0L;

        packets_ = 0L;

        routerAddr_ = com.google.protobuf.ByteString.EMPTY;

        nextHop_ = com.google.protobuf.ByteString.EMPTY;

        nextHopAS_ = 0;

        srcAS_ = 0;

        dstAS_ = 0;

        srcNet_ = 0;

        dstNet_ = 0;

        srcIf_ = 0;

        dstIf_ = 0;

        proto_ = 0;

        srcPort_ = 0;

        dstPort_ = 0;

        iPTos_ = 0;

        forwardingStatus_ = 0;

        iPTTL_ = 0;

        tCPFlags_ = 0;

        srcMac_ = 0L;

        dstMac_ = 0L;

        vlanId_ = 0;

        etype_ = 0;

        direction_ = 0;

        cid_ = 0;

        normalized_ = 0;

        srcIfName_ = "";

        srcIfDesc_ = "";

        srcIfSpeed_ = 0;

        dstIfName_ = "";

        dstIfDesc_ = "";

        dstIfSpeed_ = 0;

        peer_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bwnetflow.FlowMessagePb.internal_static_flowmessageenriched_FlowMessage_descriptor;
      }

      @java.lang.Override
      public bwnetflow.FlowMessagePb.FlowMessage getDefaultInstanceForType() {
        return bwnetflow.FlowMessagePb.FlowMessage.getDefaultInstance();
      }

      @java.lang.Override
      public bwnetflow.FlowMessagePb.FlowMessage build() {
        bwnetflow.FlowMessagePb.FlowMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public bwnetflow.FlowMessagePb.FlowMessage buildPartial() {
        bwnetflow.FlowMessagePb.FlowMessage result = new bwnetflow.FlowMessagePb.FlowMessage(this);
        result.type_ = type_;
        result.timeRecvd_ = timeRecvd_;
        result.samplingRate_ = samplingRate_;
        result.sequenceNum_ = sequenceNum_;
        result.timeFlow_ = timeFlow_;
        result.srcIP_ = srcIP_;
        result.dstIP_ = dstIP_;
        result.iPversion_ = iPversion_;
        result.bytes_ = bytes_;
        result.packets_ = packets_;
        result.routerAddr_ = routerAddr_;
        result.nextHop_ = nextHop_;
        result.nextHopAS_ = nextHopAS_;
        result.srcAS_ = srcAS_;
        result.dstAS_ = dstAS_;
        result.srcNet_ = srcNet_;
        result.dstNet_ = dstNet_;
        result.srcIf_ = srcIf_;
        result.dstIf_ = dstIf_;
        result.proto_ = proto_;
        result.srcPort_ = srcPort_;
        result.dstPort_ = dstPort_;
        result.iPTos_ = iPTos_;
        result.forwardingStatus_ = forwardingStatus_;
        result.iPTTL_ = iPTTL_;
        result.tCPFlags_ = tCPFlags_;
        result.srcMac_ = srcMac_;
        result.dstMac_ = dstMac_;
        result.vlanId_ = vlanId_;
        result.etype_ = etype_;
        result.direction_ = direction_;
        result.cid_ = cid_;
        result.normalized_ = normalized_;
        result.srcIfName_ = srcIfName_;
        result.srcIfDesc_ = srcIfDesc_;
        result.srcIfSpeed_ = srcIfSpeed_;
        result.dstIfName_ = dstIfName_;
        result.dstIfDesc_ = dstIfDesc_;
        result.dstIfSpeed_ = dstIfSpeed_;
        result.peer_ = peer_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bwnetflow.FlowMessagePb.FlowMessage) {
          return mergeFrom((bwnetflow.FlowMessagePb.FlowMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(bwnetflow.FlowMessagePb.FlowMessage other) {
        if (other == bwnetflow.FlowMessagePb.FlowMessage.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getTimeRecvd() != 0L) {
          setTimeRecvd(other.getTimeRecvd());
        }
        if (other.getSamplingRate() != 0L) {
          setSamplingRate(other.getSamplingRate());
        }
        if (other.getSequenceNum() != 0) {
          setSequenceNum(other.getSequenceNum());
        }
        if (other.getTimeFlow() != 0L) {
          setTimeFlow(other.getTimeFlow());
        }
        if (other.getSrcIP() != com.google.protobuf.ByteString.EMPTY) {
          setSrcIP(other.getSrcIP());
        }
        if (other.getDstIP() != com.google.protobuf.ByteString.EMPTY) {
          setDstIP(other.getDstIP());
        }
        if (other.iPversion_ != 0) {
          setIPversionValue(other.getIPversionValue());
        }
        if (other.getBytes() != 0L) {
          setBytes(other.getBytes());
        }
        if (other.getPackets() != 0L) {
          setPackets(other.getPackets());
        }
        if (other.getRouterAddr() != com.google.protobuf.ByteString.EMPTY) {
          setRouterAddr(other.getRouterAddr());
        }
        if (other.getNextHop() != com.google.protobuf.ByteString.EMPTY) {
          setNextHop(other.getNextHop());
        }
        if (other.getNextHopAS() != 0) {
          setNextHopAS(other.getNextHopAS());
        }
        if (other.getSrcAS() != 0) {
          setSrcAS(other.getSrcAS());
        }
        if (other.getDstAS() != 0) {
          setDstAS(other.getDstAS());
        }
        if (other.getSrcNet() != 0) {
          setSrcNet(other.getSrcNet());
        }
        if (other.getDstNet() != 0) {
          setDstNet(other.getDstNet());
        }
        if (other.getSrcIf() != 0) {
          setSrcIf(other.getSrcIf());
        }
        if (other.getDstIf() != 0) {
          setDstIf(other.getDstIf());
        }
        if (other.getProto() != 0) {
          setProto(other.getProto());
        }
        if (other.getSrcPort() != 0) {
          setSrcPort(other.getSrcPort());
        }
        if (other.getDstPort() != 0) {
          setDstPort(other.getDstPort());
        }
        if (other.getIPTos() != 0) {
          setIPTos(other.getIPTos());
        }
        if (other.getForwardingStatus() != 0) {
          setForwardingStatus(other.getForwardingStatus());
        }
        if (other.getIPTTL() != 0) {
          setIPTTL(other.getIPTTL());
        }
        if (other.getTCPFlags() != 0) {
          setTCPFlags(other.getTCPFlags());
        }
        if (other.getSrcMac() != 0L) {
          setSrcMac(other.getSrcMac());
        }
        if (other.getDstMac() != 0L) {
          setDstMac(other.getDstMac());
        }
        if (other.getVlanId() != 0) {
          setVlanId(other.getVlanId());
        }
        if (other.getEtype() != 0) {
          setEtype(other.getEtype());
        }
        if (other.direction_ != 0) {
          setDirectionValue(other.getDirectionValue());
        }
        if (other.getCid() != 0) {
          setCid(other.getCid());
        }
        if (other.normalized_ != 0) {
          setNormalizedValue(other.getNormalizedValue());
        }
        if (!other.getSrcIfName().isEmpty()) {
          srcIfName_ = other.srcIfName_;
          onChanged();
        }
        if (!other.getSrcIfDesc().isEmpty()) {
          srcIfDesc_ = other.srcIfDesc_;
          onChanged();
        }
        if (other.getSrcIfSpeed() != 0) {
          setSrcIfSpeed(other.getSrcIfSpeed());
        }
        if (!other.getDstIfName().isEmpty()) {
          dstIfName_ = other.dstIfName_;
          onChanged();
        }
        if (!other.getDstIfDesc().isEmpty()) {
          dstIfDesc_ = other.dstIfDesc_;
          onChanged();
        }
        if (other.getDstIfSpeed() != 0) {
          setDstIfSpeed(other.getDstIfSpeed());
        }
        if (!other.getPeer().isEmpty()) {
          peer_ = other.peer_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        bwnetflow.FlowMessagePb.FlowMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (bwnetflow.FlowMessagePb.FlowMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.flowmessageenriched.FlowMessage.FlowType Type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.FlowType Type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.FlowType Type = 1;</code>
       */
      public bwnetflow.FlowMessagePb.FlowMessage.FlowType getType() {
        @SuppressWarnings("deprecation")
        bwnetflow.FlowMessagePb.FlowMessage.FlowType result = bwnetflow.FlowMessagePb.FlowMessage.FlowType.valueOf(type_);
        return result == null ? bwnetflow.FlowMessagePb.FlowMessage.FlowType.UNRECOGNIZED : result;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.FlowType Type = 1;</code>
       */
      public Builder setType(bwnetflow.FlowMessagePb.FlowMessage.FlowType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.FlowType Type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private long timeRecvd_ ;
      /**
       * <code>uint64 TimeRecvd = 2;</code>
       */
      public long getTimeRecvd() {
        return timeRecvd_;
      }
      /**
       * <code>uint64 TimeRecvd = 2;</code>
       */
      public Builder setTimeRecvd(long value) {
        
        timeRecvd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 TimeRecvd = 2;</code>
       */
      public Builder clearTimeRecvd() {
        
        timeRecvd_ = 0L;
        onChanged();
        return this;
      }

      private long samplingRate_ ;
      /**
       * <code>uint64 SamplingRate = 3;</code>
       */
      public long getSamplingRate() {
        return samplingRate_;
      }
      /**
       * <code>uint64 SamplingRate = 3;</code>
       */
      public Builder setSamplingRate(long value) {
        
        samplingRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 SamplingRate = 3;</code>
       */
      public Builder clearSamplingRate() {
        
        samplingRate_ = 0L;
        onChanged();
        return this;
      }

      private int sequenceNum_ ;
      /**
       * <code>uint32 SequenceNum = 4;</code>
       */
      public int getSequenceNum() {
        return sequenceNum_;
      }
      /**
       * <code>uint32 SequenceNum = 4;</code>
       */
      public Builder setSequenceNum(int value) {
        
        sequenceNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 SequenceNum = 4;</code>
       */
      public Builder clearSequenceNum() {
        
        sequenceNum_ = 0;
        onChanged();
        return this;
      }

      private long timeFlow_ ;
      /**
       * <pre>
       * Found inside packet
       * </pre>
       *
       * <code>uint64 TimeFlow = 5;</code>
       */
      public long getTimeFlow() {
        return timeFlow_;
      }
      /**
       * <pre>
       * Found inside packet
       * </pre>
       *
       * <code>uint64 TimeFlow = 5;</code>
       */
      public Builder setTimeFlow(long value) {
        
        timeFlow_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Found inside packet
       * </pre>
       *
       * <code>uint64 TimeFlow = 5;</code>
       */
      public Builder clearTimeFlow() {
        
        timeFlow_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString srcIP_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Source/destination addresses
       * </pre>
       *
       * <code>bytes SrcIP = 6;</code>
       */
      public com.google.protobuf.ByteString getSrcIP() {
        return srcIP_;
      }
      /**
       * <pre>
       * Source/destination addresses
       * </pre>
       *
       * <code>bytes SrcIP = 6;</code>
       */
      public Builder setSrcIP(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        srcIP_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Source/destination addresses
       * </pre>
       *
       * <code>bytes SrcIP = 6;</code>
       */
      public Builder clearSrcIP() {
        
        srcIP_ = getDefaultInstance().getSrcIP();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString dstIP_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes DstIP = 7;</code>
       */
      public com.google.protobuf.ByteString getDstIP() {
        return dstIP_;
      }
      /**
       * <code>bytes DstIP = 7;</code>
       */
      public Builder setDstIP(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dstIP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes DstIP = 7;</code>
       */
      public Builder clearDstIP() {
        
        dstIP_ = getDefaultInstance().getDstIP();
        onChanged();
        return this;
      }

      private int iPversion_ = 0;
      /**
       * <code>.flowmessageenriched.FlowMessage.IPType IPversion = 8;</code>
       */
      public int getIPversionValue() {
        return iPversion_;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.IPType IPversion = 8;</code>
       */
      public Builder setIPversionValue(int value) {
        iPversion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.IPType IPversion = 8;</code>
       */
      public bwnetflow.FlowMessagePb.FlowMessage.IPType getIPversion() {
        @SuppressWarnings("deprecation")
        bwnetflow.FlowMessagePb.FlowMessage.IPType result = bwnetflow.FlowMessagePb.FlowMessage.IPType.valueOf(iPversion_);
        return result == null ? bwnetflow.FlowMessagePb.FlowMessage.IPType.UNRECOGNIZED : result;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.IPType IPversion = 8;</code>
       */
      public Builder setIPversion(bwnetflow.FlowMessagePb.FlowMessage.IPType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        iPversion_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.IPType IPversion = 8;</code>
       */
      public Builder clearIPversion() {
        
        iPversion_ = 0;
        onChanged();
        return this;
      }

      private long bytes_ ;
      /**
       * <pre>
       * Size of the sampled packet
       * </pre>
       *
       * <code>uint64 Bytes = 9;</code>
       */
      public long getBytes() {
        return bytes_;
      }
      /**
       * <pre>
       * Size of the sampled packet
       * </pre>
       *
       * <code>uint64 Bytes = 9;</code>
       */
      public Builder setBytes(long value) {
        
        bytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Size of the sampled packet
       * </pre>
       *
       * <code>uint64 Bytes = 9;</code>
       */
      public Builder clearBytes() {
        
        bytes_ = 0L;
        onChanged();
        return this;
      }

      private long packets_ ;
      /**
       * <code>uint64 Packets = 10;</code>
       */
      public long getPackets() {
        return packets_;
      }
      /**
       * <code>uint64 Packets = 10;</code>
       */
      public Builder setPackets(long value) {
        
        packets_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 Packets = 10;</code>
       */
      public Builder clearPackets() {
        
        packets_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString routerAddr_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Routing information
       * </pre>
       *
       * <code>bytes RouterAddr = 11;</code>
       */
      public com.google.protobuf.ByteString getRouterAddr() {
        return routerAddr_;
      }
      /**
       * <pre>
       * Routing information
       * </pre>
       *
       * <code>bytes RouterAddr = 11;</code>
       */
      public Builder setRouterAddr(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        routerAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Routing information
       * </pre>
       *
       * <code>bytes RouterAddr = 11;</code>
       */
      public Builder clearRouterAddr() {
        
        routerAddr_ = getDefaultInstance().getRouterAddr();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString nextHop_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes NextHop = 12;</code>
       */
      public com.google.protobuf.ByteString getNextHop() {
        return nextHop_;
      }
      /**
       * <code>bytes NextHop = 12;</code>
       */
      public Builder setNextHop(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nextHop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes NextHop = 12;</code>
       */
      public Builder clearNextHop() {
        
        nextHop_ = getDefaultInstance().getNextHop();
        onChanged();
        return this;
      }

      private int nextHopAS_ ;
      /**
       * <code>uint32 NextHopAS = 13;</code>
       */
      public int getNextHopAS() {
        return nextHopAS_;
      }
      /**
       * <code>uint32 NextHopAS = 13;</code>
       */
      public Builder setNextHopAS(int value) {
        
        nextHopAS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 NextHopAS = 13;</code>
       */
      public Builder clearNextHopAS() {
        
        nextHopAS_ = 0;
        onChanged();
        return this;
      }

      private int srcAS_ ;
      /**
       * <pre>
       * Autonomous system information
       * </pre>
       *
       * <code>uint32 SrcAS = 14;</code>
       */
      public int getSrcAS() {
        return srcAS_;
      }
      /**
       * <pre>
       * Autonomous system information
       * </pre>
       *
       * <code>uint32 SrcAS = 14;</code>
       */
      public Builder setSrcAS(int value) {
        
        srcAS_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Autonomous system information
       * </pre>
       *
       * <code>uint32 SrcAS = 14;</code>
       */
      public Builder clearSrcAS() {
        
        srcAS_ = 0;
        onChanged();
        return this;
      }

      private int dstAS_ ;
      /**
       * <code>uint32 DstAS = 15;</code>
       */
      public int getDstAS() {
        return dstAS_;
      }
      /**
       * <code>uint32 DstAS = 15;</code>
       */
      public Builder setDstAS(int value) {
        
        dstAS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 DstAS = 15;</code>
       */
      public Builder clearDstAS() {
        
        dstAS_ = 0;
        onChanged();
        return this;
      }

      private int srcNet_ ;
      /**
       * <pre>
       * Prefix size
       * </pre>
       *
       * <code>uint32 SrcNet = 16;</code>
       */
      public int getSrcNet() {
        return srcNet_;
      }
      /**
       * <pre>
       * Prefix size
       * </pre>
       *
       * <code>uint32 SrcNet = 16;</code>
       */
      public Builder setSrcNet(int value) {
        
        srcNet_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Prefix size
       * </pre>
       *
       * <code>uint32 SrcNet = 16;</code>
       */
      public Builder clearSrcNet() {
        
        srcNet_ = 0;
        onChanged();
        return this;
      }

      private int dstNet_ ;
      /**
       * <code>uint32 DstNet = 17;</code>
       */
      public int getDstNet() {
        return dstNet_;
      }
      /**
       * <code>uint32 DstNet = 17;</code>
       */
      public Builder setDstNet(int value) {
        
        dstNet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 DstNet = 17;</code>
       */
      public Builder clearDstNet() {
        
        dstNet_ = 0;
        onChanged();
        return this;
      }

      private int srcIf_ ;
      /**
       * <pre>
       * Interfaces
       * </pre>
       *
       * <code>uint32 SrcIf = 18;</code>
       */
      public int getSrcIf() {
        return srcIf_;
      }
      /**
       * <pre>
       * Interfaces
       * </pre>
       *
       * <code>uint32 SrcIf = 18;</code>
       */
      public Builder setSrcIf(int value) {
        
        srcIf_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Interfaces
       * </pre>
       *
       * <code>uint32 SrcIf = 18;</code>
       */
      public Builder clearSrcIf() {
        
        srcIf_ = 0;
        onChanged();
        return this;
      }

      private int dstIf_ ;
      /**
       * <code>uint32 DstIf = 19;</code>
       */
      public int getDstIf() {
        return dstIf_;
      }
      /**
       * <code>uint32 DstIf = 19;</code>
       */
      public Builder setDstIf(int value) {
        
        dstIf_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 DstIf = 19;</code>
       */
      public Builder clearDstIf() {
        
        dstIf_ = 0;
        onChanged();
        return this;
      }

      private int proto_ ;
      /**
       * <pre>
       * Layer 4 protocol
       * </pre>
       *
       * <code>uint32 Proto = 20;</code>
       */
      public int getProto() {
        return proto_;
      }
      /**
       * <pre>
       * Layer 4 protocol
       * </pre>
       *
       * <code>uint32 Proto = 20;</code>
       */
      public Builder setProto(int value) {
        
        proto_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Layer 4 protocol
       * </pre>
       *
       * <code>uint32 Proto = 20;</code>
       */
      public Builder clearProto() {
        
        proto_ = 0;
        onChanged();
        return this;
      }

      private int srcPort_ ;
      /**
       * <pre>
       * Port for UDP and TCP
       * </pre>
       *
       * <code>uint32 SrcPort = 21;</code>
       */
      public int getSrcPort() {
        return srcPort_;
      }
      /**
       * <pre>
       * Port for UDP and TCP
       * </pre>
       *
       * <code>uint32 SrcPort = 21;</code>
       */
      public Builder setSrcPort(int value) {
        
        srcPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Port for UDP and TCP
       * </pre>
       *
       * <code>uint32 SrcPort = 21;</code>
       */
      public Builder clearSrcPort() {
        
        srcPort_ = 0;
        onChanged();
        return this;
      }

      private int dstPort_ ;
      /**
       * <code>uint32 DstPort = 22;</code>
       */
      public int getDstPort() {
        return dstPort_;
      }
      /**
       * <code>uint32 DstPort = 22;</code>
       */
      public Builder setDstPort(int value) {
        
        dstPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 DstPort = 22;</code>
       */
      public Builder clearDstPort() {
        
        dstPort_ = 0;
        onChanged();
        return this;
      }

      private int iPTos_ ;
      /**
       * <pre>
       * IP and TCP special flags
       * </pre>
       *
       * <code>uint32 IPTos = 23;</code>
       */
      public int getIPTos() {
        return iPTos_;
      }
      /**
       * <pre>
       * IP and TCP special flags
       * </pre>
       *
       * <code>uint32 IPTos = 23;</code>
       */
      public Builder setIPTos(int value) {
        
        iPTos_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * IP and TCP special flags
       * </pre>
       *
       * <code>uint32 IPTos = 23;</code>
       */
      public Builder clearIPTos() {
        
        iPTos_ = 0;
        onChanged();
        return this;
      }

      private int forwardingStatus_ ;
      /**
       * <code>uint32 ForwardingStatus = 24;</code>
       */
      public int getForwardingStatus() {
        return forwardingStatus_;
      }
      /**
       * <code>uint32 ForwardingStatus = 24;</code>
       */
      public Builder setForwardingStatus(int value) {
        
        forwardingStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 ForwardingStatus = 24;</code>
       */
      public Builder clearForwardingStatus() {
        
        forwardingStatus_ = 0;
        onChanged();
        return this;
      }

      private int iPTTL_ ;
      /**
       * <code>uint32 IPTTL = 25;</code>
       */
      public int getIPTTL() {
        return iPTTL_;
      }
      /**
       * <code>uint32 IPTTL = 25;</code>
       */
      public Builder setIPTTL(int value) {
        
        iPTTL_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 IPTTL = 25;</code>
       */
      public Builder clearIPTTL() {
        
        iPTTL_ = 0;
        onChanged();
        return this;
      }

      private int tCPFlags_ ;
      /**
       * <code>uint32 TCPFlags = 26;</code>
       */
      public int getTCPFlags() {
        return tCPFlags_;
      }
      /**
       * <code>uint32 TCPFlags = 26;</code>
       */
      public Builder setTCPFlags(int value) {
        
        tCPFlags_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 TCPFlags = 26;</code>
       */
      public Builder clearTCPFlags() {
        
        tCPFlags_ = 0;
        onChanged();
        return this;
      }

      private long srcMac_ ;
      /**
       * <pre>
       * Ethernet information
       * </pre>
       *
       * <code>uint64 SrcMac = 27;</code>
       */
      public long getSrcMac() {
        return srcMac_;
      }
      /**
       * <pre>
       * Ethernet information
       * </pre>
       *
       * <code>uint64 SrcMac = 27;</code>
       */
      public Builder setSrcMac(long value) {
        
        srcMac_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ethernet information
       * </pre>
       *
       * <code>uint64 SrcMac = 27;</code>
       */
      public Builder clearSrcMac() {
        
        srcMac_ = 0L;
        onChanged();
        return this;
      }

      private long dstMac_ ;
      /**
       * <code>uint64 DstMac = 28;</code>
       */
      public long getDstMac() {
        return dstMac_;
      }
      /**
       * <code>uint64 DstMac = 28;</code>
       */
      public Builder setDstMac(long value) {
        
        dstMac_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 DstMac = 28;</code>
       */
      public Builder clearDstMac() {
        
        dstMac_ = 0L;
        onChanged();
        return this;
      }

      private int vlanId_ ;
      /**
       * <code>uint32 VlanId = 29;</code>
       */
      public int getVlanId() {
        return vlanId_;
      }
      /**
       * <code>uint32 VlanId = 29;</code>
       */
      public Builder setVlanId(int value) {
        
        vlanId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 VlanId = 29;</code>
       */
      public Builder clearVlanId() {
        
        vlanId_ = 0;
        onChanged();
        return this;
      }

      private int etype_ ;
      /**
       * <pre>
       * Layer 3 protocol (IPv4/IPv6/ARP/...)
       * </pre>
       *
       * <code>uint32 Etype = 30;</code>
       */
      public int getEtype() {
        return etype_;
      }
      /**
       * <pre>
       * Layer 3 protocol (IPv4/IPv6/ARP/...)
       * </pre>
       *
       * <code>uint32 Etype = 30;</code>
       */
      public Builder setEtype(int value) {
        
        etype_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Layer 3 protocol (IPv4/IPv6/ARP/...)
       * </pre>
       *
       * <code>uint32 Etype = 30;</code>
       */
      public Builder clearEtype() {
        
        etype_ = 0;
        onChanged();
        return this;
      }

      private int direction_ = 0;
      /**
       * <code>.flowmessageenriched.FlowMessage.DirectionType Direction = 90;</code>
       */
      public int getDirectionValue() {
        return direction_;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.DirectionType Direction = 90;</code>
       */
      public Builder setDirectionValue(int value) {
        direction_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.DirectionType Direction = 90;</code>
       */
      public bwnetflow.FlowMessagePb.FlowMessage.DirectionType getDirection() {
        @SuppressWarnings("deprecation")
        bwnetflow.FlowMessagePb.FlowMessage.DirectionType result = bwnetflow.FlowMessagePb.FlowMessage.DirectionType.valueOf(direction_);
        return result == null ? bwnetflow.FlowMessagePb.FlowMessage.DirectionType.UNRECOGNIZED : result;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.DirectionType Direction = 90;</code>
       */
      public Builder setDirection(bwnetflow.FlowMessagePb.FlowMessage.DirectionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        direction_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.DirectionType Direction = 90;</code>
       */
      public Builder clearDirection() {
        
        direction_ = 0;
        onChanged();
        return this;
      }

      private int cid_ ;
      /**
       * <code>uint32 Cid = 91;</code>
       */
      public int getCid() {
        return cid_;
      }
      /**
       * <code>uint32 Cid = 91;</code>
       */
      public Builder setCid(int value) {
        
        cid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 Cid = 91;</code>
       */
      public Builder clearCid() {
        
        cid_ = 0;
        onChanged();
        return this;
      }

      private int normalized_ = 0;
      /**
       * <code>.flowmessageenriched.FlowMessage.NormalizedType Normalized = 92;</code>
       */
      public int getNormalizedValue() {
        return normalized_;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.NormalizedType Normalized = 92;</code>
       */
      public Builder setNormalizedValue(int value) {
        normalized_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.NormalizedType Normalized = 92;</code>
       */
      public bwnetflow.FlowMessagePb.FlowMessage.NormalizedType getNormalized() {
        @SuppressWarnings("deprecation")
        bwnetflow.FlowMessagePb.FlowMessage.NormalizedType result = bwnetflow.FlowMessagePb.FlowMessage.NormalizedType.valueOf(normalized_);
        return result == null ? bwnetflow.FlowMessagePb.FlowMessage.NormalizedType.UNRECOGNIZED : result;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.NormalizedType Normalized = 92;</code>
       */
      public Builder setNormalized(bwnetflow.FlowMessagePb.FlowMessage.NormalizedType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        normalized_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.NormalizedType Normalized = 92;</code>
       */
      public Builder clearNormalized() {
        
        normalized_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object srcIfName_ = "";
      /**
       * <code>string SrcIfName = 93;</code>
       */
      public java.lang.String getSrcIfName() {
        java.lang.Object ref = srcIfName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          srcIfName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string SrcIfName = 93;</code>
       */
      public com.google.protobuf.ByteString
          getSrcIfNameBytes() {
        java.lang.Object ref = srcIfName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          srcIfName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string SrcIfName = 93;</code>
       */
      public Builder setSrcIfName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        srcIfName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string SrcIfName = 93;</code>
       */
      public Builder clearSrcIfName() {
        
        srcIfName_ = getDefaultInstance().getSrcIfName();
        onChanged();
        return this;
      }
      /**
       * <code>string SrcIfName = 93;</code>
       */
      public Builder setSrcIfNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        srcIfName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object srcIfDesc_ = "";
      /**
       * <code>string SrcIfDesc = 94;</code>
       */
      public java.lang.String getSrcIfDesc() {
        java.lang.Object ref = srcIfDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          srcIfDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string SrcIfDesc = 94;</code>
       */
      public com.google.protobuf.ByteString
          getSrcIfDescBytes() {
        java.lang.Object ref = srcIfDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          srcIfDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string SrcIfDesc = 94;</code>
       */
      public Builder setSrcIfDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        srcIfDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string SrcIfDesc = 94;</code>
       */
      public Builder clearSrcIfDesc() {
        
        srcIfDesc_ = getDefaultInstance().getSrcIfDesc();
        onChanged();
        return this;
      }
      /**
       * <code>string SrcIfDesc = 94;</code>
       */
      public Builder setSrcIfDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        srcIfDesc_ = value;
        onChanged();
        return this;
      }

      private int srcIfSpeed_ ;
      /**
       * <code>uint32 SrcIfSpeed = 95;</code>
       */
      public int getSrcIfSpeed() {
        return srcIfSpeed_;
      }
      /**
       * <code>uint32 SrcIfSpeed = 95;</code>
       */
      public Builder setSrcIfSpeed(int value) {
        
        srcIfSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 SrcIfSpeed = 95;</code>
       */
      public Builder clearSrcIfSpeed() {
        
        srcIfSpeed_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object dstIfName_ = "";
      /**
       * <code>string DstIfName = 96;</code>
       */
      public java.lang.String getDstIfName() {
        java.lang.Object ref = dstIfName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dstIfName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string DstIfName = 96;</code>
       */
      public com.google.protobuf.ByteString
          getDstIfNameBytes() {
        java.lang.Object ref = dstIfName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dstIfName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string DstIfName = 96;</code>
       */
      public Builder setDstIfName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dstIfName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string DstIfName = 96;</code>
       */
      public Builder clearDstIfName() {
        
        dstIfName_ = getDefaultInstance().getDstIfName();
        onChanged();
        return this;
      }
      /**
       * <code>string DstIfName = 96;</code>
       */
      public Builder setDstIfNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dstIfName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object dstIfDesc_ = "";
      /**
       * <code>string DstIfDesc = 97;</code>
       */
      public java.lang.String getDstIfDesc() {
        java.lang.Object ref = dstIfDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dstIfDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string DstIfDesc = 97;</code>
       */
      public com.google.protobuf.ByteString
          getDstIfDescBytes() {
        java.lang.Object ref = dstIfDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dstIfDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string DstIfDesc = 97;</code>
       */
      public Builder setDstIfDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dstIfDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string DstIfDesc = 97;</code>
       */
      public Builder clearDstIfDesc() {
        
        dstIfDesc_ = getDefaultInstance().getDstIfDesc();
        onChanged();
        return this;
      }
      /**
       * <code>string DstIfDesc = 97;</code>
       */
      public Builder setDstIfDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dstIfDesc_ = value;
        onChanged();
        return this;
      }

      private int dstIfSpeed_ ;
      /**
       * <code>uint32 DstIfSpeed = 98;</code>
       */
      public int getDstIfSpeed() {
        return dstIfSpeed_;
      }
      /**
       * <code>uint32 DstIfSpeed = 98;</code>
       */
      public Builder setDstIfSpeed(int value) {
        
        dstIfSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 DstIfSpeed = 98;</code>
       */
      public Builder clearDstIfSpeed() {
        
        dstIfSpeed_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object peer_ = "";
      /**
       * <code>string Peer = 99;</code>
       */
      public java.lang.String getPeer() {
        java.lang.Object ref = peer_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          peer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string Peer = 99;</code>
       */
      public com.google.protobuf.ByteString
          getPeerBytes() {
        java.lang.Object ref = peer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          peer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string Peer = 99;</code>
       */
      public Builder setPeer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        peer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string Peer = 99;</code>
       */
      public Builder clearPeer() {
        
        peer_ = getDefaultInstance().getPeer();
        onChanged();
        return this;
      }
      /**
       * <code>string Peer = 99;</code>
       */
      public Builder setPeerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        peer_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flowmessageenriched.FlowMessage)
    }

    // @@protoc_insertion_point(class_scope:flowmessageenriched.FlowMessage)
    private static final bwnetflow.FlowMessagePb.FlowMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new bwnetflow.FlowMessagePb.FlowMessage();
    }

    public static bwnetflow.FlowMessagePb.FlowMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlowMessage>
        PARSER = new com.google.protobuf.AbstractParser<FlowMessage>() {
      @java.lang.Override
      public FlowMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlowMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FlowMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlowMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public bwnetflow.FlowMessagePb.FlowMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flowmessageenriched_FlowMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flowmessageenriched_FlowMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034flow-messages-enriched.proto\022\023flowmess" +
      "ageenriched\"\274\010\n\013FlowMessage\0227\n\004Type\030\001 \001(" +
      "\0162).flowmessageenriched.FlowMessage.Flow" +
      "Type\022\021\n\tTimeRecvd\030\002 \001(\004\022\024\n\014SamplingRate\030" +
      "\003 \001(\004\022\023\n\013SequenceNum\030\004 \001(\r\022\020\n\010TimeFlow\030\005" +
      " \001(\004\022\r\n\005SrcIP\030\006 \001(\014\022\r\n\005DstIP\030\007 \001(\014\022:\n\tIP" +
      "version\030\010 \001(\0162\'.flowmessageenriched.Flow" +
      "Message.IPType\022\r\n\005Bytes\030\t \001(\004\022\017\n\007Packets" +
      "\030\n \001(\004\022\022\n\nRouterAddr\030\013 \001(\014\022\017\n\007NextHop\030\014 " +
      "\001(\014\022\021\n\tNextHopAS\030\r \001(\r\022\r\n\005SrcAS\030\016 \001(\r\022\r\n" +
      "\005DstAS\030\017 \001(\r\022\016\n\006SrcNet\030\020 \001(\r\022\016\n\006DstNet\030\021" +
      " \001(\r\022\r\n\005SrcIf\030\022 \001(\r\022\r\n\005DstIf\030\023 \001(\r\022\r\n\005Pr" +
      "oto\030\024 \001(\r\022\017\n\007SrcPort\030\025 \001(\r\022\017\n\007DstPort\030\026 " +
      "\001(\r\022\r\n\005IPTos\030\027 \001(\r\022\030\n\020ForwardingStatus\030\030" +
      " \001(\r\022\r\n\005IPTTL\030\031 \001(\r\022\020\n\010TCPFlags\030\032 \001(\r\022\016\n" +
      "\006SrcMac\030\033 \001(\004\022\016\n\006DstMac\030\034 \001(\004\022\016\n\006VlanId\030" +
      "\035 \001(\r\022\r\n\005Etype\030\036 \001(\r\022A\n\tDirection\030Z \001(\0162" +
      "..flowmessageenriched.FlowMessage.Direct" +
      "ionType\022\013\n\003Cid\030[ \001(\r\022C\n\nNormalized\030\\ \001(\016" +
      "2/.flowmessageenriched.FlowMessage.Norma" +
      "lizedType\022\021\n\tSrcIfName\030] \001(\t\022\021\n\tSrcIfDes" +
      "c\030^ \001(\t\022\022\n\nSrcIfSpeed\030_ \001(\r\022\021\n\tDstIfName" +
      "\030` \001(\t\022\021\n\tDstIfDesc\030a \001(\t\022\022\n\nDstIfSpeed\030" +
      "b \001(\r\022\014\n\004Peer\030c \001(\t\";\n\010FlowType\022\017\n\013FLOWU" +
      "NKNOWN\020\000\022\010\n\004NFV9\020\t\022\t\n\005IPFIX\020\n\022\t\n\005SFLOW\020\005" +
      "\"+\n\006IPType\022\r\n\tIPUNKNOWN\020\000\022\010\n\004IPv4\020\004\022\010\n\004I" +
      "Pv6\020\006\"8\n\rDirectionType\022\013\n\007Unknown\020\000\022\014\n\010I" +
      "ncoming\020\001\022\014\n\010Outgoing\020\002\"!\n\016NormalizedTyp" +
      "e\022\006\n\002No\020\000\022\007\n\003Yes\020\001B\032\n\tbwnetflowB\rFlowMes" +
      "sagePbb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_flowmessageenriched_FlowMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flowmessageenriched_FlowMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flowmessageenriched_FlowMessage_descriptor,
        new java.lang.String[] { "Type", "TimeRecvd", "SamplingRate", "SequenceNum", "TimeFlow", "SrcIP", "DstIP", "IPversion", "Bytes", "Packets", "RouterAddr", "NextHop", "NextHopAS", "SrcAS", "DstAS", "SrcNet", "DstNet", "SrcIf", "DstIf", "Proto", "SrcPort", "DstPort", "IPTos", "ForwardingStatus", "IPTTL", "TCPFlags", "SrcMac", "DstMac", "VlanId", "Etype", "Direction", "Cid", "Normalized", "SrcIfName", "SrcIfDesc", "SrcIfSpeed", "DstIfName", "DstIfDesc", "DstIfSpeed", "Peer", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
