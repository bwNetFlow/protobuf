// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flow-messages-enriched.proto

package bwnetflow;

public final class FlowMessageEnrichedPb {
  private FlowMessageEnrichedPb() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FlowMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flowmessageenriched.FlowMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.flowmessageenriched.FlowMessage.FlowType Type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.flowmessageenriched.FlowMessage.FlowType Type = 1;</code>
     * @return The type.
     */
    bwnetflow.FlowMessageEnrichedPb.FlowMessage.FlowType getType();

    /**
     * <code>uint64 TimeReceived = 2;</code>
     * @return The timeReceived.
     */
    long getTimeReceived();

    /**
     * <code>uint32 SequenceNum = 4;</code>
     * @return The sequenceNum.
     */
    int getSequenceNum();

    /**
     * <code>uint64 SamplingRate = 3;</code>
     * @return The samplingRate.
     */
    long getSamplingRate();

    /**
     * <code>uint32 FlowDirection = 42;</code>
     * @return The flowDirection.
     */
    int getFlowDirection();

    /**
     * <pre>
     * Sampler information
     * </pre>
     *
     * <code>bytes SamplerAddress = 11;</code>
     * @return The samplerAddress.
     */
    com.google.protobuf.ByteString getSamplerAddress();

    /**
     * <pre>
     * Found inside packet
     * </pre>
     *
     * <code>uint64 TimeFlowStart = 38;</code>
     * @return The timeFlowStart.
     */
    long getTimeFlowStart();

    /**
     * <code>uint64 TimeFlowEnd = 5;</code>
     * @return The timeFlowEnd.
     */
    long getTimeFlowEnd();

    /**
     * <pre>
     * Size of the sampled packet
     * </pre>
     *
     * <code>uint64 Bytes = 9;</code>
     * @return The bytes.
     */
    long getBytes();

    /**
     * <code>uint64 Packets = 10;</code>
     * @return The packets.
     */
    long getPackets();

    /**
     * <pre>
     * Source/destination addresses
     * </pre>
     *
     * <code>bytes SrcAddr = 6;</code>
     * @return The srcAddr.
     */
    com.google.protobuf.ByteString getSrcAddr();

    /**
     * <code>bytes DstAddr = 7;</code>
     * @return The dstAddr.
     */
    com.google.protobuf.ByteString getDstAddr();

    /**
     * <pre>
     * Layer 3 protocol (IPv4/IPv6/ARP/MPLS...)
     * </pre>
     *
     * <code>uint32 Etype = 30;</code>
     * @return The etype.
     */
    int getEtype();

    /**
     * <pre>
     * Layer 4 protocol
     * </pre>
     *
     * <code>uint32 Proto = 20;</code>
     * @return The proto.
     */
    int getProto();

    /**
     * <pre>
     * Ports for UDP and TCP
     * </pre>
     *
     * <code>uint32 SrcPort = 21;</code>
     * @return The srcPort.
     */
    int getSrcPort();

    /**
     * <code>uint32 DstPort = 22;</code>
     * @return The dstPort.
     */
    int getDstPort();

    /**
     * <pre>
     * Interfaces
     * </pre>
     *
     * <code>uint32 InIf = 18;</code>
     * @return The inIf.
     */
    int getInIf();

    /**
     * <code>uint32 OutIf = 19;</code>
     * @return The outIf.
     */
    int getOutIf();

    /**
     * <pre>
     * Ethernet information
     * </pre>
     *
     * <code>uint64 SrcMac = 27;</code>
     * @return The srcMac.
     */
    long getSrcMac();

    /**
     * <code>uint64 DstMac = 28;</code>
     * @return The dstMac.
     */
    long getDstMac();

    /**
     * <pre>
     * Vlan
     * </pre>
     *
     * <code>uint32 SrcVlan = 33;</code>
     * @return The srcVlan.
     */
    int getSrcVlan();

    /**
     * <code>uint32 DstVlan = 34;</code>
     * @return The dstVlan.
     */
    int getDstVlan();

    /**
     * <pre>
     * 802.1q VLAN in sampled packet
     * </pre>
     *
     * <code>uint32 VlanId = 29;</code>
     * @return The vlanId.
     */
    int getVlanId();

    /**
     * <pre>
     * VRF
     * </pre>
     *
     * <code>uint32 IngressVrfID = 39;</code>
     * @return The ingressVrfID.
     */
    int getIngressVrfID();

    /**
     * <code>uint32 EgressVrfID = 40;</code>
     * @return The egressVrfID.
     */
    int getEgressVrfID();

    /**
     * <pre>
     * IP and TCP special flags
     * </pre>
     *
     * <code>uint32 IPTos = 23;</code>
     * @return The iPTos.
     */
    int getIPTos();

    /**
     * <code>uint32 ForwardingStatus = 24;</code>
     * @return The forwardingStatus.
     */
    int getForwardingStatus();

    /**
     * <code>uint32 IPTTL = 25;</code>
     * @return The iPTTL.
     */
    int getIPTTL();

    /**
     * <code>uint32 TCPFlags = 26;</code>
     * @return The tCPFlags.
     */
    int getTCPFlags();

    /**
     * <code>uint32 IcmpType = 31;</code>
     * @return The icmpType.
     */
    int getIcmpType();

    /**
     * <code>uint32 IcmpCode = 32;</code>
     * @return The icmpCode.
     */
    int getIcmpCode();

    /**
     * <code>uint32 IPv6FlowLabel = 37;</code>
     * @return The iPv6FlowLabel.
     */
    int getIPv6FlowLabel();

    /**
     * <pre>
     * Fragments (IPv4/IPv6)
     * </pre>
     *
     * <code>uint32 FragmentId = 35;</code>
     * @return The fragmentId.
     */
    int getFragmentId();

    /**
     * <code>uint32 FragmentOffset = 36;</code>
     * @return The fragmentOffset.
     */
    int getFragmentOffset();

    /**
     * <code>uint32 BiFlowDirection = 41;</code>
     * @return The biFlowDirection.
     */
    int getBiFlowDirection();

    /**
     * <pre>
     * Autonomous system information
     * </pre>
     *
     * <code>uint32 SrcAS = 14;</code>
     * @return The srcAS.
     */
    int getSrcAS();

    /**
     * <code>uint32 DstAS = 15;</code>
     * @return The dstAS.
     */
    int getDstAS();

    /**
     * <code>bytes NextHop = 12;</code>
     * @return The nextHop.
     */
    com.google.protobuf.ByteString getNextHop();

    /**
     * <code>uint32 NextHopAS = 13;</code>
     * @return The nextHopAS.
     */
    int getNextHopAS();

    /**
     * <pre>
     * Prefix size
     * </pre>
     *
     * <code>uint32 SrcNet = 16;</code>
     * @return The srcNet.
     */
    int getSrcNet();

    /**
     * <code>uint32 DstNet = 17;</code>
     * @return The dstNet.
     */
    int getDstNet();

    /**
     * <pre>
     * MPLS information
     * </pre>
     *
     * <code>bool HasMPLS = 53;</code>
     * @return The hasMPLS.
     */
    boolean getHasMPLS();

    /**
     * <code>uint32 MPLSCount = 54;</code>
     * @return The mPLSCount.
     */
    int getMPLSCount();

    /**
     * <pre>
     * First TTL
     * </pre>
     *
     * <code>uint32 MPLS1TTL = 55;</code>
     * @return The mPLS1TTL.
     */
    int getMPLS1TTL();

    /**
     * <pre>
     * First Label
     * </pre>
     *
     * <code>uint32 MPLS1Label = 56;</code>
     * @return The mPLS1Label.
     */
    int getMPLS1Label();

    /**
     * <pre>
     * Second TTL
     * </pre>
     *
     * <code>uint32 MPLS2TTL = 57;</code>
     * @return The mPLS2TTL.
     */
    int getMPLS2TTL();

    /**
     * <pre>
     * Second Label
     * </pre>
     *
     * <code>uint32 MPLS2Label = 58;</code>
     * @return The mPLS2Label.
     */
    int getMPLS2Label();

    /**
     * <pre>
     * Third TTL
     * </pre>
     *
     * <code>uint32 MPLS3TTL = 59;</code>
     * @return The mPLS3TTL.
     */
    int getMPLS3TTL();

    /**
     * <pre>
     * Third Label
     * </pre>
     *
     * <code>uint32 MPLS3Label = 60;</code>
     * @return The mPLS3Label.
     */
    int getMPLS3Label();

    /**
     * <pre>
     * Last TTL
     * </pre>
     *
     * <code>uint32 MPLSLastTTL = 61;</code>
     * @return The mPLSLastTTL.
     */
    int getMPLSLastTTL();

    /**
     * <pre>
     * Last Label
     * </pre>
     *
     * <code>uint32 MPLSLastLabel = 62;</code>
     * @return The mPLSLastLabel.
     */
    int getMPLSLastLabel();

    /**
     * <pre>
     * bwNetFlow enricher fields
     * </pre>
     *
     * <code>uint32 Cid = 1000;</code>
     * @return The cid.
     */
    int getCid();

    /**
     * <pre>
     * deprecated
     * </pre>
     *
     * <code>string CidString = 1001;</code>
     * @return The cidString.
     */
    java.lang.String getCidString();
    /**
     * <pre>
     * deprecated
     * </pre>
     *
     * <code>string CidString = 1001;</code>
     * @return The bytes for cidString.
     */
    com.google.protobuf.ByteString
        getCidStringBytes();

    /**
     * <pre>
     * Src Customer ID - numerical ID, usually assigned by prefix
     * </pre>
     *
     * <code>uint32 SrcCid = 1012;</code>
     * @return The srcCid.
     */
    int getSrcCid();

    /**
     * <pre>
     * Dst Customer ID - numerical ID, usually assigned by prefix
     * </pre>
     *
     * <code>uint32 DstCid = 1013;</code>
     * @return The dstCid.
     */
    int getDstCid();

    /**
     * <pre>
     * Normalization - whether the sampling rate is accounted for
     * </pre>
     *
     * <code>.flowmessageenriched.FlowMessage.NormalizedType Normalized = 1002;</code>
     * @return The enum numeric value on the wire for normalized.
     */
    int getNormalizedValue();
    /**
     * <pre>
     * Normalization - whether the sampling rate is accounted for
     * </pre>
     *
     * <code>.flowmessageenriched.FlowMessage.NormalizedType Normalized = 1002;</code>
     * @return The normalized.
     */
    bwnetflow.FlowMessageEnrichedPb.FlowMessage.NormalizedType getNormalized();

    /**
     * <pre>
     * Fields for Interface Usability -- enriched using SNMP
     * </pre>
     *
     * <code>string SrcIfName = 1003;</code>
     * @return The srcIfName.
     */
    java.lang.String getSrcIfName();
    /**
     * <pre>
     * Fields for Interface Usability -- enriched using SNMP
     * </pre>
     *
     * <code>string SrcIfName = 1003;</code>
     * @return The bytes for srcIfName.
     */
    com.google.protobuf.ByteString
        getSrcIfNameBytes();

    /**
     * <pre>
     * set to the descrition, filtered by a regex in the enricher
     * </pre>
     *
     * <code>string SrcIfDesc = 1004;</code>
     * @return The srcIfDesc.
     */
    java.lang.String getSrcIfDesc();
    /**
     * <pre>
     * set to the descrition, filtered by a regex in the enricher
     * </pre>
     *
     * <code>string SrcIfDesc = 1004;</code>
     * @return The bytes for srcIfDesc.
     */
    com.google.protobuf.ByteString
        getSrcIfDescBytes();

    /**
     * <pre>
     * iface speed
     * </pre>
     *
     * <code>uint32 SrcIfSpeed = 1005;</code>
     * @return The srcIfSpeed.
     */
    int getSrcIfSpeed();

    /**
     * <code>string DstIfName = 1006;</code>
     * @return The dstIfName.
     */
    java.lang.String getDstIfName();
    /**
     * <code>string DstIfName = 1006;</code>
     * @return The bytes for dstIfName.
     */
    com.google.protobuf.ByteString
        getDstIfNameBytes();

    /**
     * <code>string DstIfDesc = 1007;</code>
     * @return The dstIfDesc.
     */
    java.lang.String getDstIfDesc();
    /**
     * <code>string DstIfDesc = 1007;</code>
     * @return The bytes for dstIfDesc.
     */
    com.google.protobuf.ByteString
        getDstIfDescBytes();

    /**
     * <code>uint32 DstIfSpeed = 1008;</code>
     * @return The dstIfSpeed.
     */
    int getDstIfSpeed();

    /**
     * <pre>
     * Protocol Name -- set for some well known protocols, based on Proto
     * </pre>
     *
     * <code>string ProtoName = 1009;</code>
     * @return The protoName.
     */
    java.lang.String getProtoName();
    /**
     * <pre>
     * Protocol Name -- set for some well known protocols, based on Proto
     * </pre>
     *
     * <code>string ProtoName = 1009;</code>
     * @return The bytes for protoName.
     */
    com.google.protobuf.ByteString
        getProtoNameBytes();

    /**
     * <pre>
     * Geolocation -- set using the provided database
     * </pre>
     *
     * <code>string RemoteCountry = 1010;</code>
     * @return The remoteCountry.
     */
    java.lang.String getRemoteCountry();
    /**
     * <pre>
     * Geolocation -- set using the provided database
     * </pre>
     *
     * <code>string RemoteCountry = 1010;</code>
     * @return The bytes for remoteCountry.
     */
    com.google.protobuf.ByteString
        getRemoteCountryBytes();

    /**
     * <pre>
     * Src Geolocation
     * </pre>
     *
     * <code>string SrcCountry = 1014;</code>
     * @return The srcCountry.
     */
    java.lang.String getSrcCountry();
    /**
     * <pre>
     * Src Geolocation
     * </pre>
     *
     * <code>string SrcCountry = 1014;</code>
     * @return The bytes for srcCountry.
     */
    com.google.protobuf.ByteString
        getSrcCountryBytes();

    /**
     * <pre>
     * Dst Geolocation
     * </pre>
     *
     * <code>string DstCountry = 1015;</code>
     * @return The dstCountry.
     */
    java.lang.String getDstCountry();
    /**
     * <pre>
     * Dst Geolocation
     * </pre>
     *
     * <code>string DstCountry = 1015;</code>
     * @return The bytes for dstCountry.
     */
    com.google.protobuf.ByteString
        getDstCountryBytes();

    /**
     * <pre>
     * RemoteAddr - which Addr field contains the remote/local address
     * </pre>
     *
     * <code>.flowmessageenriched.FlowMessage.RemoteAddrType RemoteAddr = 1011;</code>
     * @return The enum numeric value on the wire for remoteAddr.
     */
    int getRemoteAddrValue();
    /**
     * <pre>
     * RemoteAddr - which Addr field contains the remote/local address
     * </pre>
     *
     * <code>.flowmessageenriched.FlowMessage.RemoteAddrType RemoteAddr = 1011;</code>
     * @return The remoteAddr.
     */
    bwnetflow.FlowMessageEnrichedPb.FlowMessage.RemoteAddrType getRemoteAddr();

    /**
     * <pre>
     * free-form field to implement anything
     * </pre>
     *
     * <code>string Note = 1016;</code>
     * @return The note.
     */
    java.lang.String getNote();
    /**
     * <pre>
     * free-form field to implement anything
     * </pre>
     *
     * <code>string Note = 1016;</code>
     * @return The bytes for note.
     */
    com.google.protobuf.ByteString
        getNoteBytes();
  }
  /**
   * Protobuf type {@code flowmessageenriched.FlowMessage}
   */
  public static final class FlowMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flowmessageenriched.FlowMessage)
      FlowMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FlowMessage.newBuilder() to construct.
    private FlowMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FlowMessage() {
      type_ = 0;
      samplerAddress_ = com.google.protobuf.ByteString.EMPTY;
      srcAddr_ = com.google.protobuf.ByteString.EMPTY;
      dstAddr_ = com.google.protobuf.ByteString.EMPTY;
      nextHop_ = com.google.protobuf.ByteString.EMPTY;
      cidString_ = "";
      normalized_ = 0;
      srcIfName_ = "";
      srcIfDesc_ = "";
      dstIfName_ = "";
      dstIfDesc_ = "";
      protoName_ = "";
      remoteCountry_ = "";
      srcCountry_ = "";
      dstCountry_ = "";
      remoteAddr_ = 0;
      note_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FlowMessage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FlowMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {

              timeReceived_ = input.readUInt64();
              break;
            }
            case 24: {

              samplingRate_ = input.readUInt64();
              break;
            }
            case 32: {

              sequenceNum_ = input.readUInt32();
              break;
            }
            case 40: {

              timeFlowEnd_ = input.readUInt64();
              break;
            }
            case 50: {

              srcAddr_ = input.readBytes();
              break;
            }
            case 58: {

              dstAddr_ = input.readBytes();
              break;
            }
            case 72: {

              bytes_ = input.readUInt64();
              break;
            }
            case 80: {

              packets_ = input.readUInt64();
              break;
            }
            case 90: {

              samplerAddress_ = input.readBytes();
              break;
            }
            case 98: {

              nextHop_ = input.readBytes();
              break;
            }
            case 104: {

              nextHopAS_ = input.readUInt32();
              break;
            }
            case 112: {

              srcAS_ = input.readUInt32();
              break;
            }
            case 120: {

              dstAS_ = input.readUInt32();
              break;
            }
            case 128: {

              srcNet_ = input.readUInt32();
              break;
            }
            case 136: {

              dstNet_ = input.readUInt32();
              break;
            }
            case 144: {

              inIf_ = input.readUInt32();
              break;
            }
            case 152: {

              outIf_ = input.readUInt32();
              break;
            }
            case 160: {

              proto_ = input.readUInt32();
              break;
            }
            case 168: {

              srcPort_ = input.readUInt32();
              break;
            }
            case 176: {

              dstPort_ = input.readUInt32();
              break;
            }
            case 184: {

              iPTos_ = input.readUInt32();
              break;
            }
            case 192: {

              forwardingStatus_ = input.readUInt32();
              break;
            }
            case 200: {

              iPTTL_ = input.readUInt32();
              break;
            }
            case 208: {

              tCPFlags_ = input.readUInt32();
              break;
            }
            case 216: {

              srcMac_ = input.readUInt64();
              break;
            }
            case 224: {

              dstMac_ = input.readUInt64();
              break;
            }
            case 232: {

              vlanId_ = input.readUInt32();
              break;
            }
            case 240: {

              etype_ = input.readUInt32();
              break;
            }
            case 248: {

              icmpType_ = input.readUInt32();
              break;
            }
            case 256: {

              icmpCode_ = input.readUInt32();
              break;
            }
            case 264: {

              srcVlan_ = input.readUInt32();
              break;
            }
            case 272: {

              dstVlan_ = input.readUInt32();
              break;
            }
            case 280: {

              fragmentId_ = input.readUInt32();
              break;
            }
            case 288: {

              fragmentOffset_ = input.readUInt32();
              break;
            }
            case 296: {

              iPv6FlowLabel_ = input.readUInt32();
              break;
            }
            case 304: {

              timeFlowStart_ = input.readUInt64();
              break;
            }
            case 312: {

              ingressVrfID_ = input.readUInt32();
              break;
            }
            case 320: {

              egressVrfID_ = input.readUInt32();
              break;
            }
            case 328: {

              biFlowDirection_ = input.readUInt32();
              break;
            }
            case 336: {

              flowDirection_ = input.readUInt32();
              break;
            }
            case 424: {

              hasMPLS_ = input.readBool();
              break;
            }
            case 432: {

              mPLSCount_ = input.readUInt32();
              break;
            }
            case 440: {

              mPLS1TTL_ = input.readUInt32();
              break;
            }
            case 448: {

              mPLS1Label_ = input.readUInt32();
              break;
            }
            case 456: {

              mPLS2TTL_ = input.readUInt32();
              break;
            }
            case 464: {

              mPLS2Label_ = input.readUInt32();
              break;
            }
            case 472: {

              mPLS3TTL_ = input.readUInt32();
              break;
            }
            case 480: {

              mPLS3Label_ = input.readUInt32();
              break;
            }
            case 488: {

              mPLSLastTTL_ = input.readUInt32();
              break;
            }
            case 496: {

              mPLSLastLabel_ = input.readUInt32();
              break;
            }
            case 8000: {

              cid_ = input.readUInt32();
              break;
            }
            case 8010: {
              java.lang.String s = input.readStringRequireUtf8();

              cidString_ = s;
              break;
            }
            case 8016: {
              int rawValue = input.readEnum();

              normalized_ = rawValue;
              break;
            }
            case 8026: {
              java.lang.String s = input.readStringRequireUtf8();

              srcIfName_ = s;
              break;
            }
            case 8034: {
              java.lang.String s = input.readStringRequireUtf8();

              srcIfDesc_ = s;
              break;
            }
            case 8040: {

              srcIfSpeed_ = input.readUInt32();
              break;
            }
            case 8050: {
              java.lang.String s = input.readStringRequireUtf8();

              dstIfName_ = s;
              break;
            }
            case 8058: {
              java.lang.String s = input.readStringRequireUtf8();

              dstIfDesc_ = s;
              break;
            }
            case 8064: {

              dstIfSpeed_ = input.readUInt32();
              break;
            }
            case 8074: {
              java.lang.String s = input.readStringRequireUtf8();

              protoName_ = s;
              break;
            }
            case 8082: {
              java.lang.String s = input.readStringRequireUtf8();

              remoteCountry_ = s;
              break;
            }
            case 8088: {
              int rawValue = input.readEnum();

              remoteAddr_ = rawValue;
              break;
            }
            case 8096: {

              srcCid_ = input.readUInt32();
              break;
            }
            case 8104: {

              dstCid_ = input.readUInt32();
              break;
            }
            case 8114: {
              java.lang.String s = input.readStringRequireUtf8();

              srcCountry_ = s;
              break;
            }
            case 8122: {
              java.lang.String s = input.readStringRequireUtf8();

              dstCountry_ = s;
              break;
            }
            case 8130: {
              java.lang.String s = input.readStringRequireUtf8();

              note_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bwnetflow.FlowMessageEnrichedPb.internal_static_flowmessageenriched_FlowMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bwnetflow.FlowMessageEnrichedPb.internal_static_flowmessageenriched_FlowMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bwnetflow.FlowMessageEnrichedPb.FlowMessage.class, bwnetflow.FlowMessageEnrichedPb.FlowMessage.Builder.class);
    }

    /**
     * Protobuf enum {@code flowmessageenriched.FlowMessage.FlowType}
     */
    public enum FlowType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>FLOWUNKNOWN = 0;</code>
       */
      FLOWUNKNOWN(0),
      /**
       * <code>SFLOW_5 = 1;</code>
       */
      SFLOW_5(1),
      /**
       * <code>NETFLOW_V5 = 2;</code>
       */
      NETFLOW_V5(2),
      /**
       * <code>NETFLOW_V9 = 3;</code>
       */
      NETFLOW_V9(3),
      /**
       * <code>IPFIX = 4;</code>
       */
      IPFIX(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>FLOWUNKNOWN = 0;</code>
       */
      public static final int FLOWUNKNOWN_VALUE = 0;
      /**
       * <code>SFLOW_5 = 1;</code>
       */
      public static final int SFLOW_5_VALUE = 1;
      /**
       * <code>NETFLOW_V5 = 2;</code>
       */
      public static final int NETFLOW_V5_VALUE = 2;
      /**
       * <code>NETFLOW_V9 = 3;</code>
       */
      public static final int NETFLOW_V9_VALUE = 3;
      /**
       * <code>IPFIX = 4;</code>
       */
      public static final int IPFIX_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FlowType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static FlowType forNumber(int value) {
        switch (value) {
          case 0: return FLOWUNKNOWN;
          case 1: return SFLOW_5;
          case 2: return NETFLOW_V5;
          case 3: return NETFLOW_V9;
          case 4: return IPFIX;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<FlowType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          FlowType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<FlowType>() {
              public FlowType findValueByNumber(int number) {
                return FlowType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return bwnetflow.FlowMessageEnrichedPb.FlowMessage.getDescriptor().getEnumTypes().get(0);
      }

      private static final FlowType[] VALUES = values();

      public static FlowType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private FlowType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flowmessageenriched.FlowMessage.FlowType)
    }

    /**
     * Protobuf enum {@code flowmessageenriched.FlowMessage.NormalizedType}
     */
    public enum NormalizedType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>No = 0;</code>
       */
      No(0),
      /**
       * <code>Yes = 1;</code>
       */
      Yes(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>No = 0;</code>
       */
      public static final int No_VALUE = 0;
      /**
       * <code>Yes = 1;</code>
       */
      public static final int Yes_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static NormalizedType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static NormalizedType forNumber(int value) {
        switch (value) {
          case 0: return No;
          case 1: return Yes;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<NormalizedType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          NormalizedType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NormalizedType>() {
              public NormalizedType findValueByNumber(int number) {
                return NormalizedType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return bwnetflow.FlowMessageEnrichedPb.FlowMessage.getDescriptor().getEnumTypes().get(1);
      }

      private static final NormalizedType[] VALUES = values();

      public static NormalizedType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private NormalizedType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flowmessageenriched.FlowMessage.NormalizedType)
    }

    /**
     * Protobuf enum {@code flowmessageenriched.FlowMessage.RemoteAddrType}
     */
    public enum RemoteAddrType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>Neither = 0;</code>
       */
      Neither(0),
      /**
       * <code>Src = 1;</code>
       */
      Src(1),
      /**
       * <code>Dst = 2;</code>
       */
      Dst(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>Neither = 0;</code>
       */
      public static final int Neither_VALUE = 0;
      /**
       * <code>Src = 1;</code>
       */
      public static final int Src_VALUE = 1;
      /**
       * <code>Dst = 2;</code>
       */
      public static final int Dst_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RemoteAddrType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static RemoteAddrType forNumber(int value) {
        switch (value) {
          case 0: return Neither;
          case 1: return Src;
          case 2: return Dst;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RemoteAddrType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          RemoteAddrType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RemoteAddrType>() {
              public RemoteAddrType findValueByNumber(int number) {
                return RemoteAddrType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return bwnetflow.FlowMessageEnrichedPb.FlowMessage.getDescriptor().getEnumTypes().get(2);
      }

      private static final RemoteAddrType[] VALUES = values();

      public static RemoteAddrType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private RemoteAddrType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flowmessageenriched.FlowMessage.RemoteAddrType)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.flowmessageenriched.FlowMessage.FlowType Type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.flowmessageenriched.FlowMessage.FlowType Type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public bwnetflow.FlowMessageEnrichedPb.FlowMessage.FlowType getType() {
      @SuppressWarnings("deprecation")
      bwnetflow.FlowMessageEnrichedPb.FlowMessage.FlowType result = bwnetflow.FlowMessageEnrichedPb.FlowMessage.FlowType.valueOf(type_);
      return result == null ? bwnetflow.FlowMessageEnrichedPb.FlowMessage.FlowType.UNRECOGNIZED : result;
    }

    public static final int TIMERECEIVED_FIELD_NUMBER = 2;
    private long timeReceived_;
    /**
     * <code>uint64 TimeReceived = 2;</code>
     * @return The timeReceived.
     */
    @java.lang.Override
    public long getTimeReceived() {
      return timeReceived_;
    }

    public static final int SEQUENCENUM_FIELD_NUMBER = 4;
    private int sequenceNum_;
    /**
     * <code>uint32 SequenceNum = 4;</code>
     * @return The sequenceNum.
     */
    @java.lang.Override
    public int getSequenceNum() {
      return sequenceNum_;
    }

    public static final int SAMPLINGRATE_FIELD_NUMBER = 3;
    private long samplingRate_;
    /**
     * <code>uint64 SamplingRate = 3;</code>
     * @return The samplingRate.
     */
    @java.lang.Override
    public long getSamplingRate() {
      return samplingRate_;
    }

    public static final int FLOWDIRECTION_FIELD_NUMBER = 42;
    private int flowDirection_;
    /**
     * <code>uint32 FlowDirection = 42;</code>
     * @return The flowDirection.
     */
    @java.lang.Override
    public int getFlowDirection() {
      return flowDirection_;
    }

    public static final int SAMPLERADDRESS_FIELD_NUMBER = 11;
    private com.google.protobuf.ByteString samplerAddress_;
    /**
     * <pre>
     * Sampler information
     * </pre>
     *
     * <code>bytes SamplerAddress = 11;</code>
     * @return The samplerAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSamplerAddress() {
      return samplerAddress_;
    }

    public static final int TIMEFLOWSTART_FIELD_NUMBER = 38;
    private long timeFlowStart_;
    /**
     * <pre>
     * Found inside packet
     * </pre>
     *
     * <code>uint64 TimeFlowStart = 38;</code>
     * @return The timeFlowStart.
     */
    @java.lang.Override
    public long getTimeFlowStart() {
      return timeFlowStart_;
    }

    public static final int TIMEFLOWEND_FIELD_NUMBER = 5;
    private long timeFlowEnd_;
    /**
     * <code>uint64 TimeFlowEnd = 5;</code>
     * @return The timeFlowEnd.
     */
    @java.lang.Override
    public long getTimeFlowEnd() {
      return timeFlowEnd_;
    }

    public static final int BYTES_FIELD_NUMBER = 9;
    private long bytes_;
    /**
     * <pre>
     * Size of the sampled packet
     * </pre>
     *
     * <code>uint64 Bytes = 9;</code>
     * @return The bytes.
     */
    @java.lang.Override
    public long getBytes() {
      return bytes_;
    }

    public static final int PACKETS_FIELD_NUMBER = 10;
    private long packets_;
    /**
     * <code>uint64 Packets = 10;</code>
     * @return The packets.
     */
    @java.lang.Override
    public long getPackets() {
      return packets_;
    }

    public static final int SRCADDR_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString srcAddr_;
    /**
     * <pre>
     * Source/destination addresses
     * </pre>
     *
     * <code>bytes SrcAddr = 6;</code>
     * @return The srcAddr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSrcAddr() {
      return srcAddr_;
    }

    public static final int DSTADDR_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString dstAddr_;
    /**
     * <code>bytes DstAddr = 7;</code>
     * @return The dstAddr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDstAddr() {
      return dstAddr_;
    }

    public static final int ETYPE_FIELD_NUMBER = 30;
    private int etype_;
    /**
     * <pre>
     * Layer 3 protocol (IPv4/IPv6/ARP/MPLS...)
     * </pre>
     *
     * <code>uint32 Etype = 30;</code>
     * @return The etype.
     */
    @java.lang.Override
    public int getEtype() {
      return etype_;
    }

    public static final int PROTO_FIELD_NUMBER = 20;
    private int proto_;
    /**
     * <pre>
     * Layer 4 protocol
     * </pre>
     *
     * <code>uint32 Proto = 20;</code>
     * @return The proto.
     */
    @java.lang.Override
    public int getProto() {
      return proto_;
    }

    public static final int SRCPORT_FIELD_NUMBER = 21;
    private int srcPort_;
    /**
     * <pre>
     * Ports for UDP and TCP
     * </pre>
     *
     * <code>uint32 SrcPort = 21;</code>
     * @return The srcPort.
     */
    @java.lang.Override
    public int getSrcPort() {
      return srcPort_;
    }

    public static final int DSTPORT_FIELD_NUMBER = 22;
    private int dstPort_;
    /**
     * <code>uint32 DstPort = 22;</code>
     * @return The dstPort.
     */
    @java.lang.Override
    public int getDstPort() {
      return dstPort_;
    }

    public static final int INIF_FIELD_NUMBER = 18;
    private int inIf_;
    /**
     * <pre>
     * Interfaces
     * </pre>
     *
     * <code>uint32 InIf = 18;</code>
     * @return The inIf.
     */
    @java.lang.Override
    public int getInIf() {
      return inIf_;
    }

    public static final int OUTIF_FIELD_NUMBER = 19;
    private int outIf_;
    /**
     * <code>uint32 OutIf = 19;</code>
     * @return The outIf.
     */
    @java.lang.Override
    public int getOutIf() {
      return outIf_;
    }

    public static final int SRCMAC_FIELD_NUMBER = 27;
    private long srcMac_;
    /**
     * <pre>
     * Ethernet information
     * </pre>
     *
     * <code>uint64 SrcMac = 27;</code>
     * @return The srcMac.
     */
    @java.lang.Override
    public long getSrcMac() {
      return srcMac_;
    }

    public static final int DSTMAC_FIELD_NUMBER = 28;
    private long dstMac_;
    /**
     * <code>uint64 DstMac = 28;</code>
     * @return The dstMac.
     */
    @java.lang.Override
    public long getDstMac() {
      return dstMac_;
    }

    public static final int SRCVLAN_FIELD_NUMBER = 33;
    private int srcVlan_;
    /**
     * <pre>
     * Vlan
     * </pre>
     *
     * <code>uint32 SrcVlan = 33;</code>
     * @return The srcVlan.
     */
    @java.lang.Override
    public int getSrcVlan() {
      return srcVlan_;
    }

    public static final int DSTVLAN_FIELD_NUMBER = 34;
    private int dstVlan_;
    /**
     * <code>uint32 DstVlan = 34;</code>
     * @return The dstVlan.
     */
    @java.lang.Override
    public int getDstVlan() {
      return dstVlan_;
    }

    public static final int VLANID_FIELD_NUMBER = 29;
    private int vlanId_;
    /**
     * <pre>
     * 802.1q VLAN in sampled packet
     * </pre>
     *
     * <code>uint32 VlanId = 29;</code>
     * @return The vlanId.
     */
    @java.lang.Override
    public int getVlanId() {
      return vlanId_;
    }

    public static final int INGRESSVRFID_FIELD_NUMBER = 39;
    private int ingressVrfID_;
    /**
     * <pre>
     * VRF
     * </pre>
     *
     * <code>uint32 IngressVrfID = 39;</code>
     * @return The ingressVrfID.
     */
    @java.lang.Override
    public int getIngressVrfID() {
      return ingressVrfID_;
    }

    public static final int EGRESSVRFID_FIELD_NUMBER = 40;
    private int egressVrfID_;
    /**
     * <code>uint32 EgressVrfID = 40;</code>
     * @return The egressVrfID.
     */
    @java.lang.Override
    public int getEgressVrfID() {
      return egressVrfID_;
    }

    public static final int IPTOS_FIELD_NUMBER = 23;
    private int iPTos_;
    /**
     * <pre>
     * IP and TCP special flags
     * </pre>
     *
     * <code>uint32 IPTos = 23;</code>
     * @return The iPTos.
     */
    @java.lang.Override
    public int getIPTos() {
      return iPTos_;
    }

    public static final int FORWARDINGSTATUS_FIELD_NUMBER = 24;
    private int forwardingStatus_;
    /**
     * <code>uint32 ForwardingStatus = 24;</code>
     * @return The forwardingStatus.
     */
    @java.lang.Override
    public int getForwardingStatus() {
      return forwardingStatus_;
    }

    public static final int IPTTL_FIELD_NUMBER = 25;
    private int iPTTL_;
    /**
     * <code>uint32 IPTTL = 25;</code>
     * @return The iPTTL.
     */
    @java.lang.Override
    public int getIPTTL() {
      return iPTTL_;
    }

    public static final int TCPFLAGS_FIELD_NUMBER = 26;
    private int tCPFlags_;
    /**
     * <code>uint32 TCPFlags = 26;</code>
     * @return The tCPFlags.
     */
    @java.lang.Override
    public int getTCPFlags() {
      return tCPFlags_;
    }

    public static final int ICMPTYPE_FIELD_NUMBER = 31;
    private int icmpType_;
    /**
     * <code>uint32 IcmpType = 31;</code>
     * @return The icmpType.
     */
    @java.lang.Override
    public int getIcmpType() {
      return icmpType_;
    }

    public static final int ICMPCODE_FIELD_NUMBER = 32;
    private int icmpCode_;
    /**
     * <code>uint32 IcmpCode = 32;</code>
     * @return The icmpCode.
     */
    @java.lang.Override
    public int getIcmpCode() {
      return icmpCode_;
    }

    public static final int IPV6FLOWLABEL_FIELD_NUMBER = 37;
    private int iPv6FlowLabel_;
    /**
     * <code>uint32 IPv6FlowLabel = 37;</code>
     * @return The iPv6FlowLabel.
     */
    @java.lang.Override
    public int getIPv6FlowLabel() {
      return iPv6FlowLabel_;
    }

    public static final int FRAGMENTID_FIELD_NUMBER = 35;
    private int fragmentId_;
    /**
     * <pre>
     * Fragments (IPv4/IPv6)
     * </pre>
     *
     * <code>uint32 FragmentId = 35;</code>
     * @return The fragmentId.
     */
    @java.lang.Override
    public int getFragmentId() {
      return fragmentId_;
    }

    public static final int FRAGMENTOFFSET_FIELD_NUMBER = 36;
    private int fragmentOffset_;
    /**
     * <code>uint32 FragmentOffset = 36;</code>
     * @return The fragmentOffset.
     */
    @java.lang.Override
    public int getFragmentOffset() {
      return fragmentOffset_;
    }

    public static final int BIFLOWDIRECTION_FIELD_NUMBER = 41;
    private int biFlowDirection_;
    /**
     * <code>uint32 BiFlowDirection = 41;</code>
     * @return The biFlowDirection.
     */
    @java.lang.Override
    public int getBiFlowDirection() {
      return biFlowDirection_;
    }

    public static final int SRCAS_FIELD_NUMBER = 14;
    private int srcAS_;
    /**
     * <pre>
     * Autonomous system information
     * </pre>
     *
     * <code>uint32 SrcAS = 14;</code>
     * @return The srcAS.
     */
    @java.lang.Override
    public int getSrcAS() {
      return srcAS_;
    }

    public static final int DSTAS_FIELD_NUMBER = 15;
    private int dstAS_;
    /**
     * <code>uint32 DstAS = 15;</code>
     * @return The dstAS.
     */
    @java.lang.Override
    public int getDstAS() {
      return dstAS_;
    }

    public static final int NEXTHOP_FIELD_NUMBER = 12;
    private com.google.protobuf.ByteString nextHop_;
    /**
     * <code>bytes NextHop = 12;</code>
     * @return The nextHop.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getNextHop() {
      return nextHop_;
    }

    public static final int NEXTHOPAS_FIELD_NUMBER = 13;
    private int nextHopAS_;
    /**
     * <code>uint32 NextHopAS = 13;</code>
     * @return The nextHopAS.
     */
    @java.lang.Override
    public int getNextHopAS() {
      return nextHopAS_;
    }

    public static final int SRCNET_FIELD_NUMBER = 16;
    private int srcNet_;
    /**
     * <pre>
     * Prefix size
     * </pre>
     *
     * <code>uint32 SrcNet = 16;</code>
     * @return The srcNet.
     */
    @java.lang.Override
    public int getSrcNet() {
      return srcNet_;
    }

    public static final int DSTNET_FIELD_NUMBER = 17;
    private int dstNet_;
    /**
     * <code>uint32 DstNet = 17;</code>
     * @return The dstNet.
     */
    @java.lang.Override
    public int getDstNet() {
      return dstNet_;
    }

    public static final int HASMPLS_FIELD_NUMBER = 53;
    private boolean hasMPLS_;
    /**
     * <pre>
     * MPLS information
     * </pre>
     *
     * <code>bool HasMPLS = 53;</code>
     * @return The hasMPLS.
     */
    @java.lang.Override
    public boolean getHasMPLS() {
      return hasMPLS_;
    }

    public static final int MPLSCOUNT_FIELD_NUMBER = 54;
    private int mPLSCount_;
    /**
     * <code>uint32 MPLSCount = 54;</code>
     * @return The mPLSCount.
     */
    @java.lang.Override
    public int getMPLSCount() {
      return mPLSCount_;
    }

    public static final int MPLS1TTL_FIELD_NUMBER = 55;
    private int mPLS1TTL_;
    /**
     * <pre>
     * First TTL
     * </pre>
     *
     * <code>uint32 MPLS1TTL = 55;</code>
     * @return The mPLS1TTL.
     */
    @java.lang.Override
    public int getMPLS1TTL() {
      return mPLS1TTL_;
    }

    public static final int MPLS1LABEL_FIELD_NUMBER = 56;
    private int mPLS1Label_;
    /**
     * <pre>
     * First Label
     * </pre>
     *
     * <code>uint32 MPLS1Label = 56;</code>
     * @return The mPLS1Label.
     */
    @java.lang.Override
    public int getMPLS1Label() {
      return mPLS1Label_;
    }

    public static final int MPLS2TTL_FIELD_NUMBER = 57;
    private int mPLS2TTL_;
    /**
     * <pre>
     * Second TTL
     * </pre>
     *
     * <code>uint32 MPLS2TTL = 57;</code>
     * @return The mPLS2TTL.
     */
    @java.lang.Override
    public int getMPLS2TTL() {
      return mPLS2TTL_;
    }

    public static final int MPLS2LABEL_FIELD_NUMBER = 58;
    private int mPLS2Label_;
    /**
     * <pre>
     * Second Label
     * </pre>
     *
     * <code>uint32 MPLS2Label = 58;</code>
     * @return The mPLS2Label.
     */
    @java.lang.Override
    public int getMPLS2Label() {
      return mPLS2Label_;
    }

    public static final int MPLS3TTL_FIELD_NUMBER = 59;
    private int mPLS3TTL_;
    /**
     * <pre>
     * Third TTL
     * </pre>
     *
     * <code>uint32 MPLS3TTL = 59;</code>
     * @return The mPLS3TTL.
     */
    @java.lang.Override
    public int getMPLS3TTL() {
      return mPLS3TTL_;
    }

    public static final int MPLS3LABEL_FIELD_NUMBER = 60;
    private int mPLS3Label_;
    /**
     * <pre>
     * Third Label
     * </pre>
     *
     * <code>uint32 MPLS3Label = 60;</code>
     * @return The mPLS3Label.
     */
    @java.lang.Override
    public int getMPLS3Label() {
      return mPLS3Label_;
    }

    public static final int MPLSLASTTTL_FIELD_NUMBER = 61;
    private int mPLSLastTTL_;
    /**
     * <pre>
     * Last TTL
     * </pre>
     *
     * <code>uint32 MPLSLastTTL = 61;</code>
     * @return The mPLSLastTTL.
     */
    @java.lang.Override
    public int getMPLSLastTTL() {
      return mPLSLastTTL_;
    }

    public static final int MPLSLASTLABEL_FIELD_NUMBER = 62;
    private int mPLSLastLabel_;
    /**
     * <pre>
     * Last Label
     * </pre>
     *
     * <code>uint32 MPLSLastLabel = 62;</code>
     * @return The mPLSLastLabel.
     */
    @java.lang.Override
    public int getMPLSLastLabel() {
      return mPLSLastLabel_;
    }

    public static final int CID_FIELD_NUMBER = 1000;
    private int cid_;
    /**
     * <pre>
     * bwNetFlow enricher fields
     * </pre>
     *
     * <code>uint32 Cid = 1000;</code>
     * @return The cid.
     */
    @java.lang.Override
    public int getCid() {
      return cid_;
    }

    public static final int CIDSTRING_FIELD_NUMBER = 1001;
    private volatile java.lang.Object cidString_;
    /**
     * <pre>
     * deprecated
     * </pre>
     *
     * <code>string CidString = 1001;</code>
     * @return The cidString.
     */
    @java.lang.Override
    public java.lang.String getCidString() {
      java.lang.Object ref = cidString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cidString_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * deprecated
     * </pre>
     *
     * <code>string CidString = 1001;</code>
     * @return The bytes for cidString.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCidStringBytes() {
      java.lang.Object ref = cidString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cidString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SRCCID_FIELD_NUMBER = 1012;
    private int srcCid_;
    /**
     * <pre>
     * Src Customer ID - numerical ID, usually assigned by prefix
     * </pre>
     *
     * <code>uint32 SrcCid = 1012;</code>
     * @return The srcCid.
     */
    @java.lang.Override
    public int getSrcCid() {
      return srcCid_;
    }

    public static final int DSTCID_FIELD_NUMBER = 1013;
    private int dstCid_;
    /**
     * <pre>
     * Dst Customer ID - numerical ID, usually assigned by prefix
     * </pre>
     *
     * <code>uint32 DstCid = 1013;</code>
     * @return The dstCid.
     */
    @java.lang.Override
    public int getDstCid() {
      return dstCid_;
    }

    public static final int NORMALIZED_FIELD_NUMBER = 1002;
    private int normalized_;
    /**
     * <pre>
     * Normalization - whether the sampling rate is accounted for
     * </pre>
     *
     * <code>.flowmessageenriched.FlowMessage.NormalizedType Normalized = 1002;</code>
     * @return The enum numeric value on the wire for normalized.
     */
    @java.lang.Override public int getNormalizedValue() {
      return normalized_;
    }
    /**
     * <pre>
     * Normalization - whether the sampling rate is accounted for
     * </pre>
     *
     * <code>.flowmessageenriched.FlowMessage.NormalizedType Normalized = 1002;</code>
     * @return The normalized.
     */
    @java.lang.Override public bwnetflow.FlowMessageEnrichedPb.FlowMessage.NormalizedType getNormalized() {
      @SuppressWarnings("deprecation")
      bwnetflow.FlowMessageEnrichedPb.FlowMessage.NormalizedType result = bwnetflow.FlowMessageEnrichedPb.FlowMessage.NormalizedType.valueOf(normalized_);
      return result == null ? bwnetflow.FlowMessageEnrichedPb.FlowMessage.NormalizedType.UNRECOGNIZED : result;
    }

    public static final int SRCIFNAME_FIELD_NUMBER = 1003;
    private volatile java.lang.Object srcIfName_;
    /**
     * <pre>
     * Fields for Interface Usability -- enriched using SNMP
     * </pre>
     *
     * <code>string SrcIfName = 1003;</code>
     * @return The srcIfName.
     */
    @java.lang.Override
    public java.lang.String getSrcIfName() {
      java.lang.Object ref = srcIfName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        srcIfName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Fields for Interface Usability -- enriched using SNMP
     * </pre>
     *
     * <code>string SrcIfName = 1003;</code>
     * @return The bytes for srcIfName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSrcIfNameBytes() {
      java.lang.Object ref = srcIfName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        srcIfName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SRCIFDESC_FIELD_NUMBER = 1004;
    private volatile java.lang.Object srcIfDesc_;
    /**
     * <pre>
     * set to the descrition, filtered by a regex in the enricher
     * </pre>
     *
     * <code>string SrcIfDesc = 1004;</code>
     * @return The srcIfDesc.
     */
    @java.lang.Override
    public java.lang.String getSrcIfDesc() {
      java.lang.Object ref = srcIfDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        srcIfDesc_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * set to the descrition, filtered by a regex in the enricher
     * </pre>
     *
     * <code>string SrcIfDesc = 1004;</code>
     * @return The bytes for srcIfDesc.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSrcIfDescBytes() {
      java.lang.Object ref = srcIfDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        srcIfDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SRCIFSPEED_FIELD_NUMBER = 1005;
    private int srcIfSpeed_;
    /**
     * <pre>
     * iface speed
     * </pre>
     *
     * <code>uint32 SrcIfSpeed = 1005;</code>
     * @return The srcIfSpeed.
     */
    @java.lang.Override
    public int getSrcIfSpeed() {
      return srcIfSpeed_;
    }

    public static final int DSTIFNAME_FIELD_NUMBER = 1006;
    private volatile java.lang.Object dstIfName_;
    /**
     * <code>string DstIfName = 1006;</code>
     * @return The dstIfName.
     */
    @java.lang.Override
    public java.lang.String getDstIfName() {
      java.lang.Object ref = dstIfName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dstIfName_ = s;
        return s;
      }
    }
    /**
     * <code>string DstIfName = 1006;</code>
     * @return The bytes for dstIfName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDstIfNameBytes() {
      java.lang.Object ref = dstIfName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dstIfName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DSTIFDESC_FIELD_NUMBER = 1007;
    private volatile java.lang.Object dstIfDesc_;
    /**
     * <code>string DstIfDesc = 1007;</code>
     * @return The dstIfDesc.
     */
    @java.lang.Override
    public java.lang.String getDstIfDesc() {
      java.lang.Object ref = dstIfDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dstIfDesc_ = s;
        return s;
      }
    }
    /**
     * <code>string DstIfDesc = 1007;</code>
     * @return The bytes for dstIfDesc.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDstIfDescBytes() {
      java.lang.Object ref = dstIfDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dstIfDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DSTIFSPEED_FIELD_NUMBER = 1008;
    private int dstIfSpeed_;
    /**
     * <code>uint32 DstIfSpeed = 1008;</code>
     * @return The dstIfSpeed.
     */
    @java.lang.Override
    public int getDstIfSpeed() {
      return dstIfSpeed_;
    }

    public static final int PROTONAME_FIELD_NUMBER = 1009;
    private volatile java.lang.Object protoName_;
    /**
     * <pre>
     * Protocol Name -- set for some well known protocols, based on Proto
     * </pre>
     *
     * <code>string ProtoName = 1009;</code>
     * @return The protoName.
     */
    @java.lang.Override
    public java.lang.String getProtoName() {
      java.lang.Object ref = protoName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        protoName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Protocol Name -- set for some well known protocols, based on Proto
     * </pre>
     *
     * <code>string ProtoName = 1009;</code>
     * @return The bytes for protoName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getProtoNameBytes() {
      java.lang.Object ref = protoName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        protoName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REMOTECOUNTRY_FIELD_NUMBER = 1010;
    private volatile java.lang.Object remoteCountry_;
    /**
     * <pre>
     * Geolocation -- set using the provided database
     * </pre>
     *
     * <code>string RemoteCountry = 1010;</code>
     * @return The remoteCountry.
     */
    @java.lang.Override
    public java.lang.String getRemoteCountry() {
      java.lang.Object ref = remoteCountry_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        remoteCountry_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Geolocation -- set using the provided database
     * </pre>
     *
     * <code>string RemoteCountry = 1010;</code>
     * @return The bytes for remoteCountry.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRemoteCountryBytes() {
      java.lang.Object ref = remoteCountry_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        remoteCountry_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SRCCOUNTRY_FIELD_NUMBER = 1014;
    private volatile java.lang.Object srcCountry_;
    /**
     * <pre>
     * Src Geolocation
     * </pre>
     *
     * <code>string SrcCountry = 1014;</code>
     * @return The srcCountry.
     */
    @java.lang.Override
    public java.lang.String getSrcCountry() {
      java.lang.Object ref = srcCountry_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        srcCountry_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Src Geolocation
     * </pre>
     *
     * <code>string SrcCountry = 1014;</code>
     * @return The bytes for srcCountry.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSrcCountryBytes() {
      java.lang.Object ref = srcCountry_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        srcCountry_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DSTCOUNTRY_FIELD_NUMBER = 1015;
    private volatile java.lang.Object dstCountry_;
    /**
     * <pre>
     * Dst Geolocation
     * </pre>
     *
     * <code>string DstCountry = 1015;</code>
     * @return The dstCountry.
     */
    @java.lang.Override
    public java.lang.String getDstCountry() {
      java.lang.Object ref = dstCountry_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dstCountry_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Dst Geolocation
     * </pre>
     *
     * <code>string DstCountry = 1015;</code>
     * @return The bytes for dstCountry.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDstCountryBytes() {
      java.lang.Object ref = dstCountry_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dstCountry_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REMOTEADDR_FIELD_NUMBER = 1011;
    private int remoteAddr_;
    /**
     * <pre>
     * RemoteAddr - which Addr field contains the remote/local address
     * </pre>
     *
     * <code>.flowmessageenriched.FlowMessage.RemoteAddrType RemoteAddr = 1011;</code>
     * @return The enum numeric value on the wire for remoteAddr.
     */
    @java.lang.Override public int getRemoteAddrValue() {
      return remoteAddr_;
    }
    /**
     * <pre>
     * RemoteAddr - which Addr field contains the remote/local address
     * </pre>
     *
     * <code>.flowmessageenriched.FlowMessage.RemoteAddrType RemoteAddr = 1011;</code>
     * @return The remoteAddr.
     */
    @java.lang.Override public bwnetflow.FlowMessageEnrichedPb.FlowMessage.RemoteAddrType getRemoteAddr() {
      @SuppressWarnings("deprecation")
      bwnetflow.FlowMessageEnrichedPb.FlowMessage.RemoteAddrType result = bwnetflow.FlowMessageEnrichedPb.FlowMessage.RemoteAddrType.valueOf(remoteAddr_);
      return result == null ? bwnetflow.FlowMessageEnrichedPb.FlowMessage.RemoteAddrType.UNRECOGNIZED : result;
    }

    public static final int NOTE_FIELD_NUMBER = 1016;
    private volatile java.lang.Object note_;
    /**
     * <pre>
     * free-form field to implement anything
     * </pre>
     *
     * <code>string Note = 1016;</code>
     * @return The note.
     */
    @java.lang.Override
    public java.lang.String getNote() {
      java.lang.Object ref = note_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        note_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * free-form field to implement anything
     * </pre>
     *
     * <code>string Note = 1016;</code>
     * @return The bytes for note.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNoteBytes() {
      java.lang.Object ref = note_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        note_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != bwnetflow.FlowMessageEnrichedPb.FlowMessage.FlowType.FLOWUNKNOWN.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (timeReceived_ != 0L) {
        output.writeUInt64(2, timeReceived_);
      }
      if (samplingRate_ != 0L) {
        output.writeUInt64(3, samplingRate_);
      }
      if (sequenceNum_ != 0) {
        output.writeUInt32(4, sequenceNum_);
      }
      if (timeFlowEnd_ != 0L) {
        output.writeUInt64(5, timeFlowEnd_);
      }
      if (!srcAddr_.isEmpty()) {
        output.writeBytes(6, srcAddr_);
      }
      if (!dstAddr_.isEmpty()) {
        output.writeBytes(7, dstAddr_);
      }
      if (bytes_ != 0L) {
        output.writeUInt64(9, bytes_);
      }
      if (packets_ != 0L) {
        output.writeUInt64(10, packets_);
      }
      if (!samplerAddress_.isEmpty()) {
        output.writeBytes(11, samplerAddress_);
      }
      if (!nextHop_.isEmpty()) {
        output.writeBytes(12, nextHop_);
      }
      if (nextHopAS_ != 0) {
        output.writeUInt32(13, nextHopAS_);
      }
      if (srcAS_ != 0) {
        output.writeUInt32(14, srcAS_);
      }
      if (dstAS_ != 0) {
        output.writeUInt32(15, dstAS_);
      }
      if (srcNet_ != 0) {
        output.writeUInt32(16, srcNet_);
      }
      if (dstNet_ != 0) {
        output.writeUInt32(17, dstNet_);
      }
      if (inIf_ != 0) {
        output.writeUInt32(18, inIf_);
      }
      if (outIf_ != 0) {
        output.writeUInt32(19, outIf_);
      }
      if (proto_ != 0) {
        output.writeUInt32(20, proto_);
      }
      if (srcPort_ != 0) {
        output.writeUInt32(21, srcPort_);
      }
      if (dstPort_ != 0) {
        output.writeUInt32(22, dstPort_);
      }
      if (iPTos_ != 0) {
        output.writeUInt32(23, iPTos_);
      }
      if (forwardingStatus_ != 0) {
        output.writeUInt32(24, forwardingStatus_);
      }
      if (iPTTL_ != 0) {
        output.writeUInt32(25, iPTTL_);
      }
      if (tCPFlags_ != 0) {
        output.writeUInt32(26, tCPFlags_);
      }
      if (srcMac_ != 0L) {
        output.writeUInt64(27, srcMac_);
      }
      if (dstMac_ != 0L) {
        output.writeUInt64(28, dstMac_);
      }
      if (vlanId_ != 0) {
        output.writeUInt32(29, vlanId_);
      }
      if (etype_ != 0) {
        output.writeUInt32(30, etype_);
      }
      if (icmpType_ != 0) {
        output.writeUInt32(31, icmpType_);
      }
      if (icmpCode_ != 0) {
        output.writeUInt32(32, icmpCode_);
      }
      if (srcVlan_ != 0) {
        output.writeUInt32(33, srcVlan_);
      }
      if (dstVlan_ != 0) {
        output.writeUInt32(34, dstVlan_);
      }
      if (fragmentId_ != 0) {
        output.writeUInt32(35, fragmentId_);
      }
      if (fragmentOffset_ != 0) {
        output.writeUInt32(36, fragmentOffset_);
      }
      if (iPv6FlowLabel_ != 0) {
        output.writeUInt32(37, iPv6FlowLabel_);
      }
      if (timeFlowStart_ != 0L) {
        output.writeUInt64(38, timeFlowStart_);
      }
      if (ingressVrfID_ != 0) {
        output.writeUInt32(39, ingressVrfID_);
      }
      if (egressVrfID_ != 0) {
        output.writeUInt32(40, egressVrfID_);
      }
      if (biFlowDirection_ != 0) {
        output.writeUInt32(41, biFlowDirection_);
      }
      if (flowDirection_ != 0) {
        output.writeUInt32(42, flowDirection_);
      }
      if (hasMPLS_ != false) {
        output.writeBool(53, hasMPLS_);
      }
      if (mPLSCount_ != 0) {
        output.writeUInt32(54, mPLSCount_);
      }
      if (mPLS1TTL_ != 0) {
        output.writeUInt32(55, mPLS1TTL_);
      }
      if (mPLS1Label_ != 0) {
        output.writeUInt32(56, mPLS1Label_);
      }
      if (mPLS2TTL_ != 0) {
        output.writeUInt32(57, mPLS2TTL_);
      }
      if (mPLS2Label_ != 0) {
        output.writeUInt32(58, mPLS2Label_);
      }
      if (mPLS3TTL_ != 0) {
        output.writeUInt32(59, mPLS3TTL_);
      }
      if (mPLS3Label_ != 0) {
        output.writeUInt32(60, mPLS3Label_);
      }
      if (mPLSLastTTL_ != 0) {
        output.writeUInt32(61, mPLSLastTTL_);
      }
      if (mPLSLastLabel_ != 0) {
        output.writeUInt32(62, mPLSLastLabel_);
      }
      if (cid_ != 0) {
        output.writeUInt32(1000, cid_);
      }
      if (!getCidStringBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1001, cidString_);
      }
      if (normalized_ != bwnetflow.FlowMessageEnrichedPb.FlowMessage.NormalizedType.No.getNumber()) {
        output.writeEnum(1002, normalized_);
      }
      if (!getSrcIfNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1003, srcIfName_);
      }
      if (!getSrcIfDescBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1004, srcIfDesc_);
      }
      if (srcIfSpeed_ != 0) {
        output.writeUInt32(1005, srcIfSpeed_);
      }
      if (!getDstIfNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1006, dstIfName_);
      }
      if (!getDstIfDescBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1007, dstIfDesc_);
      }
      if (dstIfSpeed_ != 0) {
        output.writeUInt32(1008, dstIfSpeed_);
      }
      if (!getProtoNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1009, protoName_);
      }
      if (!getRemoteCountryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1010, remoteCountry_);
      }
      if (remoteAddr_ != bwnetflow.FlowMessageEnrichedPb.FlowMessage.RemoteAddrType.Neither.getNumber()) {
        output.writeEnum(1011, remoteAddr_);
      }
      if (srcCid_ != 0) {
        output.writeUInt32(1012, srcCid_);
      }
      if (dstCid_ != 0) {
        output.writeUInt32(1013, dstCid_);
      }
      if (!getSrcCountryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1014, srcCountry_);
      }
      if (!getDstCountryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1015, dstCountry_);
      }
      if (!getNoteBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1016, note_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != bwnetflow.FlowMessageEnrichedPb.FlowMessage.FlowType.FLOWUNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (timeReceived_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, timeReceived_);
      }
      if (samplingRate_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, samplingRate_);
      }
      if (sequenceNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, sequenceNum_);
      }
      if (timeFlowEnd_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, timeFlowEnd_);
      }
      if (!srcAddr_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, srcAddr_);
      }
      if (!dstAddr_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, dstAddr_);
      }
      if (bytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, bytes_);
      }
      if (packets_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, packets_);
      }
      if (!samplerAddress_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, samplerAddress_);
      }
      if (!nextHop_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, nextHop_);
      }
      if (nextHopAS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, nextHopAS_);
      }
      if (srcAS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, srcAS_);
      }
      if (dstAS_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, dstAS_);
      }
      if (srcNet_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, srcNet_);
      }
      if (dstNet_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, dstNet_);
      }
      if (inIf_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, inIf_);
      }
      if (outIf_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, outIf_);
      }
      if (proto_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, proto_);
      }
      if (srcPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(21, srcPort_);
      }
      if (dstPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(22, dstPort_);
      }
      if (iPTos_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, iPTos_);
      }
      if (forwardingStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(24, forwardingStatus_);
      }
      if (iPTTL_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(25, iPTTL_);
      }
      if (tCPFlags_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(26, tCPFlags_);
      }
      if (srcMac_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(27, srcMac_);
      }
      if (dstMac_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(28, dstMac_);
      }
      if (vlanId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(29, vlanId_);
      }
      if (etype_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(30, etype_);
      }
      if (icmpType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(31, icmpType_);
      }
      if (icmpCode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(32, icmpCode_);
      }
      if (srcVlan_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(33, srcVlan_);
      }
      if (dstVlan_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(34, dstVlan_);
      }
      if (fragmentId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(35, fragmentId_);
      }
      if (fragmentOffset_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(36, fragmentOffset_);
      }
      if (iPv6FlowLabel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(37, iPv6FlowLabel_);
      }
      if (timeFlowStart_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(38, timeFlowStart_);
      }
      if (ingressVrfID_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(39, ingressVrfID_);
      }
      if (egressVrfID_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(40, egressVrfID_);
      }
      if (biFlowDirection_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(41, biFlowDirection_);
      }
      if (flowDirection_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(42, flowDirection_);
      }
      if (hasMPLS_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(53, hasMPLS_);
      }
      if (mPLSCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(54, mPLSCount_);
      }
      if (mPLS1TTL_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(55, mPLS1TTL_);
      }
      if (mPLS1Label_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(56, mPLS1Label_);
      }
      if (mPLS2TTL_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(57, mPLS2TTL_);
      }
      if (mPLS2Label_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(58, mPLS2Label_);
      }
      if (mPLS3TTL_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(59, mPLS3TTL_);
      }
      if (mPLS3Label_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(60, mPLS3Label_);
      }
      if (mPLSLastTTL_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(61, mPLSLastTTL_);
      }
      if (mPLSLastLabel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(62, mPLSLastLabel_);
      }
      if (cid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1000, cid_);
      }
      if (!getCidStringBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1001, cidString_);
      }
      if (normalized_ != bwnetflow.FlowMessageEnrichedPb.FlowMessage.NormalizedType.No.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1002, normalized_);
      }
      if (!getSrcIfNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1003, srcIfName_);
      }
      if (!getSrcIfDescBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1004, srcIfDesc_);
      }
      if (srcIfSpeed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1005, srcIfSpeed_);
      }
      if (!getDstIfNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1006, dstIfName_);
      }
      if (!getDstIfDescBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1007, dstIfDesc_);
      }
      if (dstIfSpeed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1008, dstIfSpeed_);
      }
      if (!getProtoNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1009, protoName_);
      }
      if (!getRemoteCountryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1010, remoteCountry_);
      }
      if (remoteAddr_ != bwnetflow.FlowMessageEnrichedPb.FlowMessage.RemoteAddrType.Neither.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1011, remoteAddr_);
      }
      if (srcCid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1012, srcCid_);
      }
      if (dstCid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1013, dstCid_);
      }
      if (!getSrcCountryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1014, srcCountry_);
      }
      if (!getDstCountryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1015, dstCountry_);
      }
      if (!getNoteBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1016, note_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof bwnetflow.FlowMessageEnrichedPb.FlowMessage)) {
        return super.equals(obj);
      }
      bwnetflow.FlowMessageEnrichedPb.FlowMessage other = (bwnetflow.FlowMessageEnrichedPb.FlowMessage) obj;

      if (type_ != other.type_) return false;
      if (getTimeReceived()
          != other.getTimeReceived()) return false;
      if (getSequenceNum()
          != other.getSequenceNum()) return false;
      if (getSamplingRate()
          != other.getSamplingRate()) return false;
      if (getFlowDirection()
          != other.getFlowDirection()) return false;
      if (!getSamplerAddress()
          .equals(other.getSamplerAddress())) return false;
      if (getTimeFlowStart()
          != other.getTimeFlowStart()) return false;
      if (getTimeFlowEnd()
          != other.getTimeFlowEnd()) return false;
      if (getBytes()
          != other.getBytes()) return false;
      if (getPackets()
          != other.getPackets()) return false;
      if (!getSrcAddr()
          .equals(other.getSrcAddr())) return false;
      if (!getDstAddr()
          .equals(other.getDstAddr())) return false;
      if (getEtype()
          != other.getEtype()) return false;
      if (getProto()
          != other.getProto()) return false;
      if (getSrcPort()
          != other.getSrcPort()) return false;
      if (getDstPort()
          != other.getDstPort()) return false;
      if (getInIf()
          != other.getInIf()) return false;
      if (getOutIf()
          != other.getOutIf()) return false;
      if (getSrcMac()
          != other.getSrcMac()) return false;
      if (getDstMac()
          != other.getDstMac()) return false;
      if (getSrcVlan()
          != other.getSrcVlan()) return false;
      if (getDstVlan()
          != other.getDstVlan()) return false;
      if (getVlanId()
          != other.getVlanId()) return false;
      if (getIngressVrfID()
          != other.getIngressVrfID()) return false;
      if (getEgressVrfID()
          != other.getEgressVrfID()) return false;
      if (getIPTos()
          != other.getIPTos()) return false;
      if (getForwardingStatus()
          != other.getForwardingStatus()) return false;
      if (getIPTTL()
          != other.getIPTTL()) return false;
      if (getTCPFlags()
          != other.getTCPFlags()) return false;
      if (getIcmpType()
          != other.getIcmpType()) return false;
      if (getIcmpCode()
          != other.getIcmpCode()) return false;
      if (getIPv6FlowLabel()
          != other.getIPv6FlowLabel()) return false;
      if (getFragmentId()
          != other.getFragmentId()) return false;
      if (getFragmentOffset()
          != other.getFragmentOffset()) return false;
      if (getBiFlowDirection()
          != other.getBiFlowDirection()) return false;
      if (getSrcAS()
          != other.getSrcAS()) return false;
      if (getDstAS()
          != other.getDstAS()) return false;
      if (!getNextHop()
          .equals(other.getNextHop())) return false;
      if (getNextHopAS()
          != other.getNextHopAS()) return false;
      if (getSrcNet()
          != other.getSrcNet()) return false;
      if (getDstNet()
          != other.getDstNet()) return false;
      if (getHasMPLS()
          != other.getHasMPLS()) return false;
      if (getMPLSCount()
          != other.getMPLSCount()) return false;
      if (getMPLS1TTL()
          != other.getMPLS1TTL()) return false;
      if (getMPLS1Label()
          != other.getMPLS1Label()) return false;
      if (getMPLS2TTL()
          != other.getMPLS2TTL()) return false;
      if (getMPLS2Label()
          != other.getMPLS2Label()) return false;
      if (getMPLS3TTL()
          != other.getMPLS3TTL()) return false;
      if (getMPLS3Label()
          != other.getMPLS3Label()) return false;
      if (getMPLSLastTTL()
          != other.getMPLSLastTTL()) return false;
      if (getMPLSLastLabel()
          != other.getMPLSLastLabel()) return false;
      if (getCid()
          != other.getCid()) return false;
      if (!getCidString()
          .equals(other.getCidString())) return false;
      if (getSrcCid()
          != other.getSrcCid()) return false;
      if (getDstCid()
          != other.getDstCid()) return false;
      if (normalized_ != other.normalized_) return false;
      if (!getSrcIfName()
          .equals(other.getSrcIfName())) return false;
      if (!getSrcIfDesc()
          .equals(other.getSrcIfDesc())) return false;
      if (getSrcIfSpeed()
          != other.getSrcIfSpeed()) return false;
      if (!getDstIfName()
          .equals(other.getDstIfName())) return false;
      if (!getDstIfDesc()
          .equals(other.getDstIfDesc())) return false;
      if (getDstIfSpeed()
          != other.getDstIfSpeed()) return false;
      if (!getProtoName()
          .equals(other.getProtoName())) return false;
      if (!getRemoteCountry()
          .equals(other.getRemoteCountry())) return false;
      if (!getSrcCountry()
          .equals(other.getSrcCountry())) return false;
      if (!getDstCountry()
          .equals(other.getDstCountry())) return false;
      if (remoteAddr_ != other.remoteAddr_) return false;
      if (!getNote()
          .equals(other.getNote())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + TIMERECEIVED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimeReceived());
      hash = (37 * hash) + SEQUENCENUM_FIELD_NUMBER;
      hash = (53 * hash) + getSequenceNum();
      hash = (37 * hash) + SAMPLINGRATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSamplingRate());
      hash = (37 * hash) + FLOWDIRECTION_FIELD_NUMBER;
      hash = (53 * hash) + getFlowDirection();
      hash = (37 * hash) + SAMPLERADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getSamplerAddress().hashCode();
      hash = (37 * hash) + TIMEFLOWSTART_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimeFlowStart());
      hash = (37 * hash) + TIMEFLOWEND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimeFlowEnd());
      hash = (37 * hash) + BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBytes());
      hash = (37 * hash) + PACKETS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPackets());
      hash = (37 * hash) + SRCADDR_FIELD_NUMBER;
      hash = (53 * hash) + getSrcAddr().hashCode();
      hash = (37 * hash) + DSTADDR_FIELD_NUMBER;
      hash = (53 * hash) + getDstAddr().hashCode();
      hash = (37 * hash) + ETYPE_FIELD_NUMBER;
      hash = (53 * hash) + getEtype();
      hash = (37 * hash) + PROTO_FIELD_NUMBER;
      hash = (53 * hash) + getProto();
      hash = (37 * hash) + SRCPORT_FIELD_NUMBER;
      hash = (53 * hash) + getSrcPort();
      hash = (37 * hash) + DSTPORT_FIELD_NUMBER;
      hash = (53 * hash) + getDstPort();
      hash = (37 * hash) + INIF_FIELD_NUMBER;
      hash = (53 * hash) + getInIf();
      hash = (37 * hash) + OUTIF_FIELD_NUMBER;
      hash = (53 * hash) + getOutIf();
      hash = (37 * hash) + SRCMAC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSrcMac());
      hash = (37 * hash) + DSTMAC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDstMac());
      hash = (37 * hash) + SRCVLAN_FIELD_NUMBER;
      hash = (53 * hash) + getSrcVlan();
      hash = (37 * hash) + DSTVLAN_FIELD_NUMBER;
      hash = (53 * hash) + getDstVlan();
      hash = (37 * hash) + VLANID_FIELD_NUMBER;
      hash = (53 * hash) + getVlanId();
      hash = (37 * hash) + INGRESSVRFID_FIELD_NUMBER;
      hash = (53 * hash) + getIngressVrfID();
      hash = (37 * hash) + EGRESSVRFID_FIELD_NUMBER;
      hash = (53 * hash) + getEgressVrfID();
      hash = (37 * hash) + IPTOS_FIELD_NUMBER;
      hash = (53 * hash) + getIPTos();
      hash = (37 * hash) + FORWARDINGSTATUS_FIELD_NUMBER;
      hash = (53 * hash) + getForwardingStatus();
      hash = (37 * hash) + IPTTL_FIELD_NUMBER;
      hash = (53 * hash) + getIPTTL();
      hash = (37 * hash) + TCPFLAGS_FIELD_NUMBER;
      hash = (53 * hash) + getTCPFlags();
      hash = (37 * hash) + ICMPTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getIcmpType();
      hash = (37 * hash) + ICMPCODE_FIELD_NUMBER;
      hash = (53 * hash) + getIcmpCode();
      hash = (37 * hash) + IPV6FLOWLABEL_FIELD_NUMBER;
      hash = (53 * hash) + getIPv6FlowLabel();
      hash = (37 * hash) + FRAGMENTID_FIELD_NUMBER;
      hash = (53 * hash) + getFragmentId();
      hash = (37 * hash) + FRAGMENTOFFSET_FIELD_NUMBER;
      hash = (53 * hash) + getFragmentOffset();
      hash = (37 * hash) + BIFLOWDIRECTION_FIELD_NUMBER;
      hash = (53 * hash) + getBiFlowDirection();
      hash = (37 * hash) + SRCAS_FIELD_NUMBER;
      hash = (53 * hash) + getSrcAS();
      hash = (37 * hash) + DSTAS_FIELD_NUMBER;
      hash = (53 * hash) + getDstAS();
      hash = (37 * hash) + NEXTHOP_FIELD_NUMBER;
      hash = (53 * hash) + getNextHop().hashCode();
      hash = (37 * hash) + NEXTHOPAS_FIELD_NUMBER;
      hash = (53 * hash) + getNextHopAS();
      hash = (37 * hash) + SRCNET_FIELD_NUMBER;
      hash = (53 * hash) + getSrcNet();
      hash = (37 * hash) + DSTNET_FIELD_NUMBER;
      hash = (53 * hash) + getDstNet();
      hash = (37 * hash) + HASMPLS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHasMPLS());
      hash = (37 * hash) + MPLSCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getMPLSCount();
      hash = (37 * hash) + MPLS1TTL_FIELD_NUMBER;
      hash = (53 * hash) + getMPLS1TTL();
      hash = (37 * hash) + MPLS1LABEL_FIELD_NUMBER;
      hash = (53 * hash) + getMPLS1Label();
      hash = (37 * hash) + MPLS2TTL_FIELD_NUMBER;
      hash = (53 * hash) + getMPLS2TTL();
      hash = (37 * hash) + MPLS2LABEL_FIELD_NUMBER;
      hash = (53 * hash) + getMPLS2Label();
      hash = (37 * hash) + MPLS3TTL_FIELD_NUMBER;
      hash = (53 * hash) + getMPLS3TTL();
      hash = (37 * hash) + MPLS3LABEL_FIELD_NUMBER;
      hash = (53 * hash) + getMPLS3Label();
      hash = (37 * hash) + MPLSLASTTTL_FIELD_NUMBER;
      hash = (53 * hash) + getMPLSLastTTL();
      hash = (37 * hash) + MPLSLASTLABEL_FIELD_NUMBER;
      hash = (53 * hash) + getMPLSLastLabel();
      hash = (37 * hash) + CID_FIELD_NUMBER;
      hash = (53 * hash) + getCid();
      hash = (37 * hash) + CIDSTRING_FIELD_NUMBER;
      hash = (53 * hash) + getCidString().hashCode();
      hash = (37 * hash) + SRCCID_FIELD_NUMBER;
      hash = (53 * hash) + getSrcCid();
      hash = (37 * hash) + DSTCID_FIELD_NUMBER;
      hash = (53 * hash) + getDstCid();
      hash = (37 * hash) + NORMALIZED_FIELD_NUMBER;
      hash = (53 * hash) + normalized_;
      hash = (37 * hash) + SRCIFNAME_FIELD_NUMBER;
      hash = (53 * hash) + getSrcIfName().hashCode();
      hash = (37 * hash) + SRCIFDESC_FIELD_NUMBER;
      hash = (53 * hash) + getSrcIfDesc().hashCode();
      hash = (37 * hash) + SRCIFSPEED_FIELD_NUMBER;
      hash = (53 * hash) + getSrcIfSpeed();
      hash = (37 * hash) + DSTIFNAME_FIELD_NUMBER;
      hash = (53 * hash) + getDstIfName().hashCode();
      hash = (37 * hash) + DSTIFDESC_FIELD_NUMBER;
      hash = (53 * hash) + getDstIfDesc().hashCode();
      hash = (37 * hash) + DSTIFSPEED_FIELD_NUMBER;
      hash = (53 * hash) + getDstIfSpeed();
      hash = (37 * hash) + PROTONAME_FIELD_NUMBER;
      hash = (53 * hash) + getProtoName().hashCode();
      hash = (37 * hash) + REMOTECOUNTRY_FIELD_NUMBER;
      hash = (53 * hash) + getRemoteCountry().hashCode();
      hash = (37 * hash) + SRCCOUNTRY_FIELD_NUMBER;
      hash = (53 * hash) + getSrcCountry().hashCode();
      hash = (37 * hash) + DSTCOUNTRY_FIELD_NUMBER;
      hash = (53 * hash) + getDstCountry().hashCode();
      hash = (37 * hash) + REMOTEADDR_FIELD_NUMBER;
      hash = (53 * hash) + remoteAddr_;
      hash = (37 * hash) + NOTE_FIELD_NUMBER;
      hash = (53 * hash) + getNote().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static bwnetflow.FlowMessageEnrichedPb.FlowMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bwnetflow.FlowMessageEnrichedPb.FlowMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bwnetflow.FlowMessageEnrichedPb.FlowMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bwnetflow.FlowMessageEnrichedPb.FlowMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bwnetflow.FlowMessageEnrichedPb.FlowMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bwnetflow.FlowMessageEnrichedPb.FlowMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bwnetflow.FlowMessageEnrichedPb.FlowMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static bwnetflow.FlowMessageEnrichedPb.FlowMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static bwnetflow.FlowMessageEnrichedPb.FlowMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static bwnetflow.FlowMessageEnrichedPb.FlowMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static bwnetflow.FlowMessageEnrichedPb.FlowMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static bwnetflow.FlowMessageEnrichedPb.FlowMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(bwnetflow.FlowMessageEnrichedPb.FlowMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code flowmessageenriched.FlowMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flowmessageenriched.FlowMessage)
        bwnetflow.FlowMessageEnrichedPb.FlowMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return bwnetflow.FlowMessageEnrichedPb.internal_static_flowmessageenriched_FlowMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return bwnetflow.FlowMessageEnrichedPb.internal_static_flowmessageenriched_FlowMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                bwnetflow.FlowMessageEnrichedPb.FlowMessage.class, bwnetflow.FlowMessageEnrichedPb.FlowMessage.Builder.class);
      }

      // Construct using bwnetflow.FlowMessageEnrichedPb.FlowMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        timeReceived_ = 0L;

        sequenceNum_ = 0;

        samplingRate_ = 0L;

        flowDirection_ = 0;

        samplerAddress_ = com.google.protobuf.ByteString.EMPTY;

        timeFlowStart_ = 0L;

        timeFlowEnd_ = 0L;

        bytes_ = 0L;

        packets_ = 0L;

        srcAddr_ = com.google.protobuf.ByteString.EMPTY;

        dstAddr_ = com.google.protobuf.ByteString.EMPTY;

        etype_ = 0;

        proto_ = 0;

        srcPort_ = 0;

        dstPort_ = 0;

        inIf_ = 0;

        outIf_ = 0;

        srcMac_ = 0L;

        dstMac_ = 0L;

        srcVlan_ = 0;

        dstVlan_ = 0;

        vlanId_ = 0;

        ingressVrfID_ = 0;

        egressVrfID_ = 0;

        iPTos_ = 0;

        forwardingStatus_ = 0;

        iPTTL_ = 0;

        tCPFlags_ = 0;

        icmpType_ = 0;

        icmpCode_ = 0;

        iPv6FlowLabel_ = 0;

        fragmentId_ = 0;

        fragmentOffset_ = 0;

        biFlowDirection_ = 0;

        srcAS_ = 0;

        dstAS_ = 0;

        nextHop_ = com.google.protobuf.ByteString.EMPTY;

        nextHopAS_ = 0;

        srcNet_ = 0;

        dstNet_ = 0;

        hasMPLS_ = false;

        mPLSCount_ = 0;

        mPLS1TTL_ = 0;

        mPLS1Label_ = 0;

        mPLS2TTL_ = 0;

        mPLS2Label_ = 0;

        mPLS3TTL_ = 0;

        mPLS3Label_ = 0;

        mPLSLastTTL_ = 0;

        mPLSLastLabel_ = 0;

        cid_ = 0;

        cidString_ = "";

        srcCid_ = 0;

        dstCid_ = 0;

        normalized_ = 0;

        srcIfName_ = "";

        srcIfDesc_ = "";

        srcIfSpeed_ = 0;

        dstIfName_ = "";

        dstIfDesc_ = "";

        dstIfSpeed_ = 0;

        protoName_ = "";

        remoteCountry_ = "";

        srcCountry_ = "";

        dstCountry_ = "";

        remoteAddr_ = 0;

        note_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bwnetflow.FlowMessageEnrichedPb.internal_static_flowmessageenriched_FlowMessage_descriptor;
      }

      @java.lang.Override
      public bwnetflow.FlowMessageEnrichedPb.FlowMessage getDefaultInstanceForType() {
        return bwnetflow.FlowMessageEnrichedPb.FlowMessage.getDefaultInstance();
      }

      @java.lang.Override
      public bwnetflow.FlowMessageEnrichedPb.FlowMessage build() {
        bwnetflow.FlowMessageEnrichedPb.FlowMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public bwnetflow.FlowMessageEnrichedPb.FlowMessage buildPartial() {
        bwnetflow.FlowMessageEnrichedPb.FlowMessage result = new bwnetflow.FlowMessageEnrichedPb.FlowMessage(this);
        result.type_ = type_;
        result.timeReceived_ = timeReceived_;
        result.sequenceNum_ = sequenceNum_;
        result.samplingRate_ = samplingRate_;
        result.flowDirection_ = flowDirection_;
        result.samplerAddress_ = samplerAddress_;
        result.timeFlowStart_ = timeFlowStart_;
        result.timeFlowEnd_ = timeFlowEnd_;
        result.bytes_ = bytes_;
        result.packets_ = packets_;
        result.srcAddr_ = srcAddr_;
        result.dstAddr_ = dstAddr_;
        result.etype_ = etype_;
        result.proto_ = proto_;
        result.srcPort_ = srcPort_;
        result.dstPort_ = dstPort_;
        result.inIf_ = inIf_;
        result.outIf_ = outIf_;
        result.srcMac_ = srcMac_;
        result.dstMac_ = dstMac_;
        result.srcVlan_ = srcVlan_;
        result.dstVlan_ = dstVlan_;
        result.vlanId_ = vlanId_;
        result.ingressVrfID_ = ingressVrfID_;
        result.egressVrfID_ = egressVrfID_;
        result.iPTos_ = iPTos_;
        result.forwardingStatus_ = forwardingStatus_;
        result.iPTTL_ = iPTTL_;
        result.tCPFlags_ = tCPFlags_;
        result.icmpType_ = icmpType_;
        result.icmpCode_ = icmpCode_;
        result.iPv6FlowLabel_ = iPv6FlowLabel_;
        result.fragmentId_ = fragmentId_;
        result.fragmentOffset_ = fragmentOffset_;
        result.biFlowDirection_ = biFlowDirection_;
        result.srcAS_ = srcAS_;
        result.dstAS_ = dstAS_;
        result.nextHop_ = nextHop_;
        result.nextHopAS_ = nextHopAS_;
        result.srcNet_ = srcNet_;
        result.dstNet_ = dstNet_;
        result.hasMPLS_ = hasMPLS_;
        result.mPLSCount_ = mPLSCount_;
        result.mPLS1TTL_ = mPLS1TTL_;
        result.mPLS1Label_ = mPLS1Label_;
        result.mPLS2TTL_ = mPLS2TTL_;
        result.mPLS2Label_ = mPLS2Label_;
        result.mPLS3TTL_ = mPLS3TTL_;
        result.mPLS3Label_ = mPLS3Label_;
        result.mPLSLastTTL_ = mPLSLastTTL_;
        result.mPLSLastLabel_ = mPLSLastLabel_;
        result.cid_ = cid_;
        result.cidString_ = cidString_;
        result.srcCid_ = srcCid_;
        result.dstCid_ = dstCid_;
        result.normalized_ = normalized_;
        result.srcIfName_ = srcIfName_;
        result.srcIfDesc_ = srcIfDesc_;
        result.srcIfSpeed_ = srcIfSpeed_;
        result.dstIfName_ = dstIfName_;
        result.dstIfDesc_ = dstIfDesc_;
        result.dstIfSpeed_ = dstIfSpeed_;
        result.protoName_ = protoName_;
        result.remoteCountry_ = remoteCountry_;
        result.srcCountry_ = srcCountry_;
        result.dstCountry_ = dstCountry_;
        result.remoteAddr_ = remoteAddr_;
        result.note_ = note_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bwnetflow.FlowMessageEnrichedPb.FlowMessage) {
          return mergeFrom((bwnetflow.FlowMessageEnrichedPb.FlowMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(bwnetflow.FlowMessageEnrichedPb.FlowMessage other) {
        if (other == bwnetflow.FlowMessageEnrichedPb.FlowMessage.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getTimeReceived() != 0L) {
          setTimeReceived(other.getTimeReceived());
        }
        if (other.getSequenceNum() != 0) {
          setSequenceNum(other.getSequenceNum());
        }
        if (other.getSamplingRate() != 0L) {
          setSamplingRate(other.getSamplingRate());
        }
        if (other.getFlowDirection() != 0) {
          setFlowDirection(other.getFlowDirection());
        }
        if (other.getSamplerAddress() != com.google.protobuf.ByteString.EMPTY) {
          setSamplerAddress(other.getSamplerAddress());
        }
        if (other.getTimeFlowStart() != 0L) {
          setTimeFlowStart(other.getTimeFlowStart());
        }
        if (other.getTimeFlowEnd() != 0L) {
          setTimeFlowEnd(other.getTimeFlowEnd());
        }
        if (other.getBytes() != 0L) {
          setBytes(other.getBytes());
        }
        if (other.getPackets() != 0L) {
          setPackets(other.getPackets());
        }
        if (other.getSrcAddr() != com.google.protobuf.ByteString.EMPTY) {
          setSrcAddr(other.getSrcAddr());
        }
        if (other.getDstAddr() != com.google.protobuf.ByteString.EMPTY) {
          setDstAddr(other.getDstAddr());
        }
        if (other.getEtype() != 0) {
          setEtype(other.getEtype());
        }
        if (other.getProto() != 0) {
          setProto(other.getProto());
        }
        if (other.getSrcPort() != 0) {
          setSrcPort(other.getSrcPort());
        }
        if (other.getDstPort() != 0) {
          setDstPort(other.getDstPort());
        }
        if (other.getInIf() != 0) {
          setInIf(other.getInIf());
        }
        if (other.getOutIf() != 0) {
          setOutIf(other.getOutIf());
        }
        if (other.getSrcMac() != 0L) {
          setSrcMac(other.getSrcMac());
        }
        if (other.getDstMac() != 0L) {
          setDstMac(other.getDstMac());
        }
        if (other.getSrcVlan() != 0) {
          setSrcVlan(other.getSrcVlan());
        }
        if (other.getDstVlan() != 0) {
          setDstVlan(other.getDstVlan());
        }
        if (other.getVlanId() != 0) {
          setVlanId(other.getVlanId());
        }
        if (other.getIngressVrfID() != 0) {
          setIngressVrfID(other.getIngressVrfID());
        }
        if (other.getEgressVrfID() != 0) {
          setEgressVrfID(other.getEgressVrfID());
        }
        if (other.getIPTos() != 0) {
          setIPTos(other.getIPTos());
        }
        if (other.getForwardingStatus() != 0) {
          setForwardingStatus(other.getForwardingStatus());
        }
        if (other.getIPTTL() != 0) {
          setIPTTL(other.getIPTTL());
        }
        if (other.getTCPFlags() != 0) {
          setTCPFlags(other.getTCPFlags());
        }
        if (other.getIcmpType() != 0) {
          setIcmpType(other.getIcmpType());
        }
        if (other.getIcmpCode() != 0) {
          setIcmpCode(other.getIcmpCode());
        }
        if (other.getIPv6FlowLabel() != 0) {
          setIPv6FlowLabel(other.getIPv6FlowLabel());
        }
        if (other.getFragmentId() != 0) {
          setFragmentId(other.getFragmentId());
        }
        if (other.getFragmentOffset() != 0) {
          setFragmentOffset(other.getFragmentOffset());
        }
        if (other.getBiFlowDirection() != 0) {
          setBiFlowDirection(other.getBiFlowDirection());
        }
        if (other.getSrcAS() != 0) {
          setSrcAS(other.getSrcAS());
        }
        if (other.getDstAS() != 0) {
          setDstAS(other.getDstAS());
        }
        if (other.getNextHop() != com.google.protobuf.ByteString.EMPTY) {
          setNextHop(other.getNextHop());
        }
        if (other.getNextHopAS() != 0) {
          setNextHopAS(other.getNextHopAS());
        }
        if (other.getSrcNet() != 0) {
          setSrcNet(other.getSrcNet());
        }
        if (other.getDstNet() != 0) {
          setDstNet(other.getDstNet());
        }
        if (other.getHasMPLS() != false) {
          setHasMPLS(other.getHasMPLS());
        }
        if (other.getMPLSCount() != 0) {
          setMPLSCount(other.getMPLSCount());
        }
        if (other.getMPLS1TTL() != 0) {
          setMPLS1TTL(other.getMPLS1TTL());
        }
        if (other.getMPLS1Label() != 0) {
          setMPLS1Label(other.getMPLS1Label());
        }
        if (other.getMPLS2TTL() != 0) {
          setMPLS2TTL(other.getMPLS2TTL());
        }
        if (other.getMPLS2Label() != 0) {
          setMPLS2Label(other.getMPLS2Label());
        }
        if (other.getMPLS3TTL() != 0) {
          setMPLS3TTL(other.getMPLS3TTL());
        }
        if (other.getMPLS3Label() != 0) {
          setMPLS3Label(other.getMPLS3Label());
        }
        if (other.getMPLSLastTTL() != 0) {
          setMPLSLastTTL(other.getMPLSLastTTL());
        }
        if (other.getMPLSLastLabel() != 0) {
          setMPLSLastLabel(other.getMPLSLastLabel());
        }
        if (other.getCid() != 0) {
          setCid(other.getCid());
        }
        if (!other.getCidString().isEmpty()) {
          cidString_ = other.cidString_;
          onChanged();
        }
        if (other.getSrcCid() != 0) {
          setSrcCid(other.getSrcCid());
        }
        if (other.getDstCid() != 0) {
          setDstCid(other.getDstCid());
        }
        if (other.normalized_ != 0) {
          setNormalizedValue(other.getNormalizedValue());
        }
        if (!other.getSrcIfName().isEmpty()) {
          srcIfName_ = other.srcIfName_;
          onChanged();
        }
        if (!other.getSrcIfDesc().isEmpty()) {
          srcIfDesc_ = other.srcIfDesc_;
          onChanged();
        }
        if (other.getSrcIfSpeed() != 0) {
          setSrcIfSpeed(other.getSrcIfSpeed());
        }
        if (!other.getDstIfName().isEmpty()) {
          dstIfName_ = other.dstIfName_;
          onChanged();
        }
        if (!other.getDstIfDesc().isEmpty()) {
          dstIfDesc_ = other.dstIfDesc_;
          onChanged();
        }
        if (other.getDstIfSpeed() != 0) {
          setDstIfSpeed(other.getDstIfSpeed());
        }
        if (!other.getProtoName().isEmpty()) {
          protoName_ = other.protoName_;
          onChanged();
        }
        if (!other.getRemoteCountry().isEmpty()) {
          remoteCountry_ = other.remoteCountry_;
          onChanged();
        }
        if (!other.getSrcCountry().isEmpty()) {
          srcCountry_ = other.srcCountry_;
          onChanged();
        }
        if (!other.getDstCountry().isEmpty()) {
          dstCountry_ = other.dstCountry_;
          onChanged();
        }
        if (other.remoteAddr_ != 0) {
          setRemoteAddrValue(other.getRemoteAddrValue());
        }
        if (!other.getNote().isEmpty()) {
          note_ = other.note_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        bwnetflow.FlowMessageEnrichedPb.FlowMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (bwnetflow.FlowMessageEnrichedPb.FlowMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.flowmessageenriched.FlowMessage.FlowType Type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.FlowType Type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.FlowType Type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public bwnetflow.FlowMessageEnrichedPb.FlowMessage.FlowType getType() {
        @SuppressWarnings("deprecation")
        bwnetflow.FlowMessageEnrichedPb.FlowMessage.FlowType result = bwnetflow.FlowMessageEnrichedPb.FlowMessage.FlowType.valueOf(type_);
        return result == null ? bwnetflow.FlowMessageEnrichedPb.FlowMessage.FlowType.UNRECOGNIZED : result;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.FlowType Type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(bwnetflow.FlowMessageEnrichedPb.FlowMessage.FlowType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.flowmessageenriched.FlowMessage.FlowType Type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private long timeReceived_ ;
      /**
       * <code>uint64 TimeReceived = 2;</code>
       * @return The timeReceived.
       */
      @java.lang.Override
      public long getTimeReceived() {
        return timeReceived_;
      }
      /**
       * <code>uint64 TimeReceived = 2;</code>
       * @param value The timeReceived to set.
       * @return This builder for chaining.
       */
      public Builder setTimeReceived(long value) {
        
        timeReceived_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 TimeReceived = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeReceived() {
        
        timeReceived_ = 0L;
        onChanged();
        return this;
      }

      private int sequenceNum_ ;
      /**
       * <code>uint32 SequenceNum = 4;</code>
       * @return The sequenceNum.
       */
      @java.lang.Override
      public int getSequenceNum() {
        return sequenceNum_;
      }
      /**
       * <code>uint32 SequenceNum = 4;</code>
       * @param value The sequenceNum to set.
       * @return This builder for chaining.
       */
      public Builder setSequenceNum(int value) {
        
        sequenceNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 SequenceNum = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSequenceNum() {
        
        sequenceNum_ = 0;
        onChanged();
        return this;
      }

      private long samplingRate_ ;
      /**
       * <code>uint64 SamplingRate = 3;</code>
       * @return The samplingRate.
       */
      @java.lang.Override
      public long getSamplingRate() {
        return samplingRate_;
      }
      /**
       * <code>uint64 SamplingRate = 3;</code>
       * @param value The samplingRate to set.
       * @return This builder for chaining.
       */
      public Builder setSamplingRate(long value) {
        
        samplingRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 SamplingRate = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSamplingRate() {
        
        samplingRate_ = 0L;
        onChanged();
        return this;
      }

      private int flowDirection_ ;
      /**
       * <code>uint32 FlowDirection = 42;</code>
       * @return The flowDirection.
       */
      @java.lang.Override
      public int getFlowDirection() {
        return flowDirection_;
      }
      /**
       * <code>uint32 FlowDirection = 42;</code>
       * @param value The flowDirection to set.
       * @return This builder for chaining.
       */
      public Builder setFlowDirection(int value) {
        
        flowDirection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 FlowDirection = 42;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlowDirection() {
        
        flowDirection_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString samplerAddress_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Sampler information
       * </pre>
       *
       * <code>bytes SamplerAddress = 11;</code>
       * @return The samplerAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSamplerAddress() {
        return samplerAddress_;
      }
      /**
       * <pre>
       * Sampler information
       * </pre>
       *
       * <code>bytes SamplerAddress = 11;</code>
       * @param value The samplerAddress to set.
       * @return This builder for chaining.
       */
      public Builder setSamplerAddress(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        samplerAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sampler information
       * </pre>
       *
       * <code>bytes SamplerAddress = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearSamplerAddress() {
        
        samplerAddress_ = getDefaultInstance().getSamplerAddress();
        onChanged();
        return this;
      }

      private long timeFlowStart_ ;
      /**
       * <pre>
       * Found inside packet
       * </pre>
       *
       * <code>uint64 TimeFlowStart = 38;</code>
       * @return The timeFlowStart.
       */
      @java.lang.Override
      public long getTimeFlowStart() {
        return timeFlowStart_;
      }
      /**
       * <pre>
       * Found inside packet
       * </pre>
       *
       * <code>uint64 TimeFlowStart = 38;</code>
       * @param value The timeFlowStart to set.
       * @return This builder for chaining.
       */
      public Builder setTimeFlowStart(long value) {
        
        timeFlowStart_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Found inside packet
       * </pre>
       *
       * <code>uint64 TimeFlowStart = 38;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeFlowStart() {
        
        timeFlowStart_ = 0L;
        onChanged();
        return this;
      }

      private long timeFlowEnd_ ;
      /**
       * <code>uint64 TimeFlowEnd = 5;</code>
       * @return The timeFlowEnd.
       */
      @java.lang.Override
      public long getTimeFlowEnd() {
        return timeFlowEnd_;
      }
      /**
       * <code>uint64 TimeFlowEnd = 5;</code>
       * @param value The timeFlowEnd to set.
       * @return This builder for chaining.
       */
      public Builder setTimeFlowEnd(long value) {
        
        timeFlowEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 TimeFlowEnd = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeFlowEnd() {
        
        timeFlowEnd_ = 0L;
        onChanged();
        return this;
      }

      private long bytes_ ;
      /**
       * <pre>
       * Size of the sampled packet
       * </pre>
       *
       * <code>uint64 Bytes = 9;</code>
       * @return The bytes.
       */
      @java.lang.Override
      public long getBytes() {
        return bytes_;
      }
      /**
       * <pre>
       * Size of the sampled packet
       * </pre>
       *
       * <code>uint64 Bytes = 9;</code>
       * @param value The bytes to set.
       * @return This builder for chaining.
       */
      public Builder setBytes(long value) {
        
        bytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Size of the sampled packet
       * </pre>
       *
       * <code>uint64 Bytes = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearBytes() {
        
        bytes_ = 0L;
        onChanged();
        return this;
      }

      private long packets_ ;
      /**
       * <code>uint64 Packets = 10;</code>
       * @return The packets.
       */
      @java.lang.Override
      public long getPackets() {
        return packets_;
      }
      /**
       * <code>uint64 Packets = 10;</code>
       * @param value The packets to set.
       * @return This builder for chaining.
       */
      public Builder setPackets(long value) {
        
        packets_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 Packets = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearPackets() {
        
        packets_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString srcAddr_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Source/destination addresses
       * </pre>
       *
       * <code>bytes SrcAddr = 6;</code>
       * @return The srcAddr.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSrcAddr() {
        return srcAddr_;
      }
      /**
       * <pre>
       * Source/destination addresses
       * </pre>
       *
       * <code>bytes SrcAddr = 6;</code>
       * @param value The srcAddr to set.
       * @return This builder for chaining.
       */
      public Builder setSrcAddr(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        srcAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Source/destination addresses
       * </pre>
       *
       * <code>bytes SrcAddr = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearSrcAddr() {
        
        srcAddr_ = getDefaultInstance().getSrcAddr();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString dstAddr_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes DstAddr = 7;</code>
       * @return The dstAddr.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getDstAddr() {
        return dstAddr_;
      }
      /**
       * <code>bytes DstAddr = 7;</code>
       * @param value The dstAddr to set.
       * @return This builder for chaining.
       */
      public Builder setDstAddr(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dstAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes DstAddr = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearDstAddr() {
        
        dstAddr_ = getDefaultInstance().getDstAddr();
        onChanged();
        return this;
      }

      private int etype_ ;
      /**
       * <pre>
       * Layer 3 protocol (IPv4/IPv6/ARP/MPLS...)
       * </pre>
       *
       * <code>uint32 Etype = 30;</code>
       * @return The etype.
       */
      @java.lang.Override
      public int getEtype() {
        return etype_;
      }
      /**
       * <pre>
       * Layer 3 protocol (IPv4/IPv6/ARP/MPLS...)
       * </pre>
       *
       * <code>uint32 Etype = 30;</code>
       * @param value The etype to set.
       * @return This builder for chaining.
       */
      public Builder setEtype(int value) {
        
        etype_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Layer 3 protocol (IPv4/IPv6/ARP/MPLS...)
       * </pre>
       *
       * <code>uint32 Etype = 30;</code>
       * @return This builder for chaining.
       */
      public Builder clearEtype() {
        
        etype_ = 0;
        onChanged();
        return this;
      }

      private int proto_ ;
      /**
       * <pre>
       * Layer 4 protocol
       * </pre>
       *
       * <code>uint32 Proto = 20;</code>
       * @return The proto.
       */
      @java.lang.Override
      public int getProto() {
        return proto_;
      }
      /**
       * <pre>
       * Layer 4 protocol
       * </pre>
       *
       * <code>uint32 Proto = 20;</code>
       * @param value The proto to set.
       * @return This builder for chaining.
       */
      public Builder setProto(int value) {
        
        proto_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Layer 4 protocol
       * </pre>
       *
       * <code>uint32 Proto = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearProto() {
        
        proto_ = 0;
        onChanged();
        return this;
      }

      private int srcPort_ ;
      /**
       * <pre>
       * Ports for UDP and TCP
       * </pre>
       *
       * <code>uint32 SrcPort = 21;</code>
       * @return The srcPort.
       */
      @java.lang.Override
      public int getSrcPort() {
        return srcPort_;
      }
      /**
       * <pre>
       * Ports for UDP and TCP
       * </pre>
       *
       * <code>uint32 SrcPort = 21;</code>
       * @param value The srcPort to set.
       * @return This builder for chaining.
       */
      public Builder setSrcPort(int value) {
        
        srcPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ports for UDP and TCP
       * </pre>
       *
       * <code>uint32 SrcPort = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearSrcPort() {
        
        srcPort_ = 0;
        onChanged();
        return this;
      }

      private int dstPort_ ;
      /**
       * <code>uint32 DstPort = 22;</code>
       * @return The dstPort.
       */
      @java.lang.Override
      public int getDstPort() {
        return dstPort_;
      }
      /**
       * <code>uint32 DstPort = 22;</code>
       * @param value The dstPort to set.
       * @return This builder for chaining.
       */
      public Builder setDstPort(int value) {
        
        dstPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 DstPort = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearDstPort() {
        
        dstPort_ = 0;
        onChanged();
        return this;
      }

      private int inIf_ ;
      /**
       * <pre>
       * Interfaces
       * </pre>
       *
       * <code>uint32 InIf = 18;</code>
       * @return The inIf.
       */
      @java.lang.Override
      public int getInIf() {
        return inIf_;
      }
      /**
       * <pre>
       * Interfaces
       * </pre>
       *
       * <code>uint32 InIf = 18;</code>
       * @param value The inIf to set.
       * @return This builder for chaining.
       */
      public Builder setInIf(int value) {
        
        inIf_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Interfaces
       * </pre>
       *
       * <code>uint32 InIf = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearInIf() {
        
        inIf_ = 0;
        onChanged();
        return this;
      }

      private int outIf_ ;
      /**
       * <code>uint32 OutIf = 19;</code>
       * @return The outIf.
       */
      @java.lang.Override
      public int getOutIf() {
        return outIf_;
      }
      /**
       * <code>uint32 OutIf = 19;</code>
       * @param value The outIf to set.
       * @return This builder for chaining.
       */
      public Builder setOutIf(int value) {
        
        outIf_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 OutIf = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearOutIf() {
        
        outIf_ = 0;
        onChanged();
        return this;
      }

      private long srcMac_ ;
      /**
       * <pre>
       * Ethernet information
       * </pre>
       *
       * <code>uint64 SrcMac = 27;</code>
       * @return The srcMac.
       */
      @java.lang.Override
      public long getSrcMac() {
        return srcMac_;
      }
      /**
       * <pre>
       * Ethernet information
       * </pre>
       *
       * <code>uint64 SrcMac = 27;</code>
       * @param value The srcMac to set.
       * @return This builder for chaining.
       */
      public Builder setSrcMac(long value) {
        
        srcMac_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ethernet information
       * </pre>
       *
       * <code>uint64 SrcMac = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearSrcMac() {
        
        srcMac_ = 0L;
        onChanged();
        return this;
      }

      private long dstMac_ ;
      /**
       * <code>uint64 DstMac = 28;</code>
       * @return The dstMac.
       */
      @java.lang.Override
      public long getDstMac() {
        return dstMac_;
      }
      /**
       * <code>uint64 DstMac = 28;</code>
       * @param value The dstMac to set.
       * @return This builder for chaining.
       */
      public Builder setDstMac(long value) {
        
        dstMac_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 DstMac = 28;</code>
       * @return This builder for chaining.
       */
      public Builder clearDstMac() {
        
        dstMac_ = 0L;
        onChanged();
        return this;
      }

      private int srcVlan_ ;
      /**
       * <pre>
       * Vlan
       * </pre>
       *
       * <code>uint32 SrcVlan = 33;</code>
       * @return The srcVlan.
       */
      @java.lang.Override
      public int getSrcVlan() {
        return srcVlan_;
      }
      /**
       * <pre>
       * Vlan
       * </pre>
       *
       * <code>uint32 SrcVlan = 33;</code>
       * @param value The srcVlan to set.
       * @return This builder for chaining.
       */
      public Builder setSrcVlan(int value) {
        
        srcVlan_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Vlan
       * </pre>
       *
       * <code>uint32 SrcVlan = 33;</code>
       * @return This builder for chaining.
       */
      public Builder clearSrcVlan() {
        
        srcVlan_ = 0;
        onChanged();
        return this;
      }

      private int dstVlan_ ;
      /**
       * <code>uint32 DstVlan = 34;</code>
       * @return The dstVlan.
       */
      @java.lang.Override
      public int getDstVlan() {
        return dstVlan_;
      }
      /**
       * <code>uint32 DstVlan = 34;</code>
       * @param value The dstVlan to set.
       * @return This builder for chaining.
       */
      public Builder setDstVlan(int value) {
        
        dstVlan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 DstVlan = 34;</code>
       * @return This builder for chaining.
       */
      public Builder clearDstVlan() {
        
        dstVlan_ = 0;
        onChanged();
        return this;
      }

      private int vlanId_ ;
      /**
       * <pre>
       * 802.1q VLAN in sampled packet
       * </pre>
       *
       * <code>uint32 VlanId = 29;</code>
       * @return The vlanId.
       */
      @java.lang.Override
      public int getVlanId() {
        return vlanId_;
      }
      /**
       * <pre>
       * 802.1q VLAN in sampled packet
       * </pre>
       *
       * <code>uint32 VlanId = 29;</code>
       * @param value The vlanId to set.
       * @return This builder for chaining.
       */
      public Builder setVlanId(int value) {
        
        vlanId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 802.1q VLAN in sampled packet
       * </pre>
       *
       * <code>uint32 VlanId = 29;</code>
       * @return This builder for chaining.
       */
      public Builder clearVlanId() {
        
        vlanId_ = 0;
        onChanged();
        return this;
      }

      private int ingressVrfID_ ;
      /**
       * <pre>
       * VRF
       * </pre>
       *
       * <code>uint32 IngressVrfID = 39;</code>
       * @return The ingressVrfID.
       */
      @java.lang.Override
      public int getIngressVrfID() {
        return ingressVrfID_;
      }
      /**
       * <pre>
       * VRF
       * </pre>
       *
       * <code>uint32 IngressVrfID = 39;</code>
       * @param value The ingressVrfID to set.
       * @return This builder for chaining.
       */
      public Builder setIngressVrfID(int value) {
        
        ingressVrfID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * VRF
       * </pre>
       *
       * <code>uint32 IngressVrfID = 39;</code>
       * @return This builder for chaining.
       */
      public Builder clearIngressVrfID() {
        
        ingressVrfID_ = 0;
        onChanged();
        return this;
      }

      private int egressVrfID_ ;
      /**
       * <code>uint32 EgressVrfID = 40;</code>
       * @return The egressVrfID.
       */
      @java.lang.Override
      public int getEgressVrfID() {
        return egressVrfID_;
      }
      /**
       * <code>uint32 EgressVrfID = 40;</code>
       * @param value The egressVrfID to set.
       * @return This builder for chaining.
       */
      public Builder setEgressVrfID(int value) {
        
        egressVrfID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 EgressVrfID = 40;</code>
       * @return This builder for chaining.
       */
      public Builder clearEgressVrfID() {
        
        egressVrfID_ = 0;
        onChanged();
        return this;
      }

      private int iPTos_ ;
      /**
       * <pre>
       * IP and TCP special flags
       * </pre>
       *
       * <code>uint32 IPTos = 23;</code>
       * @return The iPTos.
       */
      @java.lang.Override
      public int getIPTos() {
        return iPTos_;
      }
      /**
       * <pre>
       * IP and TCP special flags
       * </pre>
       *
       * <code>uint32 IPTos = 23;</code>
       * @param value The iPTos to set.
       * @return This builder for chaining.
       */
      public Builder setIPTos(int value) {
        
        iPTos_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * IP and TCP special flags
       * </pre>
       *
       * <code>uint32 IPTos = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearIPTos() {
        
        iPTos_ = 0;
        onChanged();
        return this;
      }

      private int forwardingStatus_ ;
      /**
       * <code>uint32 ForwardingStatus = 24;</code>
       * @return The forwardingStatus.
       */
      @java.lang.Override
      public int getForwardingStatus() {
        return forwardingStatus_;
      }
      /**
       * <code>uint32 ForwardingStatus = 24;</code>
       * @param value The forwardingStatus to set.
       * @return This builder for chaining.
       */
      public Builder setForwardingStatus(int value) {
        
        forwardingStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 ForwardingStatus = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearForwardingStatus() {
        
        forwardingStatus_ = 0;
        onChanged();
        return this;
      }

      private int iPTTL_ ;
      /**
       * <code>uint32 IPTTL = 25;</code>
       * @return The iPTTL.
       */
      @java.lang.Override
      public int getIPTTL() {
        return iPTTL_;
      }
      /**
       * <code>uint32 IPTTL = 25;</code>
       * @param value The iPTTL to set.
       * @return This builder for chaining.
       */
      public Builder setIPTTL(int value) {
        
        iPTTL_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 IPTTL = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearIPTTL() {
        
        iPTTL_ = 0;
        onChanged();
        return this;
      }

      private int tCPFlags_ ;
      /**
       * <code>uint32 TCPFlags = 26;</code>
       * @return The tCPFlags.
       */
      @java.lang.Override
      public int getTCPFlags() {
        return tCPFlags_;
      }
      /**
       * <code>uint32 TCPFlags = 26;</code>
       * @param value The tCPFlags to set.
       * @return This builder for chaining.
       */
      public Builder setTCPFlags(int value) {
        
        tCPFlags_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 TCPFlags = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearTCPFlags() {
        
        tCPFlags_ = 0;
        onChanged();
        return this;
      }

      private int icmpType_ ;
      /**
       * <code>uint32 IcmpType = 31;</code>
       * @return The icmpType.
       */
      @java.lang.Override
      public int getIcmpType() {
        return icmpType_;
      }
      /**
       * <code>uint32 IcmpType = 31;</code>
       * @param value The icmpType to set.
       * @return This builder for chaining.
       */
      public Builder setIcmpType(int value) {
        
        icmpType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 IcmpType = 31;</code>
       * @return This builder for chaining.
       */
      public Builder clearIcmpType() {
        
        icmpType_ = 0;
        onChanged();
        return this;
      }

      private int icmpCode_ ;
      /**
       * <code>uint32 IcmpCode = 32;</code>
       * @return The icmpCode.
       */
      @java.lang.Override
      public int getIcmpCode() {
        return icmpCode_;
      }
      /**
       * <code>uint32 IcmpCode = 32;</code>
       * @param value The icmpCode to set.
       * @return This builder for chaining.
       */
      public Builder setIcmpCode(int value) {
        
        icmpCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 IcmpCode = 32;</code>
       * @return This builder for chaining.
       */
      public Builder clearIcmpCode() {
        
        icmpCode_ = 0;
        onChanged();
        return this;
      }

      private int iPv6FlowLabel_ ;
      /**
       * <code>uint32 IPv6FlowLabel = 37;</code>
       * @return The iPv6FlowLabel.
       */
      @java.lang.Override
      public int getIPv6FlowLabel() {
        return iPv6FlowLabel_;
      }
      /**
       * <code>uint32 IPv6FlowLabel = 37;</code>
       * @param value The iPv6FlowLabel to set.
       * @return This builder for chaining.
       */
      public Builder setIPv6FlowLabel(int value) {
        
        iPv6FlowLabel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 IPv6FlowLabel = 37;</code>
       * @return This builder for chaining.
       */
      public Builder clearIPv6FlowLabel() {
        
        iPv6FlowLabel_ = 0;
        onChanged();
        return this;
      }

      private int fragmentId_ ;
      /**
       * <pre>
       * Fragments (IPv4/IPv6)
       * </pre>
       *
       * <code>uint32 FragmentId = 35;</code>
       * @return The fragmentId.
       */
      @java.lang.Override
      public int getFragmentId() {
        return fragmentId_;
      }
      /**
       * <pre>
       * Fragments (IPv4/IPv6)
       * </pre>
       *
       * <code>uint32 FragmentId = 35;</code>
       * @param value The fragmentId to set.
       * @return This builder for chaining.
       */
      public Builder setFragmentId(int value) {
        
        fragmentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fragments (IPv4/IPv6)
       * </pre>
       *
       * <code>uint32 FragmentId = 35;</code>
       * @return This builder for chaining.
       */
      public Builder clearFragmentId() {
        
        fragmentId_ = 0;
        onChanged();
        return this;
      }

      private int fragmentOffset_ ;
      /**
       * <code>uint32 FragmentOffset = 36;</code>
       * @return The fragmentOffset.
       */
      @java.lang.Override
      public int getFragmentOffset() {
        return fragmentOffset_;
      }
      /**
       * <code>uint32 FragmentOffset = 36;</code>
       * @param value The fragmentOffset to set.
       * @return This builder for chaining.
       */
      public Builder setFragmentOffset(int value) {
        
        fragmentOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 FragmentOffset = 36;</code>
       * @return This builder for chaining.
       */
      public Builder clearFragmentOffset() {
        
        fragmentOffset_ = 0;
        onChanged();
        return this;
      }

      private int biFlowDirection_ ;
      /**
       * <code>uint32 BiFlowDirection = 41;</code>
       * @return The biFlowDirection.
       */
      @java.lang.Override
      public int getBiFlowDirection() {
        return biFlowDirection_;
      }
      /**
       * <code>uint32 BiFlowDirection = 41;</code>
       * @param value The biFlowDirection to set.
       * @return This builder for chaining.
       */
      public Builder setBiFlowDirection(int value) {
        
        biFlowDirection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 BiFlowDirection = 41;</code>
       * @return This builder for chaining.
       */
      public Builder clearBiFlowDirection() {
        
        biFlowDirection_ = 0;
        onChanged();
        return this;
      }

      private int srcAS_ ;
      /**
       * <pre>
       * Autonomous system information
       * </pre>
       *
       * <code>uint32 SrcAS = 14;</code>
       * @return The srcAS.
       */
      @java.lang.Override
      public int getSrcAS() {
        return srcAS_;
      }
      /**
       * <pre>
       * Autonomous system information
       * </pre>
       *
       * <code>uint32 SrcAS = 14;</code>
       * @param value The srcAS to set.
       * @return This builder for chaining.
       */
      public Builder setSrcAS(int value) {
        
        srcAS_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Autonomous system information
       * </pre>
       *
       * <code>uint32 SrcAS = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearSrcAS() {
        
        srcAS_ = 0;
        onChanged();
        return this;
      }

      private int dstAS_ ;
      /**
       * <code>uint32 DstAS = 15;</code>
       * @return The dstAS.
       */
      @java.lang.Override
      public int getDstAS() {
        return dstAS_;
      }
      /**
       * <code>uint32 DstAS = 15;</code>
       * @param value The dstAS to set.
       * @return This builder for chaining.
       */
      public Builder setDstAS(int value) {
        
        dstAS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 DstAS = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearDstAS() {
        
        dstAS_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString nextHop_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes NextHop = 12;</code>
       * @return The nextHop.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getNextHop() {
        return nextHop_;
      }
      /**
       * <code>bytes NextHop = 12;</code>
       * @param value The nextHop to set.
       * @return This builder for chaining.
       */
      public Builder setNextHop(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nextHop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes NextHop = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearNextHop() {
        
        nextHop_ = getDefaultInstance().getNextHop();
        onChanged();
        return this;
      }

      private int nextHopAS_ ;
      /**
       * <code>uint32 NextHopAS = 13;</code>
       * @return The nextHopAS.
       */
      @java.lang.Override
      public int getNextHopAS() {
        return nextHopAS_;
      }
      /**
       * <code>uint32 NextHopAS = 13;</code>
       * @param value The nextHopAS to set.
       * @return This builder for chaining.
       */
      public Builder setNextHopAS(int value) {
        
        nextHopAS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 NextHopAS = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearNextHopAS() {
        
        nextHopAS_ = 0;
        onChanged();
        return this;
      }

      private int srcNet_ ;
      /**
       * <pre>
       * Prefix size
       * </pre>
       *
       * <code>uint32 SrcNet = 16;</code>
       * @return The srcNet.
       */
      @java.lang.Override
      public int getSrcNet() {
        return srcNet_;
      }
      /**
       * <pre>
       * Prefix size
       * </pre>
       *
       * <code>uint32 SrcNet = 16;</code>
       * @param value The srcNet to set.
       * @return This builder for chaining.
       */
      public Builder setSrcNet(int value) {
        
        srcNet_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Prefix size
       * </pre>
       *
       * <code>uint32 SrcNet = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearSrcNet() {
        
        srcNet_ = 0;
        onChanged();
        return this;
      }

      private int dstNet_ ;
      /**
       * <code>uint32 DstNet = 17;</code>
       * @return The dstNet.
       */
      @java.lang.Override
      public int getDstNet() {
        return dstNet_;
      }
      /**
       * <code>uint32 DstNet = 17;</code>
       * @param value The dstNet to set.
       * @return This builder for chaining.
       */
      public Builder setDstNet(int value) {
        
        dstNet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 DstNet = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearDstNet() {
        
        dstNet_ = 0;
        onChanged();
        return this;
      }

      private boolean hasMPLS_ ;
      /**
       * <pre>
       * MPLS information
       * </pre>
       *
       * <code>bool HasMPLS = 53;</code>
       * @return The hasMPLS.
       */
      @java.lang.Override
      public boolean getHasMPLS() {
        return hasMPLS_;
      }
      /**
       * <pre>
       * MPLS information
       * </pre>
       *
       * <code>bool HasMPLS = 53;</code>
       * @param value The hasMPLS to set.
       * @return This builder for chaining.
       */
      public Builder setHasMPLS(boolean value) {
        
        hasMPLS_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * MPLS information
       * </pre>
       *
       * <code>bool HasMPLS = 53;</code>
       * @return This builder for chaining.
       */
      public Builder clearHasMPLS() {
        
        hasMPLS_ = false;
        onChanged();
        return this;
      }

      private int mPLSCount_ ;
      /**
       * <code>uint32 MPLSCount = 54;</code>
       * @return The mPLSCount.
       */
      @java.lang.Override
      public int getMPLSCount() {
        return mPLSCount_;
      }
      /**
       * <code>uint32 MPLSCount = 54;</code>
       * @param value The mPLSCount to set.
       * @return This builder for chaining.
       */
      public Builder setMPLSCount(int value) {
        
        mPLSCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 MPLSCount = 54;</code>
       * @return This builder for chaining.
       */
      public Builder clearMPLSCount() {
        
        mPLSCount_ = 0;
        onChanged();
        return this;
      }

      private int mPLS1TTL_ ;
      /**
       * <pre>
       * First TTL
       * </pre>
       *
       * <code>uint32 MPLS1TTL = 55;</code>
       * @return The mPLS1TTL.
       */
      @java.lang.Override
      public int getMPLS1TTL() {
        return mPLS1TTL_;
      }
      /**
       * <pre>
       * First TTL
       * </pre>
       *
       * <code>uint32 MPLS1TTL = 55;</code>
       * @param value The mPLS1TTL to set.
       * @return This builder for chaining.
       */
      public Builder setMPLS1TTL(int value) {
        
        mPLS1TTL_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * First TTL
       * </pre>
       *
       * <code>uint32 MPLS1TTL = 55;</code>
       * @return This builder for chaining.
       */
      public Builder clearMPLS1TTL() {
        
        mPLS1TTL_ = 0;
        onChanged();
        return this;
      }

      private int mPLS1Label_ ;
      /**
       * <pre>
       * First Label
       * </pre>
       *
       * <code>uint32 MPLS1Label = 56;</code>
       * @return The mPLS1Label.
       */
      @java.lang.Override
      public int getMPLS1Label() {
        return mPLS1Label_;
      }
      /**
       * <pre>
       * First Label
       * </pre>
       *
       * <code>uint32 MPLS1Label = 56;</code>
       * @param value The mPLS1Label to set.
       * @return This builder for chaining.
       */
      public Builder setMPLS1Label(int value) {
        
        mPLS1Label_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * First Label
       * </pre>
       *
       * <code>uint32 MPLS1Label = 56;</code>
       * @return This builder for chaining.
       */
      public Builder clearMPLS1Label() {
        
        mPLS1Label_ = 0;
        onChanged();
        return this;
      }

      private int mPLS2TTL_ ;
      /**
       * <pre>
       * Second TTL
       * </pre>
       *
       * <code>uint32 MPLS2TTL = 57;</code>
       * @return The mPLS2TTL.
       */
      @java.lang.Override
      public int getMPLS2TTL() {
        return mPLS2TTL_;
      }
      /**
       * <pre>
       * Second TTL
       * </pre>
       *
       * <code>uint32 MPLS2TTL = 57;</code>
       * @param value The mPLS2TTL to set.
       * @return This builder for chaining.
       */
      public Builder setMPLS2TTL(int value) {
        
        mPLS2TTL_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Second TTL
       * </pre>
       *
       * <code>uint32 MPLS2TTL = 57;</code>
       * @return This builder for chaining.
       */
      public Builder clearMPLS2TTL() {
        
        mPLS2TTL_ = 0;
        onChanged();
        return this;
      }

      private int mPLS2Label_ ;
      /**
       * <pre>
       * Second Label
       * </pre>
       *
       * <code>uint32 MPLS2Label = 58;</code>
       * @return The mPLS2Label.
       */
      @java.lang.Override
      public int getMPLS2Label() {
        return mPLS2Label_;
      }
      /**
       * <pre>
       * Second Label
       * </pre>
       *
       * <code>uint32 MPLS2Label = 58;</code>
       * @param value The mPLS2Label to set.
       * @return This builder for chaining.
       */
      public Builder setMPLS2Label(int value) {
        
        mPLS2Label_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Second Label
       * </pre>
       *
       * <code>uint32 MPLS2Label = 58;</code>
       * @return This builder for chaining.
       */
      public Builder clearMPLS2Label() {
        
        mPLS2Label_ = 0;
        onChanged();
        return this;
      }

      private int mPLS3TTL_ ;
      /**
       * <pre>
       * Third TTL
       * </pre>
       *
       * <code>uint32 MPLS3TTL = 59;</code>
       * @return The mPLS3TTL.
       */
      @java.lang.Override
      public int getMPLS3TTL() {
        return mPLS3TTL_;
      }
      /**
       * <pre>
       * Third TTL
       * </pre>
       *
       * <code>uint32 MPLS3TTL = 59;</code>
       * @param value The mPLS3TTL to set.
       * @return This builder for chaining.
       */
      public Builder setMPLS3TTL(int value) {
        
        mPLS3TTL_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Third TTL
       * </pre>
       *
       * <code>uint32 MPLS3TTL = 59;</code>
       * @return This builder for chaining.
       */
      public Builder clearMPLS3TTL() {
        
        mPLS3TTL_ = 0;
        onChanged();
        return this;
      }

      private int mPLS3Label_ ;
      /**
       * <pre>
       * Third Label
       * </pre>
       *
       * <code>uint32 MPLS3Label = 60;</code>
       * @return The mPLS3Label.
       */
      @java.lang.Override
      public int getMPLS3Label() {
        return mPLS3Label_;
      }
      /**
       * <pre>
       * Third Label
       * </pre>
       *
       * <code>uint32 MPLS3Label = 60;</code>
       * @param value The mPLS3Label to set.
       * @return This builder for chaining.
       */
      public Builder setMPLS3Label(int value) {
        
        mPLS3Label_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Third Label
       * </pre>
       *
       * <code>uint32 MPLS3Label = 60;</code>
       * @return This builder for chaining.
       */
      public Builder clearMPLS3Label() {
        
        mPLS3Label_ = 0;
        onChanged();
        return this;
      }

      private int mPLSLastTTL_ ;
      /**
       * <pre>
       * Last TTL
       * </pre>
       *
       * <code>uint32 MPLSLastTTL = 61;</code>
       * @return The mPLSLastTTL.
       */
      @java.lang.Override
      public int getMPLSLastTTL() {
        return mPLSLastTTL_;
      }
      /**
       * <pre>
       * Last TTL
       * </pre>
       *
       * <code>uint32 MPLSLastTTL = 61;</code>
       * @param value The mPLSLastTTL to set.
       * @return This builder for chaining.
       */
      public Builder setMPLSLastTTL(int value) {
        
        mPLSLastTTL_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Last TTL
       * </pre>
       *
       * <code>uint32 MPLSLastTTL = 61;</code>
       * @return This builder for chaining.
       */
      public Builder clearMPLSLastTTL() {
        
        mPLSLastTTL_ = 0;
        onChanged();
        return this;
      }

      private int mPLSLastLabel_ ;
      /**
       * <pre>
       * Last Label
       * </pre>
       *
       * <code>uint32 MPLSLastLabel = 62;</code>
       * @return The mPLSLastLabel.
       */
      @java.lang.Override
      public int getMPLSLastLabel() {
        return mPLSLastLabel_;
      }
      /**
       * <pre>
       * Last Label
       * </pre>
       *
       * <code>uint32 MPLSLastLabel = 62;</code>
       * @param value The mPLSLastLabel to set.
       * @return This builder for chaining.
       */
      public Builder setMPLSLastLabel(int value) {
        
        mPLSLastLabel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Last Label
       * </pre>
       *
       * <code>uint32 MPLSLastLabel = 62;</code>
       * @return This builder for chaining.
       */
      public Builder clearMPLSLastLabel() {
        
        mPLSLastLabel_ = 0;
        onChanged();
        return this;
      }

      private int cid_ ;
      /**
       * <pre>
       * bwNetFlow enricher fields
       * </pre>
       *
       * <code>uint32 Cid = 1000;</code>
       * @return The cid.
       */
      @java.lang.Override
      public int getCid() {
        return cid_;
      }
      /**
       * <pre>
       * bwNetFlow enricher fields
       * </pre>
       *
       * <code>uint32 Cid = 1000;</code>
       * @param value The cid to set.
       * @return This builder for chaining.
       */
      public Builder setCid(int value) {
        
        cid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * bwNetFlow enricher fields
       * </pre>
       *
       * <code>uint32 Cid = 1000;</code>
       * @return This builder for chaining.
       */
      public Builder clearCid() {
        
        cid_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object cidString_ = "";
      /**
       * <pre>
       * deprecated
       * </pre>
       *
       * <code>string CidString = 1001;</code>
       * @return The cidString.
       */
      public java.lang.String getCidString() {
        java.lang.Object ref = cidString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cidString_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * deprecated
       * </pre>
       *
       * <code>string CidString = 1001;</code>
       * @return The bytes for cidString.
       */
      public com.google.protobuf.ByteString
          getCidStringBytes() {
        java.lang.Object ref = cidString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cidString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * deprecated
       * </pre>
       *
       * <code>string CidString = 1001;</code>
       * @param value The cidString to set.
       * @return This builder for chaining.
       */
      public Builder setCidString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        cidString_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * deprecated
       * </pre>
       *
       * <code>string CidString = 1001;</code>
       * @return This builder for chaining.
       */
      public Builder clearCidString() {
        
        cidString_ = getDefaultInstance().getCidString();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * deprecated
       * </pre>
       *
       * <code>string CidString = 1001;</code>
       * @param value The bytes for cidString to set.
       * @return This builder for chaining.
       */
      public Builder setCidStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        cidString_ = value;
        onChanged();
        return this;
      }

      private int srcCid_ ;
      /**
       * <pre>
       * Src Customer ID - numerical ID, usually assigned by prefix
       * </pre>
       *
       * <code>uint32 SrcCid = 1012;</code>
       * @return The srcCid.
       */
      @java.lang.Override
      public int getSrcCid() {
        return srcCid_;
      }
      /**
       * <pre>
       * Src Customer ID - numerical ID, usually assigned by prefix
       * </pre>
       *
       * <code>uint32 SrcCid = 1012;</code>
       * @param value The srcCid to set.
       * @return This builder for chaining.
       */
      public Builder setSrcCid(int value) {
        
        srcCid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Src Customer ID - numerical ID, usually assigned by prefix
       * </pre>
       *
       * <code>uint32 SrcCid = 1012;</code>
       * @return This builder for chaining.
       */
      public Builder clearSrcCid() {
        
        srcCid_ = 0;
        onChanged();
        return this;
      }

      private int dstCid_ ;
      /**
       * <pre>
       * Dst Customer ID - numerical ID, usually assigned by prefix
       * </pre>
       *
       * <code>uint32 DstCid = 1013;</code>
       * @return The dstCid.
       */
      @java.lang.Override
      public int getDstCid() {
        return dstCid_;
      }
      /**
       * <pre>
       * Dst Customer ID - numerical ID, usually assigned by prefix
       * </pre>
       *
       * <code>uint32 DstCid = 1013;</code>
       * @param value The dstCid to set.
       * @return This builder for chaining.
       */
      public Builder setDstCid(int value) {
        
        dstCid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Dst Customer ID - numerical ID, usually assigned by prefix
       * </pre>
       *
       * <code>uint32 DstCid = 1013;</code>
       * @return This builder for chaining.
       */
      public Builder clearDstCid() {
        
        dstCid_ = 0;
        onChanged();
        return this;
      }

      private int normalized_ = 0;
      /**
       * <pre>
       * Normalization - whether the sampling rate is accounted for
       * </pre>
       *
       * <code>.flowmessageenriched.FlowMessage.NormalizedType Normalized = 1002;</code>
       * @return The enum numeric value on the wire for normalized.
       */
      @java.lang.Override public int getNormalizedValue() {
        return normalized_;
      }
      /**
       * <pre>
       * Normalization - whether the sampling rate is accounted for
       * </pre>
       *
       * <code>.flowmessageenriched.FlowMessage.NormalizedType Normalized = 1002;</code>
       * @param value The enum numeric value on the wire for normalized to set.
       * @return This builder for chaining.
       */
      public Builder setNormalizedValue(int value) {
        
        normalized_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Normalization - whether the sampling rate is accounted for
       * </pre>
       *
       * <code>.flowmessageenriched.FlowMessage.NormalizedType Normalized = 1002;</code>
       * @return The normalized.
       */
      @java.lang.Override
      public bwnetflow.FlowMessageEnrichedPb.FlowMessage.NormalizedType getNormalized() {
        @SuppressWarnings("deprecation")
        bwnetflow.FlowMessageEnrichedPb.FlowMessage.NormalizedType result = bwnetflow.FlowMessageEnrichedPb.FlowMessage.NormalizedType.valueOf(normalized_);
        return result == null ? bwnetflow.FlowMessageEnrichedPb.FlowMessage.NormalizedType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Normalization - whether the sampling rate is accounted for
       * </pre>
       *
       * <code>.flowmessageenriched.FlowMessage.NormalizedType Normalized = 1002;</code>
       * @param value The normalized to set.
       * @return This builder for chaining.
       */
      public Builder setNormalized(bwnetflow.FlowMessageEnrichedPb.FlowMessage.NormalizedType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        normalized_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Normalization - whether the sampling rate is accounted for
       * </pre>
       *
       * <code>.flowmessageenriched.FlowMessage.NormalizedType Normalized = 1002;</code>
       * @return This builder for chaining.
       */
      public Builder clearNormalized() {
        
        normalized_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object srcIfName_ = "";
      /**
       * <pre>
       * Fields for Interface Usability -- enriched using SNMP
       * </pre>
       *
       * <code>string SrcIfName = 1003;</code>
       * @return The srcIfName.
       */
      public java.lang.String getSrcIfName() {
        java.lang.Object ref = srcIfName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          srcIfName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Fields for Interface Usability -- enriched using SNMP
       * </pre>
       *
       * <code>string SrcIfName = 1003;</code>
       * @return The bytes for srcIfName.
       */
      public com.google.protobuf.ByteString
          getSrcIfNameBytes() {
        java.lang.Object ref = srcIfName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          srcIfName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Fields for Interface Usability -- enriched using SNMP
       * </pre>
       *
       * <code>string SrcIfName = 1003;</code>
       * @param value The srcIfName to set.
       * @return This builder for chaining.
       */
      public Builder setSrcIfName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        srcIfName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fields for Interface Usability -- enriched using SNMP
       * </pre>
       *
       * <code>string SrcIfName = 1003;</code>
       * @return This builder for chaining.
       */
      public Builder clearSrcIfName() {
        
        srcIfName_ = getDefaultInstance().getSrcIfName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fields for Interface Usability -- enriched using SNMP
       * </pre>
       *
       * <code>string SrcIfName = 1003;</code>
       * @param value The bytes for srcIfName to set.
       * @return This builder for chaining.
       */
      public Builder setSrcIfNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        srcIfName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object srcIfDesc_ = "";
      /**
       * <pre>
       * set to the descrition, filtered by a regex in the enricher
       * </pre>
       *
       * <code>string SrcIfDesc = 1004;</code>
       * @return The srcIfDesc.
       */
      public java.lang.String getSrcIfDesc() {
        java.lang.Object ref = srcIfDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          srcIfDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * set to the descrition, filtered by a regex in the enricher
       * </pre>
       *
       * <code>string SrcIfDesc = 1004;</code>
       * @return The bytes for srcIfDesc.
       */
      public com.google.protobuf.ByteString
          getSrcIfDescBytes() {
        java.lang.Object ref = srcIfDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          srcIfDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * set to the descrition, filtered by a regex in the enricher
       * </pre>
       *
       * <code>string SrcIfDesc = 1004;</code>
       * @param value The srcIfDesc to set.
       * @return This builder for chaining.
       */
      public Builder setSrcIfDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        srcIfDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * set to the descrition, filtered by a regex in the enricher
       * </pre>
       *
       * <code>string SrcIfDesc = 1004;</code>
       * @return This builder for chaining.
       */
      public Builder clearSrcIfDesc() {
        
        srcIfDesc_ = getDefaultInstance().getSrcIfDesc();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * set to the descrition, filtered by a regex in the enricher
       * </pre>
       *
       * <code>string SrcIfDesc = 1004;</code>
       * @param value The bytes for srcIfDesc to set.
       * @return This builder for chaining.
       */
      public Builder setSrcIfDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        srcIfDesc_ = value;
        onChanged();
        return this;
      }

      private int srcIfSpeed_ ;
      /**
       * <pre>
       * iface speed
       * </pre>
       *
       * <code>uint32 SrcIfSpeed = 1005;</code>
       * @return The srcIfSpeed.
       */
      @java.lang.Override
      public int getSrcIfSpeed() {
        return srcIfSpeed_;
      }
      /**
       * <pre>
       * iface speed
       * </pre>
       *
       * <code>uint32 SrcIfSpeed = 1005;</code>
       * @param value The srcIfSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setSrcIfSpeed(int value) {
        
        srcIfSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * iface speed
       * </pre>
       *
       * <code>uint32 SrcIfSpeed = 1005;</code>
       * @return This builder for chaining.
       */
      public Builder clearSrcIfSpeed() {
        
        srcIfSpeed_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object dstIfName_ = "";
      /**
       * <code>string DstIfName = 1006;</code>
       * @return The dstIfName.
       */
      public java.lang.String getDstIfName() {
        java.lang.Object ref = dstIfName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dstIfName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string DstIfName = 1006;</code>
       * @return The bytes for dstIfName.
       */
      public com.google.protobuf.ByteString
          getDstIfNameBytes() {
        java.lang.Object ref = dstIfName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dstIfName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string DstIfName = 1006;</code>
       * @param value The dstIfName to set.
       * @return This builder for chaining.
       */
      public Builder setDstIfName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dstIfName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string DstIfName = 1006;</code>
       * @return This builder for chaining.
       */
      public Builder clearDstIfName() {
        
        dstIfName_ = getDefaultInstance().getDstIfName();
        onChanged();
        return this;
      }
      /**
       * <code>string DstIfName = 1006;</code>
       * @param value The bytes for dstIfName to set.
       * @return This builder for chaining.
       */
      public Builder setDstIfNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dstIfName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object dstIfDesc_ = "";
      /**
       * <code>string DstIfDesc = 1007;</code>
       * @return The dstIfDesc.
       */
      public java.lang.String getDstIfDesc() {
        java.lang.Object ref = dstIfDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dstIfDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string DstIfDesc = 1007;</code>
       * @return The bytes for dstIfDesc.
       */
      public com.google.protobuf.ByteString
          getDstIfDescBytes() {
        java.lang.Object ref = dstIfDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dstIfDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string DstIfDesc = 1007;</code>
       * @param value The dstIfDesc to set.
       * @return This builder for chaining.
       */
      public Builder setDstIfDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dstIfDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string DstIfDesc = 1007;</code>
       * @return This builder for chaining.
       */
      public Builder clearDstIfDesc() {
        
        dstIfDesc_ = getDefaultInstance().getDstIfDesc();
        onChanged();
        return this;
      }
      /**
       * <code>string DstIfDesc = 1007;</code>
       * @param value The bytes for dstIfDesc to set.
       * @return This builder for chaining.
       */
      public Builder setDstIfDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dstIfDesc_ = value;
        onChanged();
        return this;
      }

      private int dstIfSpeed_ ;
      /**
       * <code>uint32 DstIfSpeed = 1008;</code>
       * @return The dstIfSpeed.
       */
      @java.lang.Override
      public int getDstIfSpeed() {
        return dstIfSpeed_;
      }
      /**
       * <code>uint32 DstIfSpeed = 1008;</code>
       * @param value The dstIfSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setDstIfSpeed(int value) {
        
        dstIfSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 DstIfSpeed = 1008;</code>
       * @return This builder for chaining.
       */
      public Builder clearDstIfSpeed() {
        
        dstIfSpeed_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object protoName_ = "";
      /**
       * <pre>
       * Protocol Name -- set for some well known protocols, based on Proto
       * </pre>
       *
       * <code>string ProtoName = 1009;</code>
       * @return The protoName.
       */
      public java.lang.String getProtoName() {
        java.lang.Object ref = protoName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          protoName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Protocol Name -- set for some well known protocols, based on Proto
       * </pre>
       *
       * <code>string ProtoName = 1009;</code>
       * @return The bytes for protoName.
       */
      public com.google.protobuf.ByteString
          getProtoNameBytes() {
        java.lang.Object ref = protoName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          protoName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Protocol Name -- set for some well known protocols, based on Proto
       * </pre>
       *
       * <code>string ProtoName = 1009;</code>
       * @param value The protoName to set.
       * @return This builder for chaining.
       */
      public Builder setProtoName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        protoName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Protocol Name -- set for some well known protocols, based on Proto
       * </pre>
       *
       * <code>string ProtoName = 1009;</code>
       * @return This builder for chaining.
       */
      public Builder clearProtoName() {
        
        protoName_ = getDefaultInstance().getProtoName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Protocol Name -- set for some well known protocols, based on Proto
       * </pre>
       *
       * <code>string ProtoName = 1009;</code>
       * @param value The bytes for protoName to set.
       * @return This builder for chaining.
       */
      public Builder setProtoNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        protoName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object remoteCountry_ = "";
      /**
       * <pre>
       * Geolocation -- set using the provided database
       * </pre>
       *
       * <code>string RemoteCountry = 1010;</code>
       * @return The remoteCountry.
       */
      public java.lang.String getRemoteCountry() {
        java.lang.Object ref = remoteCountry_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          remoteCountry_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Geolocation -- set using the provided database
       * </pre>
       *
       * <code>string RemoteCountry = 1010;</code>
       * @return The bytes for remoteCountry.
       */
      public com.google.protobuf.ByteString
          getRemoteCountryBytes() {
        java.lang.Object ref = remoteCountry_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          remoteCountry_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Geolocation -- set using the provided database
       * </pre>
       *
       * <code>string RemoteCountry = 1010;</code>
       * @param value The remoteCountry to set.
       * @return This builder for chaining.
       */
      public Builder setRemoteCountry(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        remoteCountry_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Geolocation -- set using the provided database
       * </pre>
       *
       * <code>string RemoteCountry = 1010;</code>
       * @return This builder for chaining.
       */
      public Builder clearRemoteCountry() {
        
        remoteCountry_ = getDefaultInstance().getRemoteCountry();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Geolocation -- set using the provided database
       * </pre>
       *
       * <code>string RemoteCountry = 1010;</code>
       * @param value The bytes for remoteCountry to set.
       * @return This builder for chaining.
       */
      public Builder setRemoteCountryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        remoteCountry_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object srcCountry_ = "";
      /**
       * <pre>
       * Src Geolocation
       * </pre>
       *
       * <code>string SrcCountry = 1014;</code>
       * @return The srcCountry.
       */
      public java.lang.String getSrcCountry() {
        java.lang.Object ref = srcCountry_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          srcCountry_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Src Geolocation
       * </pre>
       *
       * <code>string SrcCountry = 1014;</code>
       * @return The bytes for srcCountry.
       */
      public com.google.protobuf.ByteString
          getSrcCountryBytes() {
        java.lang.Object ref = srcCountry_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          srcCountry_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Src Geolocation
       * </pre>
       *
       * <code>string SrcCountry = 1014;</code>
       * @param value The srcCountry to set.
       * @return This builder for chaining.
       */
      public Builder setSrcCountry(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        srcCountry_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Src Geolocation
       * </pre>
       *
       * <code>string SrcCountry = 1014;</code>
       * @return This builder for chaining.
       */
      public Builder clearSrcCountry() {
        
        srcCountry_ = getDefaultInstance().getSrcCountry();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Src Geolocation
       * </pre>
       *
       * <code>string SrcCountry = 1014;</code>
       * @param value The bytes for srcCountry to set.
       * @return This builder for chaining.
       */
      public Builder setSrcCountryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        srcCountry_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object dstCountry_ = "";
      /**
       * <pre>
       * Dst Geolocation
       * </pre>
       *
       * <code>string DstCountry = 1015;</code>
       * @return The dstCountry.
       */
      public java.lang.String getDstCountry() {
        java.lang.Object ref = dstCountry_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dstCountry_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Dst Geolocation
       * </pre>
       *
       * <code>string DstCountry = 1015;</code>
       * @return The bytes for dstCountry.
       */
      public com.google.protobuf.ByteString
          getDstCountryBytes() {
        java.lang.Object ref = dstCountry_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dstCountry_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Dst Geolocation
       * </pre>
       *
       * <code>string DstCountry = 1015;</code>
       * @param value The dstCountry to set.
       * @return This builder for chaining.
       */
      public Builder setDstCountry(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dstCountry_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Dst Geolocation
       * </pre>
       *
       * <code>string DstCountry = 1015;</code>
       * @return This builder for chaining.
       */
      public Builder clearDstCountry() {
        
        dstCountry_ = getDefaultInstance().getDstCountry();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Dst Geolocation
       * </pre>
       *
       * <code>string DstCountry = 1015;</code>
       * @param value The bytes for dstCountry to set.
       * @return This builder for chaining.
       */
      public Builder setDstCountryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dstCountry_ = value;
        onChanged();
        return this;
      }

      private int remoteAddr_ = 0;
      /**
       * <pre>
       * RemoteAddr - which Addr field contains the remote/local address
       * </pre>
       *
       * <code>.flowmessageenriched.FlowMessage.RemoteAddrType RemoteAddr = 1011;</code>
       * @return The enum numeric value on the wire for remoteAddr.
       */
      @java.lang.Override public int getRemoteAddrValue() {
        return remoteAddr_;
      }
      /**
       * <pre>
       * RemoteAddr - which Addr field contains the remote/local address
       * </pre>
       *
       * <code>.flowmessageenriched.FlowMessage.RemoteAddrType RemoteAddr = 1011;</code>
       * @param value The enum numeric value on the wire for remoteAddr to set.
       * @return This builder for chaining.
       */
      public Builder setRemoteAddrValue(int value) {
        
        remoteAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * RemoteAddr - which Addr field contains the remote/local address
       * </pre>
       *
       * <code>.flowmessageenriched.FlowMessage.RemoteAddrType RemoteAddr = 1011;</code>
       * @return The remoteAddr.
       */
      @java.lang.Override
      public bwnetflow.FlowMessageEnrichedPb.FlowMessage.RemoteAddrType getRemoteAddr() {
        @SuppressWarnings("deprecation")
        bwnetflow.FlowMessageEnrichedPb.FlowMessage.RemoteAddrType result = bwnetflow.FlowMessageEnrichedPb.FlowMessage.RemoteAddrType.valueOf(remoteAddr_);
        return result == null ? bwnetflow.FlowMessageEnrichedPb.FlowMessage.RemoteAddrType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * RemoteAddr - which Addr field contains the remote/local address
       * </pre>
       *
       * <code>.flowmessageenriched.FlowMessage.RemoteAddrType RemoteAddr = 1011;</code>
       * @param value The remoteAddr to set.
       * @return This builder for chaining.
       */
      public Builder setRemoteAddr(bwnetflow.FlowMessageEnrichedPb.FlowMessage.RemoteAddrType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        remoteAddr_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * RemoteAddr - which Addr field contains the remote/local address
       * </pre>
       *
       * <code>.flowmessageenriched.FlowMessage.RemoteAddrType RemoteAddr = 1011;</code>
       * @return This builder for chaining.
       */
      public Builder clearRemoteAddr() {
        
        remoteAddr_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object note_ = "";
      /**
       * <pre>
       * free-form field to implement anything
       * </pre>
       *
       * <code>string Note = 1016;</code>
       * @return The note.
       */
      public java.lang.String getNote() {
        java.lang.Object ref = note_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          note_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * free-form field to implement anything
       * </pre>
       *
       * <code>string Note = 1016;</code>
       * @return The bytes for note.
       */
      public com.google.protobuf.ByteString
          getNoteBytes() {
        java.lang.Object ref = note_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          note_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * free-form field to implement anything
       * </pre>
       *
       * <code>string Note = 1016;</code>
       * @param value The note to set.
       * @return This builder for chaining.
       */
      public Builder setNote(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        note_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * free-form field to implement anything
       * </pre>
       *
       * <code>string Note = 1016;</code>
       * @return This builder for chaining.
       */
      public Builder clearNote() {
        
        note_ = getDefaultInstance().getNote();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * free-form field to implement anything
       * </pre>
       *
       * <code>string Note = 1016;</code>
       * @param value The bytes for note to set.
       * @return This builder for chaining.
       */
      public Builder setNoteBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        note_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flowmessageenriched.FlowMessage)
    }

    // @@protoc_insertion_point(class_scope:flowmessageenriched.FlowMessage)
    private static final bwnetflow.FlowMessageEnrichedPb.FlowMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new bwnetflow.FlowMessageEnrichedPb.FlowMessage();
    }

    public static bwnetflow.FlowMessageEnrichedPb.FlowMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlowMessage>
        PARSER = new com.google.protobuf.AbstractParser<FlowMessage>() {
      @java.lang.Override
      public FlowMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlowMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FlowMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlowMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public bwnetflow.FlowMessageEnrichedPb.FlowMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flowmessageenriched_FlowMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flowmessageenriched_FlowMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034flow-messages-enriched.proto\022\023flowmess" +
      "ageenriched\"\304\014\n\013FlowMessage\0227\n\004Type\030\001 \001(" +
      "\0162).flowmessageenriched.FlowMessage.Flow" +
      "Type\022\024\n\014TimeReceived\030\002 \001(\004\022\023\n\013SequenceNu" +
      "m\030\004 \001(\r\022\024\n\014SamplingRate\030\003 \001(\004\022\025\n\rFlowDir" +
      "ection\030* \001(\r\022\026\n\016SamplerAddress\030\013 \001(\014\022\025\n\r" +
      "TimeFlowStart\030& \001(\004\022\023\n\013TimeFlowEnd\030\005 \001(\004" +
      "\022\r\n\005Bytes\030\t \001(\004\022\017\n\007Packets\030\n \001(\004\022\017\n\007SrcA" +
      "ddr\030\006 \001(\014\022\017\n\007DstAddr\030\007 \001(\014\022\r\n\005Etype\030\036 \001(" +
      "\r\022\r\n\005Proto\030\024 \001(\r\022\017\n\007SrcPort\030\025 \001(\r\022\017\n\007Dst" +
      "Port\030\026 \001(\r\022\014\n\004InIf\030\022 \001(\r\022\r\n\005OutIf\030\023 \001(\r\022" +
      "\016\n\006SrcMac\030\033 \001(\004\022\016\n\006DstMac\030\034 \001(\004\022\017\n\007SrcVl" +
      "an\030! \001(\r\022\017\n\007DstVlan\030\" \001(\r\022\016\n\006VlanId\030\035 \001(" +
      "\r\022\024\n\014IngressVrfID\030\' \001(\r\022\023\n\013EgressVrfID\030(" +
      " \001(\r\022\r\n\005IPTos\030\027 \001(\r\022\030\n\020ForwardingStatus\030" +
      "\030 \001(\r\022\r\n\005IPTTL\030\031 \001(\r\022\020\n\010TCPFlags\030\032 \001(\r\022\020" +
      "\n\010IcmpType\030\037 \001(\r\022\020\n\010IcmpCode\030  \001(\r\022\025\n\rIP" +
      "v6FlowLabel\030% \001(\r\022\022\n\nFragmentId\030# \001(\r\022\026\n" +
      "\016FragmentOffset\030$ \001(\r\022\027\n\017BiFlowDirection" +
      "\030) \001(\r\022\r\n\005SrcAS\030\016 \001(\r\022\r\n\005DstAS\030\017 \001(\r\022\017\n\007" +
      "NextHop\030\014 \001(\014\022\021\n\tNextHopAS\030\r \001(\r\022\016\n\006SrcN" +
      "et\030\020 \001(\r\022\016\n\006DstNet\030\021 \001(\r\022\017\n\007HasMPLS\0305 \001(" +
      "\010\022\021\n\tMPLSCount\0306 \001(\r\022\020\n\010MPLS1TTL\0307 \001(\r\022\022" +
      "\n\nMPLS1Label\0308 \001(\r\022\020\n\010MPLS2TTL\0309 \001(\r\022\022\n\n" +
      "MPLS2Label\030: \001(\r\022\020\n\010MPLS3TTL\030; \001(\r\022\022\n\nMP" +
      "LS3Label\030< \001(\r\022\023\n\013MPLSLastTTL\030= \001(\r\022\025\n\rM" +
      "PLSLastLabel\030> \001(\r\022\014\n\003Cid\030\350\007 \001(\r\022\022\n\tCidS" +
      "tring\030\351\007 \001(\t\022\017\n\006SrcCid\030\364\007 \001(\r\022\017\n\006DstCid\030" +
      "\365\007 \001(\r\022D\n\nNormalized\030\352\007 \001(\0162/.flowmessag" +
      "eenriched.FlowMessage.NormalizedType\022\022\n\t" +
      "SrcIfName\030\353\007 \001(\t\022\022\n\tSrcIfDesc\030\354\007 \001(\t\022\023\n\n" +
      "SrcIfSpeed\030\355\007 \001(\r\022\022\n\tDstIfName\030\356\007 \001(\t\022\022\n" +
      "\tDstIfDesc\030\357\007 \001(\t\022\023\n\nDstIfSpeed\030\360\007 \001(\r\022\022" +
      "\n\tProtoName\030\361\007 \001(\t\022\026\n\rRemoteCountry\030\362\007 \001" +
      "(\t\022\023\n\nSrcCountry\030\366\007 \001(\t\022\023\n\nDstCountry\030\367\007" +
      " \001(\t\022D\n\nRemoteAddr\030\363\007 \001(\0162/.flowmessagee" +
      "nriched.FlowMessage.RemoteAddrType\022\r\n\004No" +
      "te\030\370\007 \001(\t\"S\n\010FlowType\022\017\n\013FLOWUNKNOWN\020\000\022\013" +
      "\n\007SFLOW_5\020\001\022\016\n\nNETFLOW_V5\020\002\022\016\n\nNETFLOW_V" +
      "9\020\003\022\t\n\005IPFIX\020\004\"!\n\016NormalizedType\022\006\n\002No\020\000" +
      "\022\007\n\003Yes\020\001\"/\n\016RemoteAddrType\022\013\n\007Neither\020\000" +
      "\022\007\n\003Src\020\001\022\007\n\003Dst\020\002BX\n\tbwnetflowB\025FlowMes" +
      "sageEnrichedPbZ4github.com/bwNetFlow/pro" +
      "tobuf/go;flowmessageenrichedb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_flowmessageenriched_FlowMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flowmessageenriched_FlowMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flowmessageenriched_FlowMessage_descriptor,
        new java.lang.String[] { "Type", "TimeReceived", "SequenceNum", "SamplingRate", "FlowDirection", "SamplerAddress", "TimeFlowStart", "TimeFlowEnd", "Bytes", "Packets", "SrcAddr", "DstAddr", "Etype", "Proto", "SrcPort", "DstPort", "InIf", "OutIf", "SrcMac", "DstMac", "SrcVlan", "DstVlan", "VlanId", "IngressVrfID", "EgressVrfID", "IPTos", "ForwardingStatus", "IPTTL", "TCPFlags", "IcmpType", "IcmpCode", "IPv6FlowLabel", "FragmentId", "FragmentOffset", "BiFlowDirection", "SrcAS", "DstAS", "NextHop", "NextHopAS", "SrcNet", "DstNet", "HasMPLS", "MPLSCount", "MPLS1TTL", "MPLS1Label", "MPLS2TTL", "MPLS2Label", "MPLS3TTL", "MPLS3Label", "MPLSLastTTL", "MPLSLastLabel", "Cid", "CidString", "SrcCid", "DstCid", "Normalized", "SrcIfName", "SrcIfDesc", "SrcIfSpeed", "DstIfName", "DstIfDesc", "DstIfSpeed", "ProtoName", "RemoteCountry", "SrcCountry", "DstCountry", "RemoteAddr", "Note", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
